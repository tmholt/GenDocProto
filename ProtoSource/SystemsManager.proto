
syntax = "proto3";


import "google/protobuf/empty.proto";
import "Common.proto";
import "ServiceStatus.proto";

package saic.valkyrie.sdk.generated;
option java_package = "saic.valkyrie.sdk.generated";
option java_outer_classname = "SystemsManagerProto";
option csharp_namespace = "SAIC.Valkyrie.Api.V1";

//
// The systems manager service provides public calls into the VALKYRIE system for high-level systems io,
// such as receiving server's services status, client services status, alerts, and heartbeats.
// It also supports loading of initial configuration values such as system protected areas.
//
service SystemsManager {

  //
  // getVersion
  // Get the version of the systems manager. this is a unary blocking call.
  //
  rpc getVersion (google.protobuf.Empty) returns (VersionInfo);

  //
  // getStatuses
  // Get the most recent set of system statuses maintained within the systems manager.
  // Input parameters: none
  // Output: ServiceSubscriptionResponse, containing one response per system
  //
  rpc getStatuses (google.protobuf.Empty) returns (ServiceSubscriptionResponse);

  //
  // publish
  // A publish call from a Valkyrie service. Provides status from one Valkyrie service
  //
  rpc publish (ServiceStatusInfo) returns (ResponseInfo);

  //
  // subscribe
  // Ability for a client to receive status for services within the system on a periodic basis -
  // both from DON and SDK services.
  //
  rpc subscribe (ClientSystemsSubscription) returns (stream ServiceSubscriptionResponse);
}

//
// ClientSystemSubscription
// inbound subscription details for this client. ability to subscribe to different
// event types for system services.
//
message ClientSystemsSubscription {
  repeated string services = 1; // filtering for which service names to receive status for. if empty no filtering.
  repeated ServiceTypeEnum types = 2; // filtering for which service types to receive status for. if empty no filtering.
}



