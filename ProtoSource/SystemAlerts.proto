/*------------------------------------------------------------------------------
| SAIC PROPRIETARY INFORMATION
|-------------------------------------------------------------------------------
| The information in this document is proprietary to SAIC. It may not be used,
| reproduced, disclosed, or exported without the written approval of SAIC.
------------------------------------------------------------------------------*/

syntax = "proto3";

import "Common.proto";

package saic.valkyrie.sdk.generated;
option java_package = "saic.valkyrie.sdk.generated";
option java_outer_classname = "SystemAlertsProto";
option csharp_namespace = "SAIC.Valkyrie.Api.V1";


//
// The SystemAlertPriority type enumerates importance levels for an alert.
//
enum SystemAlertPriority {
  ALERT_PRIORITY_LOW = 0;
  ALERT_PRIORITY_MEDIUM = 1;
  ALERT_PRIORITY_HIGH = 2;
  ALERT_PRIORITY_CRITICAL = 3;
}

//
// The SystemAlertType enumeration defines the specific kind for one alert.
//
enum SystemAlertType
{
  ALERT_UNKNOWN = 0; // unknown/default value
  ALERT_DEVICE_STATUS_CHANGE = 1; // A server-side device changed its status.
  ALERT_SERVICE_STATUS_CHANGE = 2; // A service has changed its status.
  ALERT_CLIENT_STATUS_CHANGE = 3; // An HMI client experienced changed status.
  ALERT_DEVICE_WARNING_CHANGE = 4; // The set of warnings on a device has changed
  ALERT_SERVICE_ERROR = 5; // A service has encountered an error.
  ALERT_TRACK_ERROR = 6; // A track from a device contained erroneous data.
}

//
// The SystemAlert message contains details about one system alert - which is used to indicate important
// events and changes in the system, and are broadcast to operators of the system.
//
message SystemAlert {
  int64 timestamp = 1; // alert creation timestamp (milliseconds since epoch)
  SystemAlertType type = 2; // Type to indicate what this alert is for.

  // the service, device, or HMI id that the alert is for.
  // If the FC goes offline (for example), this ID should be FireController.
  // For a device alert, this would be the device id.
  string sourceId = 3;
  SystemAlertPriority priority = 4; // Priority indicates how in-your-face this alert will be to the operator.

  string title = 5; // A title to display on the client for this alert.
  string description = 6; // A description to display on a client this alert.

  // details for change in status (if applicable)
  SystemAlertStatusChanges status = 7;

  oneof details {
    ClientStatusChangeDetails client = 8; // Fields specific to type = ALERT_CLIENT_STATUS_CHANGE
  }

  string alertId = 9; // UUID string for this alert
}

//
// The SystemAlertStatusChanges message contains details about a change in status
// for a device/service/client, this message details that change in operational status.
//
message SystemAlertStatusChanges {
  OperationalStatus previousStatus = 1; // previous state for source item
  OperationalStatus newStatus = 2; // current state for this source item
}

//
// ClientStatusChangeDetails
// Provides fields specific to type = ALERT_CLIENT_STATUS_CHANGE when a client (hmi) connects or disconnects.
//
message ClientStatusChangeDetails {
  int32 clientCount = 1; // number of active clients. can trigger auto-responses if count gets to 0
}
