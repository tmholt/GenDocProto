// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Drawing.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SAIC.Valkyrie.Api.V1 {

  /// <summary>Holder for reflection information generated from Drawing.proto</summary>
  public static partial class DrawingReflection {

    #region Descriptor
    /// <summary>File descriptor for Drawing.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DrawingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1EcmF3aW5nLnByb3RvEhtzYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQa",
            "IGdvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvGgxDb21tb24ucHJv",
            "dG8iNwoJQVJHQkNvbG9yEgkKAWEYASABKA0SCQoBchgCIAEoDRIJCgFnGAMg",
            "ASgNEgkKAWIYBCABKA0ingEKE1NoYXBlRmlsbEF0dHJpYnV0ZXMSOQoJZmls",
            "bENvbG9yGAEgASgLMiYuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkFS",
            "R0JDb2xvchI5CglsaW5lQ29sb3IYAiABKAsyJi5zYWljLnZhbGt5cmllLnNk",
            "ay5nZW5lcmF0ZWQuQVJHQkNvbG9yEhEKCWxpbmVXaWR0aBgDIAEoDSJeCg5M",
            "aW5lQXR0cmlidXRlcxI5CglsaW5lQ29sb3IYASABKAsyJi5zYWljLnZhbGt5",
            "cmllLnNkay5nZW5lcmF0ZWQuQVJHQkNvbG9yEhEKCWxpbmVXaWR0aBgCIAEo",
            "DSJxCg5UZXh0QXR0cmlidXRlcxI5Cgl0ZXh0Q29sb3IYASABKAsyJi5zYWlj",
            "LnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuQVJHQkNvbG9yEhIKCmZvbnRGYW1p",
            "bHkYAiABKAkSEAoIZm9udFNpemUYAyABKA0ijwEKDFBvbHlnb25TaGFwZRI+",
            "CgRmaWxsGAEgASgLMjAuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLlNo",
            "YXBlRmlsbEF0dHJpYnV0ZXMSPwoLY29vcmRpbmF0ZXMYAiADKAsyKi5zYWlj",
            "LnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuQ29vcmRpbmF0ZUxsYSKLAQoNUG9s",
            "eUxpbmVTaGFwZRI5CgRmaWxsGAEgASgLMisuc2FpYy52YWxreXJpZS5zZGsu",
            "Z2VuZXJhdGVkLkxpbmVBdHRyaWJ1dGVzEj8KC2Nvb3JkaW5hdGVzGAIgAygL",
            "Miouc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkNvb3JkaW5hdGVMbGEi",
            "kAEKCVRleHRTaGFwZRI5CgRmaWxsGAEgASgLMisuc2FpYy52YWxreXJpZS5z",
            "ZGsuZ2VuZXJhdGVkLlRleHRBdHRyaWJ1dGVzEgwKBHRleHQYAiABKAkSOgoG",
            "b3JpZ2luGAMgASgLMiouc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkNv",
            "b3JkaW5hdGVMbGEimQEKC0NpcmNsZVNoYXBlEj4KBGZpbGwYASABKAsyMC5z",
            "YWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuU2hhcGVGaWxsQXR0cmlidXRl",
            "cxI6CgZvcmlnaW4YAiABKAsyKi5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0",
            "ZWQuQ29vcmRpbmF0ZUxsYRIOCgZyYWRpdXMYAyABKAEiswIKC1NlY3RvclNo",
            "YXBlEj4KBGZpbGwYASABKAsyMC5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0",
            "ZWQuU2hhcGVGaWxsQXR0cmlidXRlcxI6CgZvcmlnaW4YAiABKAsyKi5zYWlj",
            "LnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuQ29vcmRpbmF0ZUxsYRITCgtpbm5l",
            "clJhZGl1cxgDIAEoARITCgtvdXRlclJhZGl1cxgEIAEoARI/Cg1zdGFydGlu",
            "Z0FuZ2xlGAUgASgLMiguc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLk9y",
            "aWVudGF0aW9uEj0KC2VuZGluZ0FuZ2xlGAYgASgLMiguc2FpYy52YWxreXJp",
            "ZS5zZGsuZ2VuZXJhdGVkLk9yaWVudGF0aW9uIqABChBQb2ludE1hcmtlclNo",
            "YXBlEjkKCWZpbGxDb2xvchgBIAEoCzImLnNhaWMudmFsa3lyaWUuc2RrLmdl",
            "bmVyYXRlZC5BUkdCQ29sb3ISOgoGb3JpZ2luGAIgASgLMiouc2FpYy52YWxr",
            "eXJpZS5zZGsuZ2VuZXJhdGVkLkNvb3JkaW5hdGVMbGESFQoNc2NhbGluZ0Zh",
            "Y3RvchgDIAEoASrtAQoJU2hhcGVUeXBlEh4KDVNIQVBFX1VOS05PV04QABoL",
            "yvsaB1Vua25vd24SHAoMU0hBUEVfQ0lSQ0xFEAEaCsr7GgZDaXJjbGUSHgoN",
            "U0hBUEVfUE9MWUdPThACGgvK+xoHUG9seWdvbhIhCg5TSEFQRV9QT0xZTElO",
            "RRADGg3K+xoJUG9seS1saW5lEhgKClNIQVBFX1RFWFQQBBoIyvsaBFRleHQS",
            "KAoSU0hBUEVfUE9JTlRfTUFSS0VSEAUaEMr7GgxTaW5nbGUgcG9pbnQSGwoM",
            "U0hBUEVfU0VDVE9SEAYaCcr7GgVEb251dEJoChtzYWljLnZhbGt5cmllLnNk",
            "ay5nZW5lcmF0ZWRCDERyYXdpbmdQcm90b1okZ2l0aHViLmNvbS90bWhvbHQv",
            "R2VuRG9jUHJvdG8vc2RrL2dvqgIUU0FJQy5WYWxreXJpZS5BcGkuVjFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::SAIC.Valkyrie.Api.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SAIC.Valkyrie.Api.V1.ShapeType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ARGBColor), global::SAIC.Valkyrie.Api.V1.ARGBColor.Parser, new[]{ "A", "R", "G", "B" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes), global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes.Parser, new[]{ "FillColor", "LineColor", "LineWidth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.LineAttributes), global::SAIC.Valkyrie.Api.V1.LineAttributes.Parser, new[]{ "LineColor", "LineWidth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TextAttributes), global::SAIC.Valkyrie.Api.V1.TextAttributes.Parser, new[]{ "TextColor", "FontFamily", "FontSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.PolygonShape), global::SAIC.Valkyrie.Api.V1.PolygonShape.Parser, new[]{ "Fill", "Coordinates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.PolyLineShape), global::SAIC.Valkyrie.Api.V1.PolyLineShape.Parser, new[]{ "Fill", "Coordinates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TextShape), global::SAIC.Valkyrie.Api.V1.TextShape.Parser, new[]{ "Fill", "Text", "Origin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.CircleShape), global::SAIC.Valkyrie.Api.V1.CircleShape.Parser, new[]{ "Fill", "Origin", "Radius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.SectorShape), global::SAIC.Valkyrie.Api.V1.SectorShape.Parser, new[]{ "Fill", "Origin", "InnerRadius", "OuterRadius", "StartingAngle", "EndingAngle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.PointMarkerShape), global::SAIC.Valkyrie.Api.V1.PointMarkerShape.Parser, new[]{ "FillColor", "Origin", "ScalingFactor" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///
  /// The ShapeType enumeration contains the set of available drawing shapes.
  /// </summary>
  public enum ShapeType {
    /// <summary>
    /// not set / error
    /// </summary>
    [pbr::OriginalName("SHAPE_UNKNOWN")] ShapeUnknown = 0,
    /// <summary>
    /// circle shape
    /// </summary>
    [pbr::OriginalName("SHAPE_CIRCLE")] ShapeCircle = 1,
    /// <summary>
    /// polygon shape
    /// </summary>
    [pbr::OriginalName("SHAPE_POLYGON")] ShapePolygon = 2,
    /// <summary>
    /// polyline shape
    /// </summary>
    [pbr::OriginalName("SHAPE_POLYLINE")] ShapePolyline = 3,
    /// <summary>
    /// text shape
    /// </summary>
    [pbr::OriginalName("SHAPE_TEXT")] ShapeText = 4,
    /// <summary>
    /// point shape
    /// </summary>
    [pbr::OriginalName("SHAPE_POINT_MARKER")] ShapePointMarker = 5,
    /// <summary>
    /// Annulus Sector shape
    /// </summary>
    [pbr::OriginalName("SHAPE_SECTOR")] ShapeSector = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  ///
  /// The ARGBColor message provides details to describe a color.
  /// Color is encoded such that:
  /// &lt;code>
  /// int color = (alpha &amp; 0xff) &lt;&lt; 24 | (red &amp; 0xff) &lt;&lt; 16 | (green &amp; 0xff) &lt;&lt; 8 | (blue &amp; 0xff);
  /// &lt;/code>
  /// </summary>
  public sealed partial class ARGBColor : pb::IMessage<ARGBColor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ARGBColor> _parser = new pb::MessageParser<ARGBColor>(() => new ARGBColor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ARGBColor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARGBColor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARGBColor(ARGBColor other) : this() {
      a_ = other.a_;
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARGBColor Clone() {
      return new ARGBColor(this);
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 1;
    private uint a_;
    /// <summary>
    /// alpha, 0-255
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 2;
    private uint r_;
    /// <summary>
    /// red, 0-255
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 3;
    private uint g_;
    /// <summary>
    /// green, 0-255
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 4;
    private uint b_;
    /// <summary>
    /// blue, 0-255
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ARGBColor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ARGBColor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (A != other.A) return false;
      if (R != other.R) return false;
      if (G != other.G) return false;
      if (B != other.B) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (A != 0) hash ^= A.GetHashCode();
      if (R != 0) hash ^= R.GetHashCode();
      if (G != 0) hash ^= G.GetHashCode();
      if (B != 0) hash ^= B.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (A != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(A);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(R);
      }
      if (G != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(G);
      }
      if (B != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(B);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (A != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(A);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(R);
      }
      if (G != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(G);
      }
      if (B != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(B);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (A != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(A);
      }
      if (R != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(R);
      }
      if (G != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(G);
      }
      if (B != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(B);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ARGBColor other) {
      if (other == null) {
        return;
      }
      if (other.A != 0) {
        A = other.A;
      }
      if (other.R != 0) {
        R = other.R;
      }
      if (other.G != 0) {
        G = other.G;
      }
      if (other.B != 0) {
        B = other.B;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            A = input.ReadUInt32();
            break;
          }
          case 16: {
            R = input.ReadUInt32();
            break;
          }
          case 24: {
            G = input.ReadUInt32();
            break;
          }
          case 32: {
            B = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            A = input.ReadUInt32();
            break;
          }
          case 16: {
            R = input.ReadUInt32();
            break;
          }
          case 24: {
            G = input.ReadUInt32();
            break;
          }
          case 32: {
            B = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The ShapeFillAttributes message contains details on how to draw a closed shape.
  /// </summary>
  public sealed partial class ShapeFillAttributes : pb::IMessage<ShapeFillAttributes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShapeFillAttributes> _parser = new pb::MessageParser<ShapeFillAttributes>(() => new ShapeFillAttributes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShapeFillAttributes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShapeFillAttributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShapeFillAttributes(ShapeFillAttributes other) : this() {
      fillColor_ = other.fillColor_ != null ? other.fillColor_.Clone() : null;
      lineColor_ = other.lineColor_ != null ? other.lineColor_.Clone() : null;
      lineWidth_ = other.lineWidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShapeFillAttributes Clone() {
      return new ShapeFillAttributes(this);
    }

    /// <summary>Field number for the "fillColor" field.</summary>
    public const int FillColorFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ARGBColor fillColor_;
    /// <summary>
    /// fill color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ARGBColor FillColor {
      get { return fillColor_; }
      set {
        fillColor_ = value;
      }
    }

    /// <summary>Field number for the "lineColor" field.</summary>
    public const int LineColorFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.ARGBColor lineColor_;
    /// <summary>
    /// line color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ARGBColor LineColor {
      get { return lineColor_; }
      set {
        lineColor_ = value;
      }
    }

    /// <summary>Field number for the "lineWidth" field.</summary>
    public const int LineWidthFieldNumber = 3;
    private uint lineWidth_;
    /// <summary>
    /// line width in pixels
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LineWidth {
      get { return lineWidth_; }
      set {
        lineWidth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShapeFillAttributes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShapeFillAttributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FillColor, other.FillColor)) return false;
      if (!object.Equals(LineColor, other.LineColor)) return false;
      if (LineWidth != other.LineWidth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fillColor_ != null) hash ^= FillColor.GetHashCode();
      if (lineColor_ != null) hash ^= LineColor.GetHashCode();
      if (LineWidth != 0) hash ^= LineWidth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fillColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FillColor);
      }
      if (lineColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LineColor);
      }
      if (LineWidth != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LineWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fillColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FillColor);
      }
      if (lineColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LineColor);
      }
      if (LineWidth != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LineWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fillColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FillColor);
      }
      if (lineColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LineColor);
      }
      if (LineWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LineWidth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShapeFillAttributes other) {
      if (other == null) {
        return;
      }
      if (other.fillColor_ != null) {
        if (fillColor_ == null) {
          FillColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
        }
        FillColor.MergeFrom(other.FillColor);
      }
      if (other.lineColor_ != null) {
        if (lineColor_ == null) {
          LineColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
        }
        LineColor.MergeFrom(other.LineColor);
      }
      if (other.LineWidth != 0) {
        LineWidth = other.LineWidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fillColor_ == null) {
              FillColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 18: {
            if (lineColor_ == null) {
              LineColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(LineColor);
            break;
          }
          case 24: {
            LineWidth = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fillColor_ == null) {
              FillColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 18: {
            if (lineColor_ == null) {
              LineColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(LineColor);
            break;
          }
          case 24: {
            LineWidth = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The LineAttributes message contains details on how to draw a line.
  /// </summary>
  public sealed partial class LineAttributes : pb::IMessage<LineAttributes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LineAttributes> _parser = new pb::MessageParser<LineAttributes>(() => new LineAttributes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LineAttributes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineAttributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineAttributes(LineAttributes other) : this() {
      lineColor_ = other.lineColor_ != null ? other.lineColor_.Clone() : null;
      lineWidth_ = other.lineWidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineAttributes Clone() {
      return new LineAttributes(this);
    }

    /// <summary>Field number for the "lineColor" field.</summary>
    public const int LineColorFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ARGBColor lineColor_;
    /// <summary>
    /// line color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ARGBColor LineColor {
      get { return lineColor_; }
      set {
        lineColor_ = value;
      }
    }

    /// <summary>Field number for the "lineWidth" field.</summary>
    public const int LineWidthFieldNumber = 2;
    private uint lineWidth_;
    /// <summary>
    /// line width in pixels
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LineWidth {
      get { return lineWidth_; }
      set {
        lineWidth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LineAttributes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LineAttributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LineColor, other.LineColor)) return false;
      if (LineWidth != other.LineWidth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (lineColor_ != null) hash ^= LineColor.GetHashCode();
      if (LineWidth != 0) hash ^= LineWidth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lineColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LineColor);
      }
      if (LineWidth != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LineWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lineColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LineColor);
      }
      if (LineWidth != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LineWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (lineColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LineColor);
      }
      if (LineWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LineWidth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LineAttributes other) {
      if (other == null) {
        return;
      }
      if (other.lineColor_ != null) {
        if (lineColor_ == null) {
          LineColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
        }
        LineColor.MergeFrom(other.LineColor);
      }
      if (other.LineWidth != 0) {
        LineWidth = other.LineWidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lineColor_ == null) {
              LineColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(LineColor);
            break;
          }
          case 16: {
            LineWidth = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lineColor_ == null) {
              LineColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(LineColor);
            break;
          }
          case 16: {
            LineWidth = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TextAttributes message contains details on how to draw text.
  /// </summary>
  public sealed partial class TextAttributes : pb::IMessage<TextAttributes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextAttributes> _parser = new pb::MessageParser<TextAttributes>(() => new TextAttributes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextAttributes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextAttributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextAttributes(TextAttributes other) : this() {
      textColor_ = other.textColor_ != null ? other.textColor_.Clone() : null;
      fontFamily_ = other.fontFamily_;
      fontSize_ = other.fontSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextAttributes Clone() {
      return new TextAttributes(this);
    }

    /// <summary>Field number for the "textColor" field.</summary>
    public const int TextColorFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ARGBColor textColor_;
    /// <summary>
    /// text color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ARGBColor TextColor {
      get { return textColor_; }
      set {
        textColor_ = value;
      }
    }

    /// <summary>Field number for the "fontFamily" field.</summary>
    public const int FontFamilyFieldNumber = 2;
    private string fontFamily_ = "";
    /// <summary>
    /// font to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FontFamily {
      get { return fontFamily_; }
      set {
        fontFamily_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fontSize" field.</summary>
    public const int FontSizeFieldNumber = 3;
    private uint fontSize_;
    /// <summary>
    /// font size, in points
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FontSize {
      get { return fontSize_; }
      set {
        fontSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextAttributes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextAttributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TextColor, other.TextColor)) return false;
      if (FontFamily != other.FontFamily) return false;
      if (FontSize != other.FontSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (textColor_ != null) hash ^= TextColor.GetHashCode();
      if (FontFamily.Length != 0) hash ^= FontFamily.GetHashCode();
      if (FontSize != 0) hash ^= FontSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (textColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TextColor);
      }
      if (FontFamily.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FontFamily);
      }
      if (FontSize != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FontSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (textColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TextColor);
      }
      if (FontFamily.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FontFamily);
      }
      if (FontSize != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(FontSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (textColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextColor);
      }
      if (FontFamily.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FontFamily);
      }
      if (FontSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FontSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextAttributes other) {
      if (other == null) {
        return;
      }
      if (other.textColor_ != null) {
        if (textColor_ == null) {
          TextColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
        }
        TextColor.MergeFrom(other.TextColor);
      }
      if (other.FontFamily.Length != 0) {
        FontFamily = other.FontFamily;
      }
      if (other.FontSize != 0) {
        FontSize = other.FontSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (textColor_ == null) {
              TextColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(TextColor);
            break;
          }
          case 18: {
            FontFamily = input.ReadString();
            break;
          }
          case 24: {
            FontSize = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (textColor_ == null) {
              TextColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(TextColor);
            break;
          }
          case 18: {
            FontFamily = input.ReadString();
            break;
          }
          case 24: {
            FontSize = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The PolygonShape message contains the details for a closed polygon shape.
  /// </summary>
  public sealed partial class PolygonShape : pb::IMessage<PolygonShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PolygonShape> _parser = new pb::MessageParser<PolygonShape>(() => new PolygonShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PolygonShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolygonShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolygonShape(PolygonShape other) : this() {
      fill_ = other.fill_ != null ? other.fill_.Clone() : null;
      coordinates_ = other.coordinates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolygonShape Clone() {
      return new PolygonShape(this);
    }

    /// <summary>Field number for the "fill" field.</summary>
    public const int FillFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes fill_;
    /// <summary>
    /// drawing attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes Fill {
      get { return fill_; }
      set {
        fill_ = value;
      }
    }

    /// <summary>Field number for the "coordinates" field.</summary>
    public const int CoordinatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.CoordinateLla> _repeated_coordinates_codec
        = pb::FieldCodec.ForMessage(18, global::SAIC.Valkyrie.Api.V1.CoordinateLla.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.CoordinateLla> coordinates_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.CoordinateLla>();
    /// <summary>
    /// vertex points. Do not repeat first point, this will happen automatically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.CoordinateLla> Coordinates {
      get { return coordinates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PolygonShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PolygonShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Fill, other.Fill)) return false;
      if(!coordinates_.Equals(other.coordinates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fill_ != null) hash ^= Fill.GetHashCode();
      hash ^= coordinates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      coordinates_.WriteTo(output, _repeated_coordinates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      coordinates_.WriteTo(ref output, _repeated_coordinates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fill);
      }
      size += coordinates_.CalculateSize(_repeated_coordinates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PolygonShape other) {
      if (other == null) {
        return;
      }
      if (other.fill_ != null) {
        if (fill_ == null) {
          Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
        }
        Fill.MergeFrom(other.Fill);
      }
      coordinates_.Add(other.coordinates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            coordinates_.AddEntriesFrom(input, _repeated_coordinates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            coordinates_.AddEntriesFrom(ref input, _repeated_coordinates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The PolyLineShape message contains the details for a multi-segmented line shape.
  /// </summary>
  public sealed partial class PolyLineShape : pb::IMessage<PolyLineShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PolyLineShape> _parser = new pb::MessageParser<PolyLineShape>(() => new PolyLineShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PolyLineShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolyLineShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolyLineShape(PolyLineShape other) : this() {
      fill_ = other.fill_ != null ? other.fill_.Clone() : null;
      coordinates_ = other.coordinates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolyLineShape Clone() {
      return new PolyLineShape(this);
    }

    /// <summary>Field number for the "fill" field.</summary>
    public const int FillFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.LineAttributes fill_;
    /// <summary>
    /// drawing attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.LineAttributes Fill {
      get { return fill_; }
      set {
        fill_ = value;
      }
    }

    /// <summary>Field number for the "coordinates" field.</summary>
    public const int CoordinatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.CoordinateLla> _repeated_coordinates_codec
        = pb::FieldCodec.ForMessage(18, global::SAIC.Valkyrie.Api.V1.CoordinateLla.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.CoordinateLla> coordinates_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.CoordinateLla>();
    /// <summary>
    /// vertex points
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.CoordinateLla> Coordinates {
      get { return coordinates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PolyLineShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PolyLineShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Fill, other.Fill)) return false;
      if(!coordinates_.Equals(other.coordinates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fill_ != null) hash ^= Fill.GetHashCode();
      hash ^= coordinates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      coordinates_.WriteTo(output, _repeated_coordinates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      coordinates_.WriteTo(ref output, _repeated_coordinates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fill);
      }
      size += coordinates_.CalculateSize(_repeated_coordinates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PolyLineShape other) {
      if (other == null) {
        return;
      }
      if (other.fill_ != null) {
        if (fill_ == null) {
          Fill = new global::SAIC.Valkyrie.Api.V1.LineAttributes();
        }
        Fill.MergeFrom(other.Fill);
      }
      coordinates_.Add(other.coordinates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.LineAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            coordinates_.AddEntriesFrom(input, _repeated_coordinates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.LineAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            coordinates_.AddEntriesFrom(ref input, _repeated_coordinates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TextShape message contains details for a text shape.
  /// </summary>
  public sealed partial class TextShape : pb::IMessage<TextShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextShape> _parser = new pb::MessageParser<TextShape>(() => new TextShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextShape(TextShape other) : this() {
      fill_ = other.fill_ != null ? other.fill_.Clone() : null;
      text_ = other.text_;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextShape Clone() {
      return new TextShape(this);
    }

    /// <summary>Field number for the "fill" field.</summary>
    public const int FillFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.TextAttributes fill_;
    /// <summary>
    /// drawing attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TextAttributes Fill {
      get { return fill_; }
      set {
        fill_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    /// <summary>
    /// the text to draw
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 3;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla origin_;
    /// <summary>
    /// bottom-left for text positioning
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Fill, other.Fill)) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fill_ != null) hash ^= Fill.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (origin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (origin_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Origin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fill);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextShape other) {
      if (other == null) {
        return;
      }
      if (other.fill_ != null) {
        if (fill_ == null) {
          Fill = new global::SAIC.Valkyrie.Api.V1.TextAttributes();
        }
        Fill.MergeFrom(other.Fill);
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Origin.MergeFrom(other.Origin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.TextAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.TextAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The CircleShape message contains details for a circle shape.
  /// </summary>
  public sealed partial class CircleShape : pb::IMessage<CircleShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CircleShape> _parser = new pb::MessageParser<CircleShape>(() => new CircleShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CircleShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircleShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircleShape(CircleShape other) : this() {
      fill_ = other.fill_ != null ? other.fill_.Clone() : null;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      radius_ = other.radius_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircleShape Clone() {
      return new CircleShape(this);
    }

    /// <summary>Field number for the "fill" field.</summary>
    public const int FillFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes fill_;
    /// <summary>
    /// drawing attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes Fill {
      get { return fill_; }
      set {
        fill_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla origin_;
    /// <summary>
    /// center point for circle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 3;
    private double radius_;
    /// <summary>
    /// radius of the circle, in meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Radius {
      get { return radius_; }
      set {
        radius_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CircleShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CircleShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Fill, other.Fill)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Radius, other.Radius)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fill_ != null) hash ^= Fill.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (Radius != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Radius);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      if (origin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Origin);
      }
      if (Radius != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Radius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      if (origin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Origin);
      }
      if (Radius != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Radius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fill);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (Radius != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CircleShape other) {
      if (other == null) {
        return;
      }
      if (other.fill_ != null) {
        if (fill_ == null) {
          Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
        }
        Fill.MergeFrom(other.Fill);
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.Radius != 0D) {
        Radius = other.Radius;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 25: {
            Radius = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 25: {
            Radius = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The SectorShape message contains details for a sector shape.
  /// This is officially known as an Annulus Sector.
  /// An annulus is made of two concentric (same center) circles of different size.
  /// An annulus sector is a cut from an annulus, which is bordered by two straight lines from its center.
  /// Think of a donut with a bite out of it.
  /// </summary>
  public sealed partial class SectorShape : pb::IMessage<SectorShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SectorShape> _parser = new pb::MessageParser<SectorShape>(() => new SectorShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SectorShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SectorShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SectorShape(SectorShape other) : this() {
      fill_ = other.fill_ != null ? other.fill_.Clone() : null;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      innerRadius_ = other.innerRadius_;
      outerRadius_ = other.outerRadius_;
      startingAngle_ = other.startingAngle_ != null ? other.startingAngle_.Clone() : null;
      endingAngle_ = other.endingAngle_ != null ? other.endingAngle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SectorShape Clone() {
      return new SectorShape(this);
    }

    /// <summary>Field number for the "fill" field.</summary>
    public const int FillFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes fill_;
    /// <summary>
    /// drawing attributes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes Fill {
      get { return fill_; }
      set {
        fill_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla origin_;
    /// <summary>
    /// center point for donut
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "innerRadius" field.</summary>
    public const int InnerRadiusFieldNumber = 3;
    private double innerRadius_;
    /// <summary>
    /// inner radius of the circle, in meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InnerRadius {
      get { return innerRadius_; }
      set {
        innerRadius_ = value;
      }
    }

    /// <summary>Field number for the "outerRadius" field.</summary>
    public const int OuterRadiusFieldNumber = 4;
    private double outerRadius_;
    /// <summary>
    /// outer radius of the circle, in meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double OuterRadius {
      get { return outerRadius_; }
      set {
        outerRadius_ = value;
      }
    }

    /// <summary>Field number for the "startingAngle" field.</summary>
    public const int StartingAngleFieldNumber = 5;
    private global::SAIC.Valkyrie.Api.V1.Orientation startingAngle_;
    /// <summary>
    /// starting az/el in degrees  [0, 360] for AZ, [-90, 90] for EL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.Orientation StartingAngle {
      get { return startingAngle_; }
      set {
        startingAngle_ = value;
      }
    }

    /// <summary>Field number for the "endingAngle" field.</summary>
    public const int EndingAngleFieldNumber = 6;
    private global::SAIC.Valkyrie.Api.V1.Orientation endingAngle_;
    /// <summary>
    /// ending az/el in degrees [0, 360] for AZ, [startElevation, 90] for EL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.Orientation EndingAngle {
      get { return endingAngle_; }
      set {
        endingAngle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SectorShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SectorShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Fill, other.Fill)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InnerRadius, other.InnerRadius)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(OuterRadius, other.OuterRadius)) return false;
      if (!object.Equals(StartingAngle, other.StartingAngle)) return false;
      if (!object.Equals(EndingAngle, other.EndingAngle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fill_ != null) hash ^= Fill.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (InnerRadius != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InnerRadius);
      if (OuterRadius != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(OuterRadius);
      if (startingAngle_ != null) hash ^= StartingAngle.GetHashCode();
      if (endingAngle_ != null) hash ^= EndingAngle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      if (origin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Origin);
      }
      if (InnerRadius != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InnerRadius);
      }
      if (OuterRadius != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(OuterRadius);
      }
      if (startingAngle_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartingAngle);
      }
      if (endingAngle_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EndingAngle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Fill);
      }
      if (origin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Origin);
      }
      if (InnerRadius != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(InnerRadius);
      }
      if (OuterRadius != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(OuterRadius);
      }
      if (startingAngle_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartingAngle);
      }
      if (endingAngle_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EndingAngle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fill);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (InnerRadius != 0D) {
        size += 1 + 8;
      }
      if (OuterRadius != 0D) {
        size += 1 + 8;
      }
      if (startingAngle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartingAngle);
      }
      if (endingAngle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndingAngle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SectorShape other) {
      if (other == null) {
        return;
      }
      if (other.fill_ != null) {
        if (fill_ == null) {
          Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
        }
        Fill.MergeFrom(other.Fill);
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.InnerRadius != 0D) {
        InnerRadius = other.InnerRadius;
      }
      if (other.OuterRadius != 0D) {
        OuterRadius = other.OuterRadius;
      }
      if (other.startingAngle_ != null) {
        if (startingAngle_ == null) {
          StartingAngle = new global::SAIC.Valkyrie.Api.V1.Orientation();
        }
        StartingAngle.MergeFrom(other.StartingAngle);
      }
      if (other.endingAngle_ != null) {
        if (endingAngle_ == null) {
          EndingAngle = new global::SAIC.Valkyrie.Api.V1.Orientation();
        }
        EndingAngle.MergeFrom(other.EndingAngle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 25: {
            InnerRadius = input.ReadDouble();
            break;
          }
          case 33: {
            OuterRadius = input.ReadDouble();
            break;
          }
          case 42: {
            if (startingAngle_ == null) {
              StartingAngle = new global::SAIC.Valkyrie.Api.V1.Orientation();
            }
            input.ReadMessage(StartingAngle);
            break;
          }
          case 50: {
            if (endingAngle_ == null) {
              EndingAngle = new global::SAIC.Valkyrie.Api.V1.Orientation();
            }
            input.ReadMessage(EndingAngle);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fill_ == null) {
              Fill = new global::SAIC.Valkyrie.Api.V1.ShapeFillAttributes();
            }
            input.ReadMessage(Fill);
            break;
          }
          case 18: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 25: {
            InnerRadius = input.ReadDouble();
            break;
          }
          case 33: {
            OuterRadius = input.ReadDouble();
            break;
          }
          case 42: {
            if (startingAngle_ == null) {
              StartingAngle = new global::SAIC.Valkyrie.Api.V1.Orientation();
            }
            input.ReadMessage(StartingAngle);
            break;
          }
          case 50: {
            if (endingAngle_ == null) {
              EndingAngle = new global::SAIC.Valkyrie.Api.V1.Orientation();
            }
            input.ReadMessage(EndingAngle);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The PointMarkerShape message contains details for a single-point marker shape.
  /// </summary>
  public sealed partial class PointMarkerShape : pb::IMessage<PointMarkerShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PointMarkerShape> _parser = new pb::MessageParser<PointMarkerShape>(() => new PointMarkerShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PointMarkerShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DrawingReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointMarkerShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointMarkerShape(PointMarkerShape other) : this() {
      fillColor_ = other.fillColor_ != null ? other.fillColor_.Clone() : null;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      scalingFactor_ = other.scalingFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointMarkerShape Clone() {
      return new PointMarkerShape(this);
    }

    /// <summary>Field number for the "fillColor" field.</summary>
    public const int FillColorFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ARGBColor fillColor_;
    /// <summary>
    /// fill color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ARGBColor FillColor {
      get { return fillColor_; }
      set {
        fillColor_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla origin_;
    /// <summary>
    /// center point for a point marker shape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "scalingFactor" field.</summary>
    public const int ScalingFactorFieldNumber = 3;
    private double scalingFactor_;
    /// <summary>
    /// scalingFactor of the point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ScalingFactor {
      get { return scalingFactor_; }
      set {
        scalingFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PointMarkerShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PointMarkerShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FillColor, other.FillColor)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ScalingFactor, other.ScalingFactor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fillColor_ != null) hash ^= FillColor.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (ScalingFactor != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ScalingFactor);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fillColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FillColor);
      }
      if (origin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Origin);
      }
      if (ScalingFactor != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ScalingFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fillColor_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FillColor);
      }
      if (origin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Origin);
      }
      if (ScalingFactor != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ScalingFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fillColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FillColor);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (ScalingFactor != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PointMarkerShape other) {
      if (other == null) {
        return;
      }
      if (other.fillColor_ != null) {
        if (fillColor_ == null) {
          FillColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
        }
        FillColor.MergeFrom(other.FillColor);
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.ScalingFactor != 0D) {
        ScalingFactor = other.ScalingFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fillColor_ == null) {
              FillColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 18: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 25: {
            ScalingFactor = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fillColor_ == null) {
              FillColor = new global::SAIC.Valkyrie.Api.V1.ARGBColor();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 18: {
            if (origin_ == null) {
              Origin = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 25: {
            ScalingFactor = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
