// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CapabilityStateService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SAIC.Valkyrie.Api.V1 {

  /// <summary>Holder for reflection information generated from CapabilityStateService.proto</summary>
  public static partial class CapabilityStateServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for CapabilityStateService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CapabilityStateServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxDYXBhYmlsaXR5U3RhdGVTZXJ2aWNlLnByb3RvEhtzYWljLnZhbGt5cmll",
            "LnNkay5nZW5lcmF0ZWQaG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90bxoe",
            "Z29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGgxDb21tb24ucHJvdG8a",
            "E0RldmljZXNTdGF0dXMucHJvdG8aGVN5c3RlbUNvbmZpZ3VyYXRpb24ucHJv",
            "dG8iKQoVRXZhbHVhdGVUaHJlYXRSZXF1ZXN0EhAKCHRocmVhdElkGAEgASgD",
            "IuABChZFdmFsdWF0ZVRocmVhdFJlc3BvbnNlEhAKCHRocmVhdElkGAEgASgD",
            "EhAKCGRldmljZUlkGAIgASgJEhIKCmNhcGFiaWxpdHkYAyABKAkSQAoFc3Rh",
            "dGUYBCABKA4yMS5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuRGV2aWNl",
            "T3BlcmF0aW9uU3RhdGUSEwoLaXNBdmFpbGFibGUYBSABKAgSNwoRdW5hdmFp",
            "bGFibGVSZWFzb24YBiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUilgIKE0NhcGFiaWxpdHlTdGF0ZUluZm8SSAoNb3ZlcmFsbFN0YXR1cxgB",
            "IAEoDjIxLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5EZXZpY2VPcGVy",
            "YXRpb25TdGF0ZRI1ChBvdmVyYWxsU3RhcnRUaW1lGAIgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDY0VmFsdWUSNAoPb3ZlcmFsbER1cmF0aW9uGAMgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSSAoMY2FwYWJpbGl0aWVz",
            "GAQgAygLMjIuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkRldmljZUNh",
            "cGFiaWxpdHlTdGF0ZSK6AwoVRGV2aWNlQ2FwYWJpbGl0eVN0YXRlEhAKCGRl",
            "dmljZUlkGAEgASgJEhMKC2Rpc3BsYXlOYW1lGAIgASgJEi4KCXN0YXJ0VGlt",
            "ZRgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEi0KCGR1cmF0",
            "aW9uGAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSQgoFc3Rh",
            "dGUYBSABKAsyMy5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuRGV2aWNl",
            "T3BlcmF0aW9uYWxTdGF0ZRJACgZvcFR5cGUYBiABKA4yMC5zYWljLnZhbGt5",
            "cmllLnNkay5nZW5lcmF0ZWQuRGV2aWNlT3BlcmF0aW9uVHlwZRJHCgtjb25z",
            "dHJhaW50cxgHIAEoCzIyLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5D",
            "YXBhYmlsaXR5Q29uc3RyYWludHMSEwoLaXNBdmFpbGFibGUYCCABKAgSNwoR",
            "dW5hdmFpbGFibGVSZWFzb24YCSABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUyxgQKFkNhcGFiaWxpdHlTdGF0ZVNlcnZpY2USTgoKZ2V0VmVy",
            "c2lvbhIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRooLnNhaWMudmFsa3lyaWUu",
            "c2RrLmdlbmVyYXRlZC5WZXJzaW9uSW5mbxJXCglzdWJzY3JpYmUSFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkaMC5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0",
            "ZWQuQ2FwYWJpbGl0eVN0YXRlSW5mbzABElsKEXNldFNlbGVjdGVkVGhyZWF0",
            "EhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUaKS5zYWljLnZhbGt5cmll",
            "LnNkay5nZW5lcmF0ZWQuUmVzcG9uc2VJbmZvEkgKEWdldFNlbGVjdGVkVGhy",
            "ZWF0EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWUSXwoTZ2V0Q2FwYWJpbGl0eVN0YXRlcxIWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRowLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5D",
            "YXBhYmlsaXR5U3RhdGVJbmZvEnsKDmV2YWx1YXRlVGhyZWF0EjIuc2FpYy52",
            "YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkV2YWx1YXRlVGhyZWF0UmVxdWVzdBoz",
            "LnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5FdmFsdWF0ZVRocmVhdFJl",
            "c3BvbnNlMAFCdwobc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkQhtDYXBh",
            "YmlsaXR5U3RhdGVTZXJ2aWNlUHJvdG9aJGdpdGh1Yi5jb20vdG1ob2x0L0dl",
            "bkRvY1Byb3RvL3Nkay9nb6oCFFNBSUMuVmFsa3lyaWUuQXBpLlYxYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::SAIC.Valkyrie.Api.V1.CommonReflection.Descriptor, global::SAIC.Valkyrie.Api.V1.DevicesStatusReflection.Descriptor, global::SAIC.Valkyrie.Api.V1.SystemConfigurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.EvaluateThreatRequest), global::SAIC.Valkyrie.Api.V1.EvaluateThreatRequest.Parser, new[]{ "ThreatId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.EvaluateThreatResponse), global::SAIC.Valkyrie.Api.V1.EvaluateThreatResponse.Parser, new[]{ "ThreatId", "DeviceId", "Capability", "State", "IsAvailable", "UnavailableReason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.CapabilityStateInfo), global::SAIC.Valkyrie.Api.V1.CapabilityStateInfo.Parser, new[]{ "OverallStatus", "OverallStartTime", "OverallDuration", "Capabilities" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DeviceCapabilityState), global::SAIC.Valkyrie.Api.V1.DeviceCapabilityState.Parser, new[]{ "DeviceId", "DisplayName", "StartTime", "Duration", "State", "OpType", "Constraints", "IsAvailable", "UnavailableReason" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  /// The EvaluateThreatRequest message is used in the {@link evaluateThreat} RPC call, providing
  /// the details needed for the evaluation to occur.
  /// </summary>
  public sealed partial class EvaluateThreatRequest : pb::IMessage<EvaluateThreatRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EvaluateThreatRequest> _parser = new pb::MessageParser<EvaluateThreatRequest>(() => new EvaluateThreatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EvaluateThreatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.CapabilityStateServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvaluateThreatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvaluateThreatRequest(EvaluateThreatRequest other) : this() {
      threatId_ = other.threatId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvaluateThreatRequest Clone() {
      return new EvaluateThreatRequest(this);
    }

    /// <summary>Field number for the "threatId" field.</summary>
    public const int ThreatIdFieldNumber = 1;
    private long threatId_;
    /// <summary>
    /// the id of the threat to test the capability against
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ThreatId {
      get { return threatId_; }
      set {
        threatId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EvaluateThreatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EvaluateThreatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreatId != other.ThreatId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreatId != 0L) hash ^= ThreatId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThreatId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ThreatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThreatId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ThreatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ThreatId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ThreatId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EvaluateThreatRequest other) {
      if (other == null) {
        return;
      }
      if (other.ThreatId != 0L) {
        ThreatId = other.ThreatId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThreatId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ThreatId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The EvaluateThreatResponse message is the return type for the {@link evaluateThreat} RPC call.
  /// It provides the details for one response. Multiple of these messages are returned from the
  /// evaluation, one per capability in the system.
  /// </summary>
  public sealed partial class EvaluateThreatResponse : pb::IMessage<EvaluateThreatResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EvaluateThreatResponse> _parser = new pb::MessageParser<EvaluateThreatResponse>(() => new EvaluateThreatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EvaluateThreatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.CapabilityStateServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvaluateThreatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvaluateThreatResponse(EvaluateThreatResponse other) : this() {
      threatId_ = other.threatId_;
      deviceId_ = other.deviceId_;
      capability_ = other.capability_;
      state_ = other.state_;
      isAvailable_ = other.isAvailable_;
      UnavailableReason = other.UnavailableReason;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EvaluateThreatResponse Clone() {
      return new EvaluateThreatResponse(this);
    }

    /// <summary>Field number for the "threatId" field.</summary>
    public const int ThreatIdFieldNumber = 1;
    private long threatId_;
    /// <summary>
    /// the id of the threat tested against
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ThreatId {
      get { return threatId_; }
      set {
        threatId_ = value;
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private string deviceId_ = "";
    /// <summary>
    /// The ID of this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "capability" field.</summary>
    public const int CapabilityFieldNumber = 3;
    private string capability_ = "";
    /// <summary>
    /// The name for this capability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Capability {
      get { return capability_; }
      set {
        capability_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::SAIC.Valkyrie.Api.V1.DeviceOperationState state_ = global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown;
    /// <summary>
    /// the current/active state for this operational capability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceOperationState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "isAvailable" field.</summary>
    public const int IsAvailableFieldNumber = 5;
    private bool isAvailable_;
    /// <summary>
    /// if this capability is available for running or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAvailable {
      get { return isAvailable_; }
      set {
        isAvailable_ = value;
      }
    }

    /// <summary>Field number for the "unavailableReason" field.</summary>
    public const int UnavailableReasonFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_unavailableReason_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string unavailableReason_;
    /// <summary>
    /// if a capability is not available, the text giving the reason
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnavailableReason {
      get { return unavailableReason_; }
      set {
        unavailableReason_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EvaluateThreatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EvaluateThreatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreatId != other.ThreatId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (Capability != other.Capability) return false;
      if (State != other.State) return false;
      if (IsAvailable != other.IsAvailable) return false;
      if (UnavailableReason != other.UnavailableReason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreatId != 0L) hash ^= ThreatId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (Capability.Length != 0) hash ^= Capability.GetHashCode();
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) hash ^= State.GetHashCode();
      if (IsAvailable != false) hash ^= IsAvailable.GetHashCode();
      if (unavailableReason_ != null) hash ^= UnavailableReason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThreatId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ThreatId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (Capability.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Capability);
      }
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (IsAvailable != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsAvailable);
      }
      if (unavailableReason_ != null) {
        _single_unavailableReason_codec.WriteTagAndValue(output, UnavailableReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThreatId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ThreatId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (Capability.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Capability);
      }
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (IsAvailable != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsAvailable);
      }
      if (unavailableReason_ != null) {
        _single_unavailableReason_codec.WriteTagAndValue(ref output, UnavailableReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ThreatId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ThreatId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (Capability.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Capability);
      }
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (IsAvailable != false) {
        size += 1 + 1;
      }
      if (unavailableReason_ != null) {
        size += _single_unavailableReason_codec.CalculateSizeWithTag(UnavailableReason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EvaluateThreatResponse other) {
      if (other == null) {
        return;
      }
      if (other.ThreatId != 0L) {
        ThreatId = other.ThreatId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Capability.Length != 0) {
        Capability = other.Capability;
      }
      if (other.State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        State = other.State;
      }
      if (other.IsAvailable != false) {
        IsAvailable = other.IsAvailable;
      }
      if (other.unavailableReason_ != null) {
        if (unavailableReason_ == null || other.UnavailableReason != "") {
          UnavailableReason = other.UnavailableReason;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThreatId = input.ReadInt64();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
          case 26: {
            Capability = input.ReadString();
            break;
          }
          case 32: {
            State = (global::SAIC.Valkyrie.Api.V1.DeviceOperationState) input.ReadEnum();
            break;
          }
          case 40: {
            IsAvailable = input.ReadBool();
            break;
          }
          case 50: {
            string value = _single_unavailableReason_codec.Read(input);
            if (unavailableReason_ == null || value != "") {
              UnavailableReason = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ThreatId = input.ReadInt64();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
          case 26: {
            Capability = input.ReadString();
            break;
          }
          case 32: {
            State = (global::SAIC.Valkyrie.Api.V1.DeviceOperationState) input.ReadEnum();
            break;
          }
          case 40: {
            IsAvailable = input.ReadBool();
            break;
          }
          case 50: {
            string value = _single_unavailableReason_codec.Read(ref input);
            if (unavailableReason_ == null || value != "") {
              UnavailableReason = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The CapabilityStateInfo message contains detailed information about the overall system capabilities state.
  /// This is the type returned from {@link getCapabilityStates} and from {@link subscribe}.
  /// </summary>
  public sealed partial class CapabilityStateInfo : pb::IMessage<CapabilityStateInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CapabilityStateInfo> _parser = new pb::MessageParser<CapabilityStateInfo>(() => new CapabilityStateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CapabilityStateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.CapabilityStateServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CapabilityStateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CapabilityStateInfo(CapabilityStateInfo other) : this() {
      overallStatus_ = other.overallStatus_;
      OverallStartTime = other.OverallStartTime;
      OverallDuration = other.OverallDuration;
      capabilities_ = other.capabilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CapabilityStateInfo Clone() {
      return new CapabilityStateInfo(this);
    }

    /// <summary>Field number for the "overallStatus" field.</summary>
    public const int OverallStatusFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.DeviceOperationState overallStatus_ = global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown;
    /// <summary>
    /// The overall operational status of the system.
    /// Overall status is the highest priority state of all devices.
    /// Priority order: Unknown &lt; Inactive &lt; Pending &lt; Active
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceOperationState OverallStatus {
      get { return overallStatus_; }
      set {
        overallStatus_ = value;
      }
    }

    /// <summary>Field number for the "overallStartTime" field.</summary>
    public const int OverallStartTimeFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_overallStartTime_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? overallStartTime_;
    /// <summary>
    /// Timestamp in milliseconds since epoch when the system started any operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long? OverallStartTime {
      get { return overallStartTime_; }
      set {
        overallStartTime_ = value;
      }
    }


    /// <summary>Field number for the "overallDuration" field.</summary>
    public const int OverallDurationFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_overallDuration_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? overallDuration_;
    /// <summary>
    /// Duration in milliseconds since the system started any operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long? OverallDuration {
      get { return overallDuration_; }
      set {
        overallDuration_ = value;
      }
    }


    /// <summary>Field number for the "capabilities" field.</summary>
    public const int CapabilitiesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.DeviceCapabilityState> _repeated_capabilities_codec
        = pb::FieldCodec.ForMessage(34, global::SAIC.Valkyrie.Api.V1.DeviceCapabilityState.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceCapabilityState> capabilities_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceCapabilityState>();
    /// <summary>
    /// list of device capabilities and their states
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceCapabilityState> Capabilities {
      get { return capabilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CapabilityStateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CapabilityStateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OverallStatus != other.OverallStatus) return false;
      if (OverallStartTime != other.OverallStartTime) return false;
      if (OverallDuration != other.OverallDuration) return false;
      if(!capabilities_.Equals(other.capabilities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OverallStatus != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) hash ^= OverallStatus.GetHashCode();
      if (overallStartTime_ != null) hash ^= OverallStartTime.GetHashCode();
      if (overallDuration_ != null) hash ^= OverallDuration.GetHashCode();
      hash ^= capabilities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OverallStatus != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverallStatus);
      }
      if (overallStartTime_ != null) {
        _single_overallStartTime_codec.WriteTagAndValue(output, OverallStartTime);
      }
      if (overallDuration_ != null) {
        _single_overallDuration_codec.WriteTagAndValue(output, OverallDuration);
      }
      capabilities_.WriteTo(output, _repeated_capabilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OverallStatus != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OverallStatus);
      }
      if (overallStartTime_ != null) {
        _single_overallStartTime_codec.WriteTagAndValue(ref output, OverallStartTime);
      }
      if (overallDuration_ != null) {
        _single_overallDuration_codec.WriteTagAndValue(ref output, OverallDuration);
      }
      capabilities_.WriteTo(ref output, _repeated_capabilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OverallStatus != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OverallStatus);
      }
      if (overallStartTime_ != null) {
        size += _single_overallStartTime_codec.CalculateSizeWithTag(OverallStartTime);
      }
      if (overallDuration_ != null) {
        size += _single_overallDuration_codec.CalculateSizeWithTag(OverallDuration);
      }
      size += capabilities_.CalculateSize(_repeated_capabilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CapabilityStateInfo other) {
      if (other == null) {
        return;
      }
      if (other.OverallStatus != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        OverallStatus = other.OverallStatus;
      }
      if (other.overallStartTime_ != null) {
        if (overallStartTime_ == null || other.OverallStartTime != 0L) {
          OverallStartTime = other.OverallStartTime;
        }
      }
      if (other.overallDuration_ != null) {
        if (overallDuration_ == null || other.OverallDuration != 0L) {
          OverallDuration = other.OverallDuration;
        }
      }
      capabilities_.Add(other.capabilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OverallStatus = (global::SAIC.Valkyrie.Api.V1.DeviceOperationState) input.ReadEnum();
            break;
          }
          case 18: {
            long? value = _single_overallStartTime_codec.Read(input);
            if (overallStartTime_ == null || value != 0L) {
              OverallStartTime = value;
            }
            break;
          }
          case 26: {
            long? value = _single_overallDuration_codec.Read(input);
            if (overallDuration_ == null || value != 0L) {
              OverallDuration = value;
            }
            break;
          }
          case 34: {
            capabilities_.AddEntriesFrom(input, _repeated_capabilities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OverallStatus = (global::SAIC.Valkyrie.Api.V1.DeviceOperationState) input.ReadEnum();
            break;
          }
          case 18: {
            long? value = _single_overallStartTime_codec.Read(ref input);
            if (overallStartTime_ == null || value != 0L) {
              OverallStartTime = value;
            }
            break;
          }
          case 26: {
            long? value = _single_overallDuration_codec.Read(ref input);
            if (overallDuration_ == null || value != 0L) {
              OverallDuration = value;
            }
            break;
          }
          case 34: {
            capabilities_.AddEntriesFrom(ref input, _repeated_capabilities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The DeviceCapabilityState message contains detailed information about one device capability in the system.
  /// </summary>
  public sealed partial class DeviceCapabilityState : pb::IMessage<DeviceCapabilityState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceCapabilityState> _parser = new pb::MessageParser<DeviceCapabilityState>(() => new DeviceCapabilityState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceCapabilityState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.CapabilityStateServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCapabilityState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCapabilityState(DeviceCapabilityState other) : this() {
      deviceId_ = other.deviceId_;
      displayName_ = other.displayName_;
      StartTime = other.StartTime;
      Duration = other.Duration;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      opType_ = other.opType_;
      constraints_ = other.constraints_ != null ? other.constraints_.Clone() : null;
      isAvailable_ = other.isAvailable_;
      UnavailableReason = other.UnavailableReason;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCapabilityState Clone() {
      return new DeviceCapabilityState(this);
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    /// <summary>
    /// The ID of this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// The name for this capability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_startTime_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? startTime_;
    /// <summary>
    /// Timestamp in milliseconds since epoch when the device started performing this operation (if state=ACTIVE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long? StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }


    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_duration_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? duration_;
    /// <summary>
    /// Duration in milliseconds since the device started performing this operation (if state=ACTIVE)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long? Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }


    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::SAIC.Valkyrie.Api.V1.DeviceOperationalState state_;
    /// <summary>
    /// details about the current operational state of this capability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceOperationalState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "opType" field.</summary>
    public const int OpTypeFieldNumber = 6;
    private global::SAIC.Valkyrie.Api.V1.DeviceOperationType opType_ = global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown;
    /// <summary>
    /// the type of operation we are talking about
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceOperationType OpType {
      get { return opType_; }
      set {
        opType_ = value;
      }
    }

    /// <summary>Field number for the "constraints" field.</summary>
    public const int ConstraintsFieldNumber = 7;
    private global::SAIC.Valkyrie.Api.V1.CapabilityConstraints constraints_;
    /// <summary>
    /// constraints on the ability to run this capability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CapabilityConstraints Constraints {
      get { return constraints_; }
      set {
        constraints_ = value;
      }
    }

    /// <summary>Field number for the "isAvailable" field.</summary>
    public const int IsAvailableFieldNumber = 8;
    private bool isAvailable_;
    /// <summary>
    /// if this capability is available for running or not - potentially based on the active threat set by a client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAvailable {
      get { return isAvailable_; }
      set {
        isAvailable_ = value;
      }
    }

    /// <summary>Field number for the "unavailableReason" field.</summary>
    public const int UnavailableReasonFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_unavailableReason_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string unavailableReason_;
    /// <summary>
    /// if a capability is not available, the text giving the reason
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UnavailableReason {
      get { return unavailableReason_; }
      set {
        unavailableReason_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceCapabilityState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceCapabilityState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (DisplayName != other.DisplayName) return false;
      if (StartTime != other.StartTime) return false;
      if (Duration != other.Duration) return false;
      if (!object.Equals(State, other.State)) return false;
      if (OpType != other.OpType) return false;
      if (!object.Equals(Constraints, other.Constraints)) return false;
      if (IsAvailable != other.IsAvailable) return false;
      if (UnavailableReason != other.UnavailableReason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (OpType != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) hash ^= OpType.GetHashCode();
      if (constraints_ != null) hash ^= Constraints.GetHashCode();
      if (IsAvailable != false) hash ^= IsAvailable.GetHashCode();
      if (unavailableReason_ != null) hash ^= UnavailableReason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (startTime_ != null) {
        _single_startTime_codec.WriteTagAndValue(output, StartTime);
      }
      if (duration_ != null) {
        _single_duration_codec.WriteTagAndValue(output, Duration);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (OpType != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) OpType);
      }
      if (constraints_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Constraints);
      }
      if (IsAvailable != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsAvailable);
      }
      if (unavailableReason_ != null) {
        _single_unavailableReason_codec.WriteTagAndValue(output, UnavailableReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (startTime_ != null) {
        _single_startTime_codec.WriteTagAndValue(ref output, StartTime);
      }
      if (duration_ != null) {
        _single_duration_codec.WriteTagAndValue(ref output, Duration);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (OpType != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) OpType);
      }
      if (constraints_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Constraints);
      }
      if (IsAvailable != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsAvailable);
      }
      if (unavailableReason_ != null) {
        _single_unavailableReason_codec.WriteTagAndValue(ref output, UnavailableReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (startTime_ != null) {
        size += _single_startTime_codec.CalculateSizeWithTag(StartTime);
      }
      if (duration_ != null) {
        size += _single_duration_codec.CalculateSizeWithTag(Duration);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (OpType != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OpType);
      }
      if (constraints_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constraints);
      }
      if (IsAvailable != false) {
        size += 1 + 1;
      }
      if (unavailableReason_ != null) {
        size += _single_unavailableReason_codec.CalculateSizeWithTag(UnavailableReason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceCapabilityState other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null || other.StartTime != 0L) {
          StartTime = other.StartTime;
        }
      }
      if (other.duration_ != null) {
        if (duration_ == null || other.Duration != 0L) {
          Duration = other.Duration;
        }
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::SAIC.Valkyrie.Api.V1.DeviceOperationalState();
        }
        State.MergeFrom(other.State);
      }
      if (other.OpType != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        OpType = other.OpType;
      }
      if (other.constraints_ != null) {
        if (constraints_ == null) {
          Constraints = new global::SAIC.Valkyrie.Api.V1.CapabilityConstraints();
        }
        Constraints.MergeFrom(other.Constraints);
      }
      if (other.IsAvailable != false) {
        IsAvailable = other.IsAvailable;
      }
      if (other.unavailableReason_ != null) {
        if (unavailableReason_ == null || other.UnavailableReason != "") {
          UnavailableReason = other.UnavailableReason;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            long? value = _single_startTime_codec.Read(input);
            if (startTime_ == null || value != 0L) {
              StartTime = value;
            }
            break;
          }
          case 34: {
            long? value = _single_duration_codec.Read(input);
            if (duration_ == null || value != 0L) {
              Duration = value;
            }
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::SAIC.Valkyrie.Api.V1.DeviceOperationalState();
            }
            input.ReadMessage(State);
            break;
          }
          case 48: {
            OpType = (global::SAIC.Valkyrie.Api.V1.DeviceOperationType) input.ReadEnum();
            break;
          }
          case 58: {
            if (constraints_ == null) {
              Constraints = new global::SAIC.Valkyrie.Api.V1.CapabilityConstraints();
            }
            input.ReadMessage(Constraints);
            break;
          }
          case 64: {
            IsAvailable = input.ReadBool();
            break;
          }
          case 74: {
            string value = _single_unavailableReason_codec.Read(input);
            if (unavailableReason_ == null || value != "") {
              UnavailableReason = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            long? value = _single_startTime_codec.Read(ref input);
            if (startTime_ == null || value != 0L) {
              StartTime = value;
            }
            break;
          }
          case 34: {
            long? value = _single_duration_codec.Read(ref input);
            if (duration_ == null || value != 0L) {
              Duration = value;
            }
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::SAIC.Valkyrie.Api.V1.DeviceOperationalState();
            }
            input.ReadMessage(State);
            break;
          }
          case 48: {
            OpType = (global::SAIC.Valkyrie.Api.V1.DeviceOperationType) input.ReadEnum();
            break;
          }
          case 58: {
            if (constraints_ == null) {
              Constraints = new global::SAIC.Valkyrie.Api.V1.CapabilityConstraints();
            }
            input.ReadMessage(Constraints);
            break;
          }
          case 64: {
            IsAvailable = input.ReadBool();
            break;
          }
          case 74: {
            string value = _single_unavailableReason_codec.Read(ref input);
            if (unavailableReason_ == null || value != "") {
              UnavailableReason = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
