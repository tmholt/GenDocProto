// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DeviceCommands.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SAIC.Valkyrie.Api.V1 {

  /// <summary>Holder for reflection information generated from DeviceCommands.proto</summary>
  public static partial class DeviceCommandsReflection {

    #region Descriptor
    /// <summary>File descriptor for DeviceCommands.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeviceCommandsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChREZXZpY2VDb21tYW5kcy5wcm90bxIbc2FpYy52YWxreXJpZS5zZGsuZ2Vu",
            "ZXJhdGVkGgxDb21tb24ucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVy",
            "cy5wcm90byLhCQoRRGV2aWNlQ29tbWFuZEluZm8SPAoEdHlwZRgBIAEoDjIu",
            "LnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5EZXZpY2VDb21tYW5kVHlw",
            "ZRIRCgl0aW1lc3RhbXAYAiABKAMSEAoIZGV2aWNlSWQYAyABKAkSFQoNY29t",
            "bWFuZFNvdXJjZRgEIAEoCRIRCgljb21wb25lbnQYBSABKAkSEwoLaXNCcm9h",
            "ZGNhc3QYBiABKAgSEQoJY29tbWFuZElkGAcgASgJEkcKCWFmZmlsaWF0ZRgI",
            "IAEoCzIyLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5UYXJnZXRBZmZp",
            "bGlhdGlvbkluZm9IABJACgZkZXBsb3kYCSABKAsyLi5zYWljLnZhbGt5cmll",
            "LnNkay5nZW5lcmF0ZWQuQWN0aW9uQ29tbWFuZEluZm9IABJCCghlbmVyZ2l6",
            "ZRgKIAEoCzIuLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5BY3Rpb25D",
            "b21tYW5kSW5mb0gAEj4KBXByb2JlGAsgASgLMi0uc2FpYy52YWxreXJpZS5z",
            "ZGsuZ2VuZXJhdGVkLlByb2JlQ29tbWFuZEluZm9IABI+CgRmaXJlGAwgASgL",
            "Mi4uc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkFjdGlvbkNvbW1hbmRJ",
            "bmZvSAASPAoEc2xldxgNIAEoCzIsLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVy",
            "YXRlZC5TbGV3Q29tbWFuZEluZm9IABI+CgVudWRnZRgOIAEoCzItLnNhaWMu",
            "dmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5OdWRnZUNvbW1hbmRJbmZvSAASRwoF",
            "Zm9jdXMYDyABKAsyNi5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuQ2Ft",
            "ZXJhU2V0Rm9jdXNDb21tYW5kSW5mb0gAEkIKBHpvb20YECABKAsyMi5zYWlj",
            "LnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuQ2FtZXJhWm9vbUNvbW1hbmRJbmZv",
            "SAASRgoGcmVjb3JkGBEgASgLMjQuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJh",
            "dGVkLkNhbWVyYVJlY29yZENvbW1hbmRJbmZvSAASQAoDbnVjGBIgASgLMjEu",
            "c2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkNhbWVyYU51Y0NvbW1hbmRJ",
            "bmZvSAASSgoFbm9ydGgYEyABKAsyOS5zYWljLnZhbGt5cmllLnNkay5nZW5l",
            "cmF0ZWQuQ29uZmlndXJlTm9ydGhpbmdDb21tYW5kSW5mb0gAEksKB2NvdW50",
            "ZXIYFCABKAsyOC5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuRXdDb3Vu",
            "dGVybWVhc3VyZUNvbW1hbmRJbmZvSAASSAoGdGFyZ2V0GBUgASgLMjYuc2Fp",
            "Yy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkV3VXBkYXRlVGFyZ2V0Q29tbWFu",
            "ZEluZm9IABJICgplbmRNaXNzaW9uGBYgASgLMjIuc2FpYy52YWxreXJpZS5z",
            "ZGsuZ2VuZXJhdGVkLkVuZE1pc3Npb25Db21tYW5kSW5mb0gAQgYKBGRhdGEi",
            "uQEKFURldmljZUNvbW1hbmRSZXNwb25zZRIRCgljb21tYW5kSWQYASABKAkS",
            "QwoLY29tbWFuZFR5cGUYAiABKA4yLi5zYWljLnZhbGt5cmllLnNkay5nZW5l",
            "cmF0ZWQuRGV2aWNlQ29tbWFuZFR5cGUSEAoIZGV2aWNlSWQYAyABKAkSEQoJ",
            "dGltZXN0YW1wGAQgASgDEhIKCndpbGxDb21wbHkYBSABKAgSDwoHZGV0YWls",
            "cxgGIAEoCSJiChFBY3Rpb25Db21tYW5kSW5mbxI9CgZ0YXJnZXQYASABKAsy",
            "LS5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuVGFyZ2V0SWRlbnRpZmll",
            "chIOCgZjYW5jZWwYAiABKAgivAEKEFByb2JlQ29tbWFuZEluZm8SDgoGY2Fu",
            "Y2VsGAEgASgIEk0KCWRpcmVjdGlvbhgCIAEoCzI4LnNhaWMudmFsa3lyaWUu",
            "c2RrLmdlbmVyYXRlZC5Qcm9iZURpcmVjdGlvbmFsQ29tbWFuZEluZm9IABJB",
            "CgRjdWVkGAMgASgLMjEuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLlBy",
            "b2JlQ3VlZENvbW1hbmRJbmZvSABCBgoEZGF0YSLoAQobUHJvYmVEaXJlY3Rp",
            "b25hbENvbW1hbmRJbmZvEkYKBHR5cGUYASABKA4yOC5zYWljLnZhbGt5cmll",
            "LnNkay5nZW5lcmF0ZWQuUHJvYmVEaXJlY3Rpb25hbENvbW1hbmRUeXBlEj4K",
            "CHBvc2l0aW9uGAIgASgLMiouc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVk",
            "LkNvb3JkaW5hdGVMbGFIABI5CgNsb2IYAyABKAsyKi5zYWljLnZhbGt5cmll",
            "LnNkay5nZW5lcmF0ZWQuTGluZU9mQmVhcmluZ0gAQgYKBGRhdGEiVQoUUHJv",
            "YmVDdWVkQ29tbWFuZEluZm8SPQoGdGFyZ2V0GAEgASgLMi0uc2FpYy52YWxr",
            "eXJpZS5zZGsuZ2VuZXJhdGVkLlRhcmdldElkZW50aWZpZXIi9QMKD1NsZXdD",
            "b21tYW5kSW5mbxJCCgZhY3Rpb24YASABKA4yMi5zYWljLnZhbGt5cmllLnNk",
            "ay5nZW5lcmF0ZWQuU2xld0NvbW1hbmRBY3Rpb25UeXBlEj4KCGxvY2F0aW9u",
            "GAIgASgLMiouc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkNvb3JkaW5h",
            "dGVMbGFIABI5CgNsb2IYAyABKAsyKi5zYWljLnZhbGt5cmllLnNkay5nZW5l",
            "cmF0ZWQuTGluZU9mQmVhcmluZ0gAEkYKBnRhcmdldBgEIAEoCzI0LnNhaWMu",
            "dmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5TbGV3VG9UYXJnZXRDb21tYW5kSW5m",
            "b0gAEkQKBGF1dG8YBSABKAsyNC5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0",
            "ZWQuU2xld1RvVGFyZ2V0Q29tbWFuZEluZm9IABJECgZtYW51YWwYBiABKAsy",
            "Mi5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuU2xld01hbnVhbENvbW1h",
            "bmRJbmZvSAASRwoFcmF0ZXMYByABKAsyNi5zYWljLnZhbGt5cmllLnNkay5n",
            "ZW5lcmF0ZWQuU2xld1JhdGVDb25maWd1cmF0aW9uSW5mb0gAQgYKBGRhdGEi",
            "VwoZU2xld1JhdGVDb25maWd1cmF0aW9uSW5mbxITCgthemltdXRoUmF0ZRgB",
            "IAEoARIVCg1lbGV2YXRpb25SYXRlGAIgASgBEg4KBmVuYWJsZRgDIAEoCCJ3",
            "ChdTbGV3VG9UYXJnZXRDb21tYW5kSW5mbxI9CgZ0YXJnZXQYASABKAsyLS5z",
            "YWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuVGFyZ2V0SWRlbnRpZmllchIO",
            "CgZjYW5jZWwYBCABKAgSDQoFcGF1c2UYBSABKAgiPQoVU2xld01hbnVhbENv",
            "bW1hbmRJbmZvEgkKAXgYASABKAISCQoBeRgCIAEoAhIOCgZjYW5jZWwYAyAB",
            "KAgiggEKEE51ZGdlQ29tbWFuZEluZm8SOwoEdHlwZRgBIAEoDjItLnNhaWMu",
            "dmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5OdWRnZUNvbW1hbmRUeXBlEjEKC251",
            "ZGdlQW1vdW50GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVl",
            "IlQKGUNhbWVyYVNldEZvY3VzQ29tbWFuZEluZm8SEQoJZm9jdXNOZWFyGAEg",
            "ASgIEhEKCXN0b3BGb2N1cxgCIAEoCBIRCglhdXRvRm9jdXMYAyABKAgiKQoX",
            "Q2FtZXJhUmVjb3JkQ29tbWFuZEluZm8SDgoGY2FuY2VsGAEgASgIIooBChVD",
            "YW1lcmFab29tQ29tbWFuZEluZm8SQAoEdHlwZRgBIAEoDjIyLnNhaWMudmFs",
            "a3lyaWUuc2RrLmdlbmVyYXRlZC5DYW1lcmFab29tQ29tbWFuZFR5cGUSLwoJ",
            "em9vbUxldmVsGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVl",
            "IicKFENhbWVyYU51Y0NvbW1hbmRJbmZvEg8KB2xvbmdOdWMYASABKAgi0wIK",
            "G0V3Q291bnRlcm1lYXN1cmVDb21tYW5kSW5mbxJGCgR0eXBlGAEgASgOMjgu",
            "c2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkV3Q291bnRlcm1lYXN1cmVD",
            "b21tYW5kVHlwZRI9CgZ0YXJnZXQYAiABKAsyLS5zYWljLnZhbGt5cmllLnNk",
            "ay5nZW5lcmF0ZWQuVGFyZ2V0SWRlbnRpZmllchIaCg5jb3VudGVybWVhc3Vy",
            "ZRgDIAEoCUICGAESDAoEbG9jaxgEIAEoCBI5CgVzdGFydBgFIAEoCzIqLnNh",
            "aWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5Db29yZGluYXRlTGxhEjcKA2Vu",
            "ZBgGIAEoCzIqLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5Db29yZGlu",
            "YXRlTGxhEg8KB29wdGlvbnMYByADKAkikgEKGUV3VXBkYXRlVGFyZ2V0Q29t",
            "bWFuZEluZm8SPAoIcG9zaXRpb24YASABKAsyKi5zYWljLnZhbGt5cmllLnNk",
            "ay5nZW5lcmF0ZWQuQ29vcmRpbmF0ZUxsYRI3Cgh2ZWxvY2l0eRgCIAEoCzIl",
            "LnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5WZWxvY2l0eSI1ChxDb25m",
            "aWd1cmVOb3J0aGluZ0NvbW1hbmRJbmZvEhUKDW5vcnRoaW5nQW5nbGUYAiAB",
            "KAIihwEKFUVuZE1pc3Npb25Db21tYW5kSW5mbxI9CgZ0YXJnZXQYASABKAsy",
            "LS5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuVGFyZ2V0SWRlbnRpZmll",
            "chIvCgltaXNzaW9uSWQYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUqmQMKEURldmljZUNvbW1hbmRUeXBlEhIKDkRFVkNNRF9VTktOT1dO",
            "EAASFAoQREVWQ01EX0FGRklMSUFURRABEhEKDURFVkNNRF9ERVBMT1kQAhIT",
            "Cg9ERVZDTURfRU5FUkdJWkUQAxIQCgxERVZDTURfUFJPQkUQBBIPCgtERVZD",
            "TURfRklSRRAFEg8KC0RFVkNNRF9TTEVXEAYSEAoMREVWQ01EX05VREdFEAcS",
            "FwoTREVWQ01EX0NBTUVSQV9GT0NVUxAJEhYKEkRFVkNNRF9DQU1FUkFfWk9P",
            "TRAKEhUKEURFVkNNRF9DQU1FUkFfTlVDEAsSGAoUREVWQ01EX0NBTUVSQV9S",
            "RUNPUkQQDBIZChVERVZDTURfQ09VTlRFUk1FQVNVUkUQDRIhCh1ERVZDTURf",
            "REVGQVVMVF9DT1VOVEVSTUVBU1VSRRAOEhgKFERFVkNNRF9VUERBVEVfVEFS",
            "R0VUEA8SGgoWREVWQ01EX0NPTkZJR19OT1JUSElORxAQEhYKEkRFVkNNRF9F",
            "TkRfTUlTU0lPThARKncKG1Byb2JlRGlyZWN0aW9uYWxDb21tYW5kVHlwZRId",
            "ChlQUk9CRV9ESVJFQ1RJT05BTF9VTktOT1dOEAASHgoaUFJPQkVfRElSRUNU",
            "SU9OQUxfUE9TSVRJT04QARIZChVQUk9CRV9ESVJFQ1RJT05BTF9MT0IQAiqq",
            "AQoVU2xld0NvbW1hbmRBY3Rpb25UeXBlEhgKFFNMRVdfQ01EX1RPX0xPQ0FU",
            "SU9OEAASEwoPU0xFV19DTURfVE9fTE9CEAESFgoSU0xFV19DTURfVE9fVEFS",
            "R0VUEAISFwoTU0xFV19DTURfQVVUT19UUkFDSxADEhMKD1NMRVdfQ01EX01B",
            "TlVBTBAEEhwKGFNMRVdfQ01EX0NPTkZJR1VSRV9SQVRFUxAFKpABChBOdWRn",
            "ZUNvbW1hbmRUeXBlEhIKDk5VREdFX0NNRF9MRUZUEAASEwoPTlVER0VfQ01E",
            "X1JJR0hUEAESEAoMTlVER0VfQ01EX1VQEAISEgoOTlVER0VfQ01EX0RPV04Q",
            "AxIVChFOVURHRV9DTURfWk9PTV9JThAEEhYKEk5VREdFX0NNRF9aT09NX09V",
            "VBAFKk0KFUNhbWVyYVpvb21Db21tYW5kVHlwZRIRCg1aT09NX0NNRF9TVE9Q",
            "EAASDwoLWk9PTV9DTURfSU4QARIQCgxaT09NX0NNRF9PVVQQAipUChtFd0Nv",
            "dW50ZXJtZWFzdXJlQ29tbWFuZFR5cGUSEgoORVdfQ01fQUNUSVZBVEUQABIO",
            "CgpFV19DTV9IQUxUEAESEQoNRVdfQ01fUkVTVEFSVBACQm8KG3NhaWMudmFs",
            "a3lyaWUuc2RrLmdlbmVyYXRlZEITRGV2aWNlQ29tbWFuZHNQcm90b1okZ2l0",
            "aHViLmNvbS90bWhvbHQvR2VuRG9jUHJvdG8vc2RrL2dvqgIUU0FJQy5WYWxr",
            "eXJpZS5BcGkuVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SAIC.Valkyrie.Api.V1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SAIC.Valkyrie.Api.V1.DeviceCommandType), typeof(global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType), typeof(global::SAIC.Valkyrie.Api.V1.SlewCommandActionType), typeof(global::SAIC.Valkyrie.Api.V1.NudgeCommandType), typeof(global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType), typeof(global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DeviceCommandInfo), global::SAIC.Valkyrie.Api.V1.DeviceCommandInfo.Parser, new[]{ "Type", "Timestamp", "DeviceId", "CommandSource", "Component", "IsBroadcast", "CommandId", "Affiliate", "Deploy", "Energize", "Probe", "Fire", "Slew", "Nudge", "Focus", "Zoom", "Record", "Nuc", "North", "Counter", "Target", "EndMission" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DeviceCommandResponse), global::SAIC.Valkyrie.Api.V1.DeviceCommandResponse.Parser, new[]{ "CommandId", "CommandType", "DeviceId", "Timestamp", "WillComply", "Details" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ActionCommandInfo), global::SAIC.Valkyrie.Api.V1.ActionCommandInfo.Parser, new[]{ "Target", "Cancel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo), global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo.Parser, new[]{ "Cancel", "Direction", "Cued" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo), global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo.Parser, new[]{ "Type", "Position", "Lob" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo), global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo.Parser, new[]{ "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.SlewCommandInfo), global::SAIC.Valkyrie.Api.V1.SlewCommandInfo.Parser, new[]{ "Action", "Location", "Lob", "Target", "Auto", "Manual", "Rates" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo), global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo.Parser, new[]{ "AzimuthRate", "ElevationRate", "Enable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo), global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo.Parser, new[]{ "Target", "Cancel", "Pause" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo), global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo.Parser, new[]{ "X", "Y", "Cancel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo), global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo.Parser, new[]{ "Type", "NudgeAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo), global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo.Parser, new[]{ "FocusNear", "StopFocus", "AutoFocus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo), global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo.Parser, new[]{ "Cancel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo), global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo.Parser, new[]{ "Type", "ZoomLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo), global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo.Parser, new[]{ "LongNuc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo), global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo.Parser, new[]{ "Type", "Target", "Countermeasure", "Lock", "Start", "End", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo), global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo.Parser, new[]{ "Position", "Velocity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo), global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo.Parser, new[]{ "NorthingAngle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo), global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo.Parser, new[]{ "Target", "MissionId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///
  /// The DeviceCommandType enumeration contains the set of possible device commands that can be
  /// sent through the system.
  /// </summary>
  public enum DeviceCommandType {
    [pbr::OriginalName("DEVCMD_UNKNOWN")] DevcmdUnknown = 0,
    /// <summary>
    /// a broadcast command associated with a target not a device
    /// </summary>
    [pbr::OriginalName("DEVCMD_AFFILIATE")] DevcmdAffiliate = 1,
    [pbr::OriginalName("DEVCMD_DEPLOY")] DevcmdDeploy = 2,
    [pbr::OriginalName("DEVCMD_ENERGIZE")] DevcmdEnergize = 3,
    [pbr::OriginalName("DEVCMD_PROBE")] DevcmdProbe = 4,
    [pbr::OriginalName("DEVCMD_FIRE")] DevcmdFire = 5,
    [pbr::OriginalName("DEVCMD_SLEW")] DevcmdSlew = 6,
    [pbr::OriginalName("DEVCMD_NUDGE")] DevcmdNudge = 7,
    [pbr::OriginalName("DEVCMD_CAMERA_FOCUS")] DevcmdCameraFocus = 9,
    [pbr::OriginalName("DEVCMD_CAMERA_ZOOM")] DevcmdCameraZoom = 10,
    [pbr::OriginalName("DEVCMD_CAMERA_NUC")] DevcmdCameraNuc = 11,
    [pbr::OriginalName("DEVCMD_CAMERA_RECORD")] DevcmdCameraRecord = 12,
    [pbr::OriginalName("DEVCMD_COUNTERMEASURE")] DevcmdCountermeasure = 13,
    [pbr::OriginalName("DEVCMD_DEFAULT_COUNTERMEASURE")] DevcmdDefaultCountermeasure = 14,
    [pbr::OriginalName("DEVCMD_UPDATE_TARGET")] DevcmdUpdateTarget = 15,
    [pbr::OriginalName("DEVCMD_CONFIG_NORTHING")] DevcmdConfigNorthing = 16,
    /// <summary>
    /// a broadcast end-active-mission command
    /// </summary>
    [pbr::OriginalName("DEVCMD_END_MISSION")] DevcmdEndMission = 17,
  }

  /// <summary>
  ///
  /// The ProbeDirectionalCommandType enumeration defines which PROBE directional command type is being sent.
  /// </summary>
  public enum ProbeDirectionalCommandType {
    [pbr::OriginalName("PROBE_DIRECTIONAL_UNKNOWN")] ProbeDirectionalUnknown = 0,
    [pbr::OriginalName("PROBE_DIRECTIONAL_POSITION")] ProbeDirectionalPosition = 1,
    [pbr::OriginalName("PROBE_DIRECTIONAL_LOB")] ProbeDirectionalLob = 2,
  }

  /// <summary>
  ///
  /// The SlewCommandActionType enumeration contains the different kinds of SLEWs the system can perform.
  /// </summary>
  public enum SlewCommandActionType {
    /// <summary>
    /// a slew to a static coordinate (LLA)
    /// </summary>
    [pbr::OriginalName("SLEW_CMD_TO_LOCATION")] SlewCmdToLocation = 0,
    /// <summary>
    /// a slew to a static az/el
    /// </summary>
    [pbr::OriginalName("SLEW_CMD_TO_LOB")] SlewCmdToLob = 1,
    /// <summary>
    /// a slew to a moving target, where the positional information comes from a VALKYRIE threat feed
    /// of positional information for that threat.
    /// </summary>
    [pbr::OriginalName("SLEW_CMD_TO_TARGET")] SlewCmdToTarget = 2,
    /// <summary>
    /// a slew to a moving target, where the device is responsible for positional tracking
    /// (visual, RF, other). The device will be provided with the ID of the target to track.
    /// </summary>
    [pbr::OriginalName("SLEW_CMD_AUTO_TRACK")] SlewCmdAutoTrack = 3,
    /// <summary>
    /// a slewing of a sensor relative to its current position as a percentage of a -1.0 to 1.0 value
    /// in the X or Y direction. Primarily used for joystick slewing.
    /// </summary>
    [pbr::OriginalName("SLEW_CMD_MANUAL")] SlewCmdManual = 4,
    /// <summary>
    /// this command sets initialization/configuration values into a SLEWing device.
    /// It sets limits on how fast the device can slew in AZ and in EL. It also supports completely
    /// turning on or off slewing of the devices. This matches the TCUT3 SetSlewRates command.
    /// </summary>
    [pbr::OriginalName("SLEW_CMD_CONFIGURE_RATES")] SlewCmdConfigureRates = 5,
  }

  /// <summary>
  ///
  /// Nudge command direction. Used in NudgeCommandInfo
  /// </summary>
  public enum NudgeCommandType {
    [pbr::OriginalName("NUDGE_CMD_LEFT")] NudgeCmdLeft = 0,
    [pbr::OriginalName("NUDGE_CMD_RIGHT")] NudgeCmdRight = 1,
    [pbr::OriginalName("NUDGE_CMD_UP")] NudgeCmdUp = 2,
    [pbr::OriginalName("NUDGE_CMD_DOWN")] NudgeCmdDown = 3,
    [pbr::OriginalName("NUDGE_CMD_ZOOM_IN")] NudgeCmdZoomIn = 4,
    [pbr::OriginalName("NUDGE_CMD_ZOOM_OUT")] NudgeCmdZoomOut = 5,
  }

  /// <summary>
  ///
  /// The CameraZoomCommandType enumeration details the specific ZOOM operation to send.
  /// Used in the CameraZoomCommandInfo message,
  /// </summary>
  public enum CameraZoomCommandType {
    [pbr::OriginalName("ZOOM_CMD_STOP")] ZoomCmdStop = 0,
    [pbr::OriginalName("ZOOM_CMD_IN")] ZoomCmdIn = 1,
    [pbr::OriginalName("ZOOM_CMD_OUT")] ZoomCmdOut = 2,
  }

  /// <summary>
  ///
  /// The enumerated set of countermeasure action types.
  /// Used within the {@link EwCountermeasureCommandInfo} message.
  /// </summary>
  public enum EwCountermeasureCommandType {
    /// <summary>
    /// tells the EW system to activate a countermeasure.
    /// </summary>
    [pbr::OriginalName("EW_CM_ACTIVATE")] EwCmActivate = 0,
    /// <summary>
    /// The usage of this message is identical to the ActivateCounterMeasure message, except the effect is to halt a counter-
    /// measure instead of activating it. Currently, when sent with no attributes this will halt all RF transmission from the system.
    /// Specific target types and IDs can be individually halted setting countermeasure or target.
    /// </summary>
    [pbr::OriginalName("EW_CM_HALT")] EwCmHalt = 1,
    /// <summary>
    /// This message tells the EW system to restart the countermeasure that is currently active.
    /// </summary>
    [pbr::OriginalName("EW_CM_RESTART")] EwCmRestart = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///
  /// The DeviceCommandInfo message contains details about one command sent through the system.
  /// This could be a command sent from an SDK client or it could be a command being sent to a client-handled
  /// device. The expected response to a command is to send back a DeviceCommandResponse.
  /// </summary>
  public sealed partial class DeviceCommandInfo : pb::IMessage<DeviceCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceCommandInfo> _parser = new pb::MessageParser<DeviceCommandInfo>(() => new DeviceCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCommandInfo(DeviceCommandInfo other) : this() {
      type_ = other.type_;
      timestamp_ = other.timestamp_;
      deviceId_ = other.deviceId_;
      commandSource_ = other.commandSource_;
      component_ = other.component_;
      isBroadcast_ = other.isBroadcast_;
      commandId_ = other.commandId_;
      switch (other.DataCase) {
        case DataOneofCase.Affiliate:
          Affiliate = other.Affiliate.Clone();
          break;
        case DataOneofCase.Deploy:
          Deploy = other.Deploy.Clone();
          break;
        case DataOneofCase.Energize:
          Energize = other.Energize.Clone();
          break;
        case DataOneofCase.Probe:
          Probe = other.Probe.Clone();
          break;
        case DataOneofCase.Fire:
          Fire = other.Fire.Clone();
          break;
        case DataOneofCase.Slew:
          Slew = other.Slew.Clone();
          break;
        case DataOneofCase.Nudge:
          Nudge = other.Nudge.Clone();
          break;
        case DataOneofCase.Focus:
          Focus = other.Focus.Clone();
          break;
        case DataOneofCase.Zoom:
          Zoom = other.Zoom.Clone();
          break;
        case DataOneofCase.Record:
          Record = other.Record.Clone();
          break;
        case DataOneofCase.Nuc:
          Nuc = other.Nuc.Clone();
          break;
        case DataOneofCase.North:
          North = other.North.Clone();
          break;
        case DataOneofCase.Counter:
          Counter = other.Counter.Clone();
          break;
        case DataOneofCase.Target:
          Target = other.Target.Clone();
          break;
        case DataOneofCase.EndMission:
          EndMission = other.EndMission.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCommandInfo Clone() {
      return new DeviceCommandInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.DeviceCommandType type_ = global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown;
    /// <summary>
    /// command type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceCommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    /// <summary>
    /// (milliseconds since epoch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private string deviceId_ = "";
    /// <summary>
    /// device being commanded / destination
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commandSource" field.</summary>
    public const int CommandSourceFieldNumber = 4;
    private string commandSource_ = "";
    /// <summary>
    /// source system initiating this command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CommandSource {
      get { return commandSource_; }
      set {
        commandSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "component" field.</summary>
    public const int ComponentFieldNumber = 5;
    private string component_ = "";
    /// <summary>
    /// support for child/sub-component/sub-sensor to receive the command
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Component {
      get { return component_; }
      set {
        component_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isBroadcast" field.</summary>
    public const int IsBroadcastFieldNumber = 6;
    private bool isBroadcast_;
    /// <summary>
    /// a broadcast command goes to all providers, not to a specific device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBroadcast {
      get { return isBroadcast_; }
      set {
        isBroadcast_ = value;
      }
    }

    /// <summary>Field number for the "commandId" field.</summary>
    public const int CommandIdFieldNumber = 7;
    private string commandId_ = "";
    /// <summary>
    /// A required unique identifier for this command, which will be returned within the response to the command to identify
    /// which command is being responded to. NOTE that the creator of this command message is responsible for
    /// setting this value to something that would allow for proper id within the received response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CommandId {
      get { return commandId_; }
      set {
        commandId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "affiliate" field.</summary>
    public const int AffiliateFieldNumber = 8;
    /// <summary>
    /// DeviceCommandType.DEVCMD_AFFILIATE command type.
    /// Notifies the system that a target was verified externally. The proper response to an affiliation command
    /// is a generic success message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetAffiliationInfo Affiliate {
      get { return dataCase_ == DataOneofCase.Affiliate ? (global::SAIC.Valkyrie.Api.V1.TargetAffiliationInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Affiliate;
      }
    }

    /// <summary>Field number for the "deploy" field.</summary>
    public const int DeployFieldNumber = 9;
    /// <summary>
    /// DeviceCommandType.DEVCMD_DEPLOY command type.
    /// A carte blanche command for a system to perform its primary function. Response to this command is implementation
    /// defined by each system, but must be at least the generic success message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ActionCommandInfo Deploy {
      get { return dataCase_ == DataOneofCase.Deploy ? (global::SAIC.Valkyrie.Api.V1.ActionCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Deploy;
      }
    }

    /// <summary>Field number for the "energize" field.</summary>
    public const int EnergizeFieldNumber = 10;
    /// <summary>
    /// DeviceCommandType.DEVCMD_ENERGIZE command type.
    /// A call for fire from an energy weapon. Focus requirements are sensor-defined, as some energy weapons
    /// can be omnidirectional. The proper response for this command is the generic success message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ActionCommandInfo Energize {
      get { return dataCase_ == DataOneofCase.Energize ? (global::SAIC.Valkyrie.Api.V1.ActionCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Energize;
      }
    }

    /// <summary>Field number for the "probe" field.</summary>
    public const int ProbeFieldNumber = 11;
    /// <summary>
    /// DeviceCommandType.DEVCMD_PROBE command type.
    /// Instructs a sensor to attempt to focus on a track or location more closely. The exclusivity and extent of this focus is
    /// dependent on the sensor. The proper response for this command is the generic success message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo Probe {
      get { return dataCase_ == DataOneofCase.Probe ? (global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Probe;
      }
    }

    /// <summary>Field number for the "fire" field.</summary>
    public const int FireFieldNumber = 12;
    /// <summary>
    /// DeviceCommandType.DEVCMD_FIRE command type.
    /// A call for fire from a kinetic weapon. Presupposes that the weapon has been otherwise focused on a target
    /// via a SLEW command. If the weapon has not been focused, and the device requires such, this command should
    /// fail by default.
    /// The proper response to this command is the generic response message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ActionCommandInfo Fire {
      get { return dataCase_ == DataOneofCase.Fire ? (global::SAIC.Valkyrie.Api.V1.ActionCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Fire;
      }
    }

    /// <summary>Field number for the "slew" field.</summary>
    public const int SlewFieldNumber = 13;
    /// <summary>
    /// DeviceCommandType.SLEW_CMD command type.
    /// This command supports multiple SLEW commands andmodes - slewing to a coordinate, to an az/el, to a moving
    /// target, or a manual stream of x/y changes to current angle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.SlewCommandInfo Slew {
      get { return dataCase_ == DataOneofCase.Slew ? (global::SAIC.Valkyrie.Api.V1.SlewCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Slew;
      }
    }

    /// <summary>Field number for the "nudge" field.</summary>
    public const int NudgeFieldNumber = 14;
    /// <summary>
    /// DeviceCommandType.DEVCMD_NUDGE command type.
    /// Contains nudge command details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo Nudge {
      get { return dataCase_ == DataOneofCase.Nudge ? (global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Nudge;
      }
    }

    /// <summary>Field number for the "focus" field.</summary>
    public const int FocusFieldNumber = 15;
    /// <summary>
    /// DeviceCommandType.DEVCMD_CAMERA_FOCUS command type.
    /// Commands the camera to focus using specified parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo Focus {
      get { return dataCase_ == DataOneofCase.Focus ? (global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Focus;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 16;
    /// <summary>
    /// DeviceCommandType.DEVCMD_CAMERA_ZOOM command type.
    /// Commands the camera to change zoom level using specified parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo Zoom {
      get { return dataCase_ == DataOneofCase.Zoom ? (global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Zoom;
      }
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 17;
    /// <summary>
    /// DeviceCommandType.DEVCMD_CAMERA_RECORD command type.
    /// Ability to start/stop recording for a camera system. Use component at top to specify
    /// camera type or optic if needed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo Record {
      get { return dataCase_ == DataOneofCase.Record ? (global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Record;
      }
    }

    /// <summary>Field number for the "nuc" field.</summary>
    public const int NucFieldNumber = 18;
    /// <summary>
    /// DeviceCommandType.DEVCMD_CAMERA_NUC command type.
    /// NUC (auto-calibration) command details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo Nuc {
      get { return dataCase_ == DataOneofCase.Nuc ? (global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Nuc;
      }
    }

    /// <summary>Field number for the "north" field.</summary>
    public const int NorthFieldNumber = 19;
    /// <summary>
    /// DeviceCommandType.DEVCMD_CONFIG_NORTHING command type.
    /// Configures the NORTH setting for a device - generally a radar device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo North {
      get { return dataCase_ == DataOneofCase.North ? (global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.North;
      }
    }

    /// <summary>Field number for the "counter" field.</summary>
    public const int CounterFieldNumber = 20;
    /// <summary>
    /// DeviceCommandType.DEVCMD_COUNTERMEASURE command type.
    /// Countermeasure command details - supports starting, stopping, and restarting a countermeasure against a target.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo Counter {
      get { return dataCase_ == DataOneofCase.Counter ? (global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Counter;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 21;
    /// <summary>
    /// DeviceCommandType.DEVCMD_UPDATE_TARGET command type.
    /// Similar to the TCUT UpdateCandidate command, this command updates the position of an active target,
    /// with position and velocity.
    /// This would be started via EwCountermeasureCommandInfo.EwCountermeasureCommandType=EW_CM_ACTIVATE
    /// and would feed positions to the targeting device while it is countering that target.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo Target {
      get { return dataCase_ == DataOneofCase.Target ? (global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Target;
      }
    }

    /// <summary>Field number for the "endMission" field.</summary>
    public const int EndMissionFieldNumber = 22;
    /// <summary>
    /// DeviceCommandType.DEVCMD_END_MISSION command type.
    /// Contains details for ending an active mission. Sent as a broadcast (generally).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo EndMission {
      get { return dataCase_ == DataOneofCase.EndMission ? (global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.EndMission;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Affiliate = 8,
      Deploy = 9,
      Energize = 10,
      Probe = 11,
      Fire = 12,
      Slew = 13,
      Nudge = 14,
      Focus = 15,
      Zoom = 16,
      Record = 17,
      Nuc = 18,
      North = 19,
      Counter = 20,
      Target = 21,
      EndMission = 22,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Timestamp != other.Timestamp) return false;
      if (DeviceId != other.DeviceId) return false;
      if (CommandSource != other.CommandSource) return false;
      if (Component != other.Component) return false;
      if (IsBroadcast != other.IsBroadcast) return false;
      if (CommandId != other.CommandId) return false;
      if (!object.Equals(Affiliate, other.Affiliate)) return false;
      if (!object.Equals(Deploy, other.Deploy)) return false;
      if (!object.Equals(Energize, other.Energize)) return false;
      if (!object.Equals(Probe, other.Probe)) return false;
      if (!object.Equals(Fire, other.Fire)) return false;
      if (!object.Equals(Slew, other.Slew)) return false;
      if (!object.Equals(Nudge, other.Nudge)) return false;
      if (!object.Equals(Focus, other.Focus)) return false;
      if (!object.Equals(Zoom, other.Zoom)) return false;
      if (!object.Equals(Record, other.Record)) return false;
      if (!object.Equals(Nuc, other.Nuc)) return false;
      if (!object.Equals(North, other.North)) return false;
      if (!object.Equals(Counter, other.Counter)) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if (!object.Equals(EndMission, other.EndMission)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) hash ^= Type.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (CommandSource.Length != 0) hash ^= CommandSource.GetHashCode();
      if (Component.Length != 0) hash ^= Component.GetHashCode();
      if (IsBroadcast != false) hash ^= IsBroadcast.GetHashCode();
      if (CommandId.Length != 0) hash ^= CommandId.GetHashCode();
      if (dataCase_ == DataOneofCase.Affiliate) hash ^= Affiliate.GetHashCode();
      if (dataCase_ == DataOneofCase.Deploy) hash ^= Deploy.GetHashCode();
      if (dataCase_ == DataOneofCase.Energize) hash ^= Energize.GetHashCode();
      if (dataCase_ == DataOneofCase.Probe) hash ^= Probe.GetHashCode();
      if (dataCase_ == DataOneofCase.Fire) hash ^= Fire.GetHashCode();
      if (dataCase_ == DataOneofCase.Slew) hash ^= Slew.GetHashCode();
      if (dataCase_ == DataOneofCase.Nudge) hash ^= Nudge.GetHashCode();
      if (dataCase_ == DataOneofCase.Focus) hash ^= Focus.GetHashCode();
      if (dataCase_ == DataOneofCase.Zoom) hash ^= Zoom.GetHashCode();
      if (dataCase_ == DataOneofCase.Record) hash ^= Record.GetHashCode();
      if (dataCase_ == DataOneofCase.Nuc) hash ^= Nuc.GetHashCode();
      if (dataCase_ == DataOneofCase.North) hash ^= North.GetHashCode();
      if (dataCase_ == DataOneofCase.Counter) hash ^= Counter.GetHashCode();
      if (dataCase_ == DataOneofCase.Target) hash ^= Target.GetHashCode();
      if (dataCase_ == DataOneofCase.EndMission) hash ^= EndMission.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (CommandSource.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CommandSource);
      }
      if (Component.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Component);
      }
      if (IsBroadcast != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsBroadcast);
      }
      if (CommandId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CommandId);
      }
      if (dataCase_ == DataOneofCase.Affiliate) {
        output.WriteRawTag(66);
        output.WriteMessage(Affiliate);
      }
      if (dataCase_ == DataOneofCase.Deploy) {
        output.WriteRawTag(74);
        output.WriteMessage(Deploy);
      }
      if (dataCase_ == DataOneofCase.Energize) {
        output.WriteRawTag(82);
        output.WriteMessage(Energize);
      }
      if (dataCase_ == DataOneofCase.Probe) {
        output.WriteRawTag(90);
        output.WriteMessage(Probe);
      }
      if (dataCase_ == DataOneofCase.Fire) {
        output.WriteRawTag(98);
        output.WriteMessage(Fire);
      }
      if (dataCase_ == DataOneofCase.Slew) {
        output.WriteRawTag(106);
        output.WriteMessage(Slew);
      }
      if (dataCase_ == DataOneofCase.Nudge) {
        output.WriteRawTag(114);
        output.WriteMessage(Nudge);
      }
      if (dataCase_ == DataOneofCase.Focus) {
        output.WriteRawTag(122);
        output.WriteMessage(Focus);
      }
      if (dataCase_ == DataOneofCase.Zoom) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Zoom);
      }
      if (dataCase_ == DataOneofCase.Record) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Record);
      }
      if (dataCase_ == DataOneofCase.Nuc) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Nuc);
      }
      if (dataCase_ == DataOneofCase.North) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(North);
      }
      if (dataCase_ == DataOneofCase.Counter) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Counter);
      }
      if (dataCase_ == DataOneofCase.Target) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Target);
      }
      if (dataCase_ == DataOneofCase.EndMission) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(EndMission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (CommandSource.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CommandSource);
      }
      if (Component.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Component);
      }
      if (IsBroadcast != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsBroadcast);
      }
      if (CommandId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CommandId);
      }
      if (dataCase_ == DataOneofCase.Affiliate) {
        output.WriteRawTag(66);
        output.WriteMessage(Affiliate);
      }
      if (dataCase_ == DataOneofCase.Deploy) {
        output.WriteRawTag(74);
        output.WriteMessage(Deploy);
      }
      if (dataCase_ == DataOneofCase.Energize) {
        output.WriteRawTag(82);
        output.WriteMessage(Energize);
      }
      if (dataCase_ == DataOneofCase.Probe) {
        output.WriteRawTag(90);
        output.WriteMessage(Probe);
      }
      if (dataCase_ == DataOneofCase.Fire) {
        output.WriteRawTag(98);
        output.WriteMessage(Fire);
      }
      if (dataCase_ == DataOneofCase.Slew) {
        output.WriteRawTag(106);
        output.WriteMessage(Slew);
      }
      if (dataCase_ == DataOneofCase.Nudge) {
        output.WriteRawTag(114);
        output.WriteMessage(Nudge);
      }
      if (dataCase_ == DataOneofCase.Focus) {
        output.WriteRawTag(122);
        output.WriteMessage(Focus);
      }
      if (dataCase_ == DataOneofCase.Zoom) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Zoom);
      }
      if (dataCase_ == DataOneofCase.Record) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Record);
      }
      if (dataCase_ == DataOneofCase.Nuc) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Nuc);
      }
      if (dataCase_ == DataOneofCase.North) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(North);
      }
      if (dataCase_ == DataOneofCase.Counter) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Counter);
      }
      if (dataCase_ == DataOneofCase.Target) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Target);
      }
      if (dataCase_ == DataOneofCase.EndMission) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(EndMission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (CommandSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandSource);
      }
      if (Component.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Component);
      }
      if (IsBroadcast != false) {
        size += 1 + 1;
      }
      if (CommandId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandId);
      }
      if (dataCase_ == DataOneofCase.Affiliate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Affiliate);
      }
      if (dataCase_ == DataOneofCase.Deploy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deploy);
      }
      if (dataCase_ == DataOneofCase.Energize) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Energize);
      }
      if (dataCase_ == DataOneofCase.Probe) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Probe);
      }
      if (dataCase_ == DataOneofCase.Fire) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fire);
      }
      if (dataCase_ == DataOneofCase.Slew) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Slew);
      }
      if (dataCase_ == DataOneofCase.Nudge) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nudge);
      }
      if (dataCase_ == DataOneofCase.Focus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Focus);
      }
      if (dataCase_ == DataOneofCase.Zoom) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Zoom);
      }
      if (dataCase_ == DataOneofCase.Record) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Record);
      }
      if (dataCase_ == DataOneofCase.Nuc) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Nuc);
      }
      if (dataCase_ == DataOneofCase.North) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(North);
      }
      if (dataCase_ == DataOneofCase.Counter) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Counter);
      }
      if (dataCase_ == DataOneofCase.Target) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (dataCase_ == DataOneofCase.EndMission) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EndMission);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        Type = other.Type;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.CommandSource.Length != 0) {
        CommandSource = other.CommandSource;
      }
      if (other.Component.Length != 0) {
        Component = other.Component;
      }
      if (other.IsBroadcast != false) {
        IsBroadcast = other.IsBroadcast;
      }
      if (other.CommandId.Length != 0) {
        CommandId = other.CommandId;
      }
      switch (other.DataCase) {
        case DataOneofCase.Affiliate:
          if (Affiliate == null) {
            Affiliate = new global::SAIC.Valkyrie.Api.V1.TargetAffiliationInfo();
          }
          Affiliate.MergeFrom(other.Affiliate);
          break;
        case DataOneofCase.Deploy:
          if (Deploy == null) {
            Deploy = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
          }
          Deploy.MergeFrom(other.Deploy);
          break;
        case DataOneofCase.Energize:
          if (Energize == null) {
            Energize = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
          }
          Energize.MergeFrom(other.Energize);
          break;
        case DataOneofCase.Probe:
          if (Probe == null) {
            Probe = new global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo();
          }
          Probe.MergeFrom(other.Probe);
          break;
        case DataOneofCase.Fire:
          if (Fire == null) {
            Fire = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
          }
          Fire.MergeFrom(other.Fire);
          break;
        case DataOneofCase.Slew:
          if (Slew == null) {
            Slew = new global::SAIC.Valkyrie.Api.V1.SlewCommandInfo();
          }
          Slew.MergeFrom(other.Slew);
          break;
        case DataOneofCase.Nudge:
          if (Nudge == null) {
            Nudge = new global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo();
          }
          Nudge.MergeFrom(other.Nudge);
          break;
        case DataOneofCase.Focus:
          if (Focus == null) {
            Focus = new global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo();
          }
          Focus.MergeFrom(other.Focus);
          break;
        case DataOneofCase.Zoom:
          if (Zoom == null) {
            Zoom = new global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo();
          }
          Zoom.MergeFrom(other.Zoom);
          break;
        case DataOneofCase.Record:
          if (Record == null) {
            Record = new global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo();
          }
          Record.MergeFrom(other.Record);
          break;
        case DataOneofCase.Nuc:
          if (Nuc == null) {
            Nuc = new global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo();
          }
          Nuc.MergeFrom(other.Nuc);
          break;
        case DataOneofCase.North:
          if (North == null) {
            North = new global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo();
          }
          North.MergeFrom(other.North);
          break;
        case DataOneofCase.Counter:
          if (Counter == null) {
            Counter = new global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo();
          }
          Counter.MergeFrom(other.Counter);
          break;
        case DataOneofCase.Target:
          if (Target == null) {
            Target = new global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo();
          }
          Target.MergeFrom(other.Target);
          break;
        case DataOneofCase.EndMission:
          if (EndMission == null) {
            EndMission = new global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo();
          }
          EndMission.MergeFrom(other.EndMission);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.DeviceCommandType) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
          case 34: {
            CommandSource = input.ReadString();
            break;
          }
          case 42: {
            Component = input.ReadString();
            break;
          }
          case 48: {
            IsBroadcast = input.ReadBool();
            break;
          }
          case 58: {
            CommandId = input.ReadString();
            break;
          }
          case 66: {
            global::SAIC.Valkyrie.Api.V1.TargetAffiliationInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.TargetAffiliationInfo();
            if (dataCase_ == DataOneofCase.Affiliate) {
              subBuilder.MergeFrom(Affiliate);
            }
            input.ReadMessage(subBuilder);
            Affiliate = subBuilder;
            break;
          }
          case 74: {
            global::SAIC.Valkyrie.Api.V1.ActionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
            if (dataCase_ == DataOneofCase.Deploy) {
              subBuilder.MergeFrom(Deploy);
            }
            input.ReadMessage(subBuilder);
            Deploy = subBuilder;
            break;
          }
          case 82: {
            global::SAIC.Valkyrie.Api.V1.ActionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
            if (dataCase_ == DataOneofCase.Energize) {
              subBuilder.MergeFrom(Energize);
            }
            input.ReadMessage(subBuilder);
            Energize = subBuilder;
            break;
          }
          case 90: {
            global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo();
            if (dataCase_ == DataOneofCase.Probe) {
              subBuilder.MergeFrom(Probe);
            }
            input.ReadMessage(subBuilder);
            Probe = subBuilder;
            break;
          }
          case 98: {
            global::SAIC.Valkyrie.Api.V1.ActionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
            if (dataCase_ == DataOneofCase.Fire) {
              subBuilder.MergeFrom(Fire);
            }
            input.ReadMessage(subBuilder);
            Fire = subBuilder;
            break;
          }
          case 106: {
            global::SAIC.Valkyrie.Api.V1.SlewCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewCommandInfo();
            if (dataCase_ == DataOneofCase.Slew) {
              subBuilder.MergeFrom(Slew);
            }
            input.ReadMessage(subBuilder);
            Slew = subBuilder;
            break;
          }
          case 114: {
            global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo();
            if (dataCase_ == DataOneofCase.Nudge) {
              subBuilder.MergeFrom(Nudge);
            }
            input.ReadMessage(subBuilder);
            Nudge = subBuilder;
            break;
          }
          case 122: {
            global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo();
            if (dataCase_ == DataOneofCase.Focus) {
              subBuilder.MergeFrom(Focus);
            }
            input.ReadMessage(subBuilder);
            Focus = subBuilder;
            break;
          }
          case 130: {
            global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo();
            if (dataCase_ == DataOneofCase.Zoom) {
              subBuilder.MergeFrom(Zoom);
            }
            input.ReadMessage(subBuilder);
            Zoom = subBuilder;
            break;
          }
          case 138: {
            global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo();
            if (dataCase_ == DataOneofCase.Record) {
              subBuilder.MergeFrom(Record);
            }
            input.ReadMessage(subBuilder);
            Record = subBuilder;
            break;
          }
          case 146: {
            global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo();
            if (dataCase_ == DataOneofCase.Nuc) {
              subBuilder.MergeFrom(Nuc);
            }
            input.ReadMessage(subBuilder);
            Nuc = subBuilder;
            break;
          }
          case 154: {
            global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo();
            if (dataCase_ == DataOneofCase.North) {
              subBuilder.MergeFrom(North);
            }
            input.ReadMessage(subBuilder);
            North = subBuilder;
            break;
          }
          case 162: {
            global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo();
            if (dataCase_ == DataOneofCase.Counter) {
              subBuilder.MergeFrom(Counter);
            }
            input.ReadMessage(subBuilder);
            Counter = subBuilder;
            break;
          }
          case 170: {
            global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo();
            if (dataCase_ == DataOneofCase.Target) {
              subBuilder.MergeFrom(Target);
            }
            input.ReadMessage(subBuilder);
            Target = subBuilder;
            break;
          }
          case 178: {
            global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo();
            if (dataCase_ == DataOneofCase.EndMission) {
              subBuilder.MergeFrom(EndMission);
            }
            input.ReadMessage(subBuilder);
            EndMission = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.DeviceCommandType) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
          case 34: {
            CommandSource = input.ReadString();
            break;
          }
          case 42: {
            Component = input.ReadString();
            break;
          }
          case 48: {
            IsBroadcast = input.ReadBool();
            break;
          }
          case 58: {
            CommandId = input.ReadString();
            break;
          }
          case 66: {
            global::SAIC.Valkyrie.Api.V1.TargetAffiliationInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.TargetAffiliationInfo();
            if (dataCase_ == DataOneofCase.Affiliate) {
              subBuilder.MergeFrom(Affiliate);
            }
            input.ReadMessage(subBuilder);
            Affiliate = subBuilder;
            break;
          }
          case 74: {
            global::SAIC.Valkyrie.Api.V1.ActionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
            if (dataCase_ == DataOneofCase.Deploy) {
              subBuilder.MergeFrom(Deploy);
            }
            input.ReadMessage(subBuilder);
            Deploy = subBuilder;
            break;
          }
          case 82: {
            global::SAIC.Valkyrie.Api.V1.ActionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
            if (dataCase_ == DataOneofCase.Energize) {
              subBuilder.MergeFrom(Energize);
            }
            input.ReadMessage(subBuilder);
            Energize = subBuilder;
            break;
          }
          case 90: {
            global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ProbeCommandInfo();
            if (dataCase_ == DataOneofCase.Probe) {
              subBuilder.MergeFrom(Probe);
            }
            input.ReadMessage(subBuilder);
            Probe = subBuilder;
            break;
          }
          case 98: {
            global::SAIC.Valkyrie.Api.V1.ActionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ActionCommandInfo();
            if (dataCase_ == DataOneofCase.Fire) {
              subBuilder.MergeFrom(Fire);
            }
            input.ReadMessage(subBuilder);
            Fire = subBuilder;
            break;
          }
          case 106: {
            global::SAIC.Valkyrie.Api.V1.SlewCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewCommandInfo();
            if (dataCase_ == DataOneofCase.Slew) {
              subBuilder.MergeFrom(Slew);
            }
            input.ReadMessage(subBuilder);
            Slew = subBuilder;
            break;
          }
          case 114: {
            global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.NudgeCommandInfo();
            if (dataCase_ == DataOneofCase.Nudge) {
              subBuilder.MergeFrom(Nudge);
            }
            input.ReadMessage(subBuilder);
            Nudge = subBuilder;
            break;
          }
          case 122: {
            global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraSetFocusCommandInfo();
            if (dataCase_ == DataOneofCase.Focus) {
              subBuilder.MergeFrom(Focus);
            }
            input.ReadMessage(subBuilder);
            Focus = subBuilder;
            break;
          }
          case 130: {
            global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraZoomCommandInfo();
            if (dataCase_ == DataOneofCase.Zoom) {
              subBuilder.MergeFrom(Zoom);
            }
            input.ReadMessage(subBuilder);
            Zoom = subBuilder;
            break;
          }
          case 138: {
            global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraRecordCommandInfo();
            if (dataCase_ == DataOneofCase.Record) {
              subBuilder.MergeFrom(Record);
            }
            input.ReadMessage(subBuilder);
            Record = subBuilder;
            break;
          }
          case 146: {
            global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.CameraNucCommandInfo();
            if (dataCase_ == DataOneofCase.Nuc) {
              subBuilder.MergeFrom(Nuc);
            }
            input.ReadMessage(subBuilder);
            Nuc = subBuilder;
            break;
          }
          case 154: {
            global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ConfigureNorthingCommandInfo();
            if (dataCase_ == DataOneofCase.North) {
              subBuilder.MergeFrom(North);
            }
            input.ReadMessage(subBuilder);
            North = subBuilder;
            break;
          }
          case 162: {
            global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandInfo();
            if (dataCase_ == DataOneofCase.Counter) {
              subBuilder.MergeFrom(Counter);
            }
            input.ReadMessage(subBuilder);
            Counter = subBuilder;
            break;
          }
          case 170: {
            global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.EwUpdateTargetCommandInfo();
            if (dataCase_ == DataOneofCase.Target) {
              subBuilder.MergeFrom(Target);
            }
            input.ReadMessage(subBuilder);
            Target = subBuilder;
            break;
          }
          case 178: {
            global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.EndMissionCommandInfo();
            if (dataCase_ == DataOneofCase.EndMission) {
              subBuilder.MergeFrom(EndMission);
            }
            input.ReadMessage(subBuilder);
            EndMission = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The DeviceCommandResponse message contains a response from a device to a command that has been sent to it.
  /// </summary>
  public sealed partial class DeviceCommandResponse : pb::IMessage<DeviceCommandResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceCommandResponse> _parser = new pb::MessageParser<DeviceCommandResponse>(() => new DeviceCommandResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceCommandResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCommandResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCommandResponse(DeviceCommandResponse other) : this() {
      commandId_ = other.commandId_;
      commandType_ = other.commandType_;
      deviceId_ = other.deviceId_;
      timestamp_ = other.timestamp_;
      willComply_ = other.willComply_;
      details_ = other.details_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceCommandResponse Clone() {
      return new DeviceCommandResponse(this);
    }

    /// <summary>Field number for the "commandId" field.</summary>
    public const int CommandIdFieldNumber = 1;
    private string commandId_ = "";
    /// <summary>
    /// Every sent command has a unique identifier named commandId attached to it. this is that
    /// identifier sent back within the response to properly match command with response. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CommandId {
      get { return commandId_; }
      set {
        commandId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commandType" field.</summary>
    public const int CommandTypeFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.DeviceCommandType commandType_ = global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown;
    /// <summary>
    /// The command type being responded to. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceCommandType CommandType {
      get { return commandType_; }
      set {
        commandType_ = value;
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private string deviceId_ = "";
    /// <summary>
    /// The device the command was sent to. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private long timestamp_;
    /// <summary>
    /// Sent timestamp (milliseconds since epoch). Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "willComply" field.</summary>
    public const int WillComplyFieldNumber = 5;
    private bool willComply_;
    /// <summary>
    /// If the device has complied with the command or not. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WillComply {
      get { return willComply_; }
      set {
        willComply_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 6;
    private string details_ = "";
    /// <summary>
    /// Any detail information regarding the response - particularly in a fail case. Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Details {
      get { return details_; }
      set {
        details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceCommandResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceCommandResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandId != other.CommandId) return false;
      if (CommandType != other.CommandType) return false;
      if (DeviceId != other.DeviceId) return false;
      if (Timestamp != other.Timestamp) return false;
      if (WillComply != other.WillComply) return false;
      if (Details != other.Details) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandId.Length != 0) hash ^= CommandId.GetHashCode();
      if (CommandType != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) hash ^= CommandType.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (WillComply != false) hash ^= WillComply.GetHashCode();
      if (Details.Length != 0) hash ^= Details.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommandId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CommandId);
      }
      if (CommandType != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CommandType);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Timestamp);
      }
      if (WillComply != false) {
        output.WriteRawTag(40);
        output.WriteBool(WillComply);
      }
      if (Details.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommandId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CommandId);
      }
      if (CommandType != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CommandType);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Timestamp);
      }
      if (WillComply != false) {
        output.WriteRawTag(40);
        output.WriteBool(WillComply);
      }
      if (Details.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CommandId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandId);
      }
      if (CommandType != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommandType);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (WillComply != false) {
        size += 1 + 1;
      }
      if (Details.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Details);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceCommandResponse other) {
      if (other == null) {
        return;
      }
      if (other.CommandId.Length != 0) {
        CommandId = other.CommandId;
      }
      if (other.CommandType != global::SAIC.Valkyrie.Api.V1.DeviceCommandType.DevcmdUnknown) {
        CommandType = other.CommandType;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.WillComply != false) {
        WillComply = other.WillComply;
      }
      if (other.Details.Length != 0) {
        Details = other.Details;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CommandId = input.ReadString();
            break;
          }
          case 16: {
            CommandType = (global::SAIC.Valkyrie.Api.V1.DeviceCommandType) input.ReadEnum();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
          case 32: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 40: {
            WillComply = input.ReadBool();
            break;
          }
          case 50: {
            Details = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CommandId = input.ReadString();
            break;
          }
          case 16: {
            CommandType = (global::SAIC.Valkyrie.Api.V1.DeviceCommandType) input.ReadEnum();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
          case 32: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 40: {
            WillComply = input.ReadBool();
            break;
          }
          case 50: {
            Details = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The ActionCommandInfo message contains details for a generic command definition that supports a target
  /// and a cancel for the operation. This message is used for deploy, energize, and fire commands.
  /// </summary>
  public sealed partial class ActionCommandInfo : pb::IMessage<ActionCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionCommandInfo> _parser = new pb::MessageParser<ActionCommandInfo>(() => new ActionCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionCommandInfo(ActionCommandInfo other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      cancel_ = other.cancel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionCommandInfo Clone() {
      return new ActionCommandInfo(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.TargetIdentifier target_;
    /// <summary>
    /// An optional target for this action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetIdentifier Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "cancel" field.</summary>
    public const int CancelFieldNumber = 2;
    private bool cancel_;
    /// <summary>
    /// Indicates to the system that any continuous action should be cancelled if true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cancel {
      get { return cancel_; }
      set {
        cancel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      if (Cancel != other.Cancel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (Cancel != false) hash ^= Cancel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (Cancel != false) {
        output.WriteRawTag(16);
        output.WriteBool(Cancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (Cancel != false) {
        output.WriteRawTag(16);
        output.WriteBool(Cancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (Cancel != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.Cancel != false) {
        Cancel = other.Cancel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 16: {
            Cancel = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 16: {
            Cancel = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The ProbeCommandInfo message provides details for the DeviceCommandType.DEVCMD_PROBE command type.
  /// Instructs a sensor to attempt to focus on a track or location more closely.
  /// The exclusivity and extent of this focus is dependent on the sensor.
  /// </summary>
  public sealed partial class ProbeCommandInfo : pb::IMessage<ProbeCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProbeCommandInfo> _parser = new pb::MessageParser<ProbeCommandInfo>(() => new ProbeCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProbeCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeCommandInfo(ProbeCommandInfo other) : this() {
      cancel_ = other.cancel_;
      switch (other.DataCase) {
        case DataOneofCase.Direction:
          Direction = other.Direction.Clone();
          break;
        case DataOneofCase.Cued:
          Cued = other.Cued.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeCommandInfo Clone() {
      return new ProbeCommandInfo(this);
    }

    /// <summary>Field number for the "cancel" field.</summary>
    public const int CancelFieldNumber = 1;
    private bool cancel_;
    /// <summary>
    /// Indicates to the system that the provided focus (if any) on this target should
    /// be halted if true. If no focus is provided, all focus commands on the system should be ended.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cancel {
      get { return cancel_; }
      set {
        cancel_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    /// <summary>
    ///whether the probe command should be directional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo Direction {
      get { return dataCase_ == DataOneofCase.Direction ? (global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Direction;
      }
    }

    /// <summary>Field number for the "cued" field.</summary>
    public const int CuedFieldNumber = 3;
    /// <summary>
    ///whether the probe command is cued or probe-to-threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo Cued {
      get { return dataCase_ == DataOneofCase.Cued ? (global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Cued;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Direction = 2,
      Cued = 3,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProbeCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProbeCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cancel != other.Cancel) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      if (!object.Equals(Cued, other.Cued)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cancel != false) hash ^= Cancel.GetHashCode();
      if (dataCase_ == DataOneofCase.Direction) hash ^= Direction.GetHashCode();
      if (dataCase_ == DataOneofCase.Cued) hash ^= Cued.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cancel != false) {
        output.WriteRawTag(8);
        output.WriteBool(Cancel);
      }
      if (dataCase_ == DataOneofCase.Direction) {
        output.WriteRawTag(18);
        output.WriteMessage(Direction);
      }
      if (dataCase_ == DataOneofCase.Cued) {
        output.WriteRawTag(26);
        output.WriteMessage(Cued);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cancel != false) {
        output.WriteRawTag(8);
        output.WriteBool(Cancel);
      }
      if (dataCase_ == DataOneofCase.Direction) {
        output.WriteRawTag(18);
        output.WriteMessage(Direction);
      }
      if (dataCase_ == DataOneofCase.Cued) {
        output.WriteRawTag(26);
        output.WriteMessage(Cued);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cancel != false) {
        size += 1 + 1;
      }
      if (dataCase_ == DataOneofCase.Direction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (dataCase_ == DataOneofCase.Cued) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cued);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProbeCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Cancel != false) {
        Cancel = other.Cancel;
      }
      switch (other.DataCase) {
        case DataOneofCase.Direction:
          if (Direction == null) {
            Direction = new global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo();
          }
          Direction.MergeFrom(other.Direction);
          break;
        case DataOneofCase.Cued:
          if (Cued == null) {
            Cued = new global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo();
          }
          Cued.MergeFrom(other.Cued);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cancel = input.ReadBool();
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo();
            if (dataCase_ == DataOneofCase.Direction) {
              subBuilder.MergeFrom(Direction);
            }
            input.ReadMessage(subBuilder);
            Direction = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo();
            if (dataCase_ == DataOneofCase.Cued) {
              subBuilder.MergeFrom(Cued);
            }
            input.ReadMessage(subBuilder);
            Cued = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cancel = input.ReadBool();
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandInfo();
            if (dataCase_ == DataOneofCase.Direction) {
              subBuilder.MergeFrom(Direction);
            }
            input.ReadMessage(subBuilder);
            Direction = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.ProbeCuedCommandInfo();
            if (dataCase_ == DataOneofCase.Cued) {
              subBuilder.MergeFrom(Cued);
            }
            input.ReadMessage(subBuilder);
            Cued = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The ProbeDirectionalCommandInfo message is a sub-message of ProbeCommandInfo.
  /// It contains details to commands a device (usually a radar) to place a directional track-beam.
  /// This is a request for the radar to pay special attention to a particular
  /// direction in space. How the radar allocates this attention is radar-defined.
  /// </summary>
  public sealed partial class ProbeDirectionalCommandInfo : pb::IMessage<ProbeDirectionalCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProbeDirectionalCommandInfo> _parser = new pb::MessageParser<ProbeDirectionalCommandInfo>(() => new ProbeDirectionalCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProbeDirectionalCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeDirectionalCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeDirectionalCommandInfo(ProbeDirectionalCommandInfo other) : this() {
      type_ = other.type_;
      switch (other.DataCase) {
        case DataOneofCase.Position:
          Position = other.Position.Clone();
          break;
        case DataOneofCase.Lob:
          Lob = other.Lob.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeDirectionalCommandInfo Clone() {
      return new ProbeDirectionalCommandInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType type_ = global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType.ProbeDirectionalUnknown;
    /// <summary>
    /// A directional probe command can be directed at a specific map position or along a LOB.
    /// this enum defines which one is being sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    /// <summary>
    /// Position to direct the radar towards for this track-beam.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Position {
      get { return dataCase_ == DataOneofCase.Position ? (global::SAIC.Valkyrie.Api.V1.CoordinateLla) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Position;
      }
    }

    /// <summary>Field number for the "lob" field.</summary>
    public const int LobFieldNumber = 3;
    /// <summary>
    /// Line of bearing from the commanded radar for this track-beam. It is up to the sender to
    /// provide this value with respect to the radar’s location, otherwise LLA values should be used. (Units:
    /// degrees)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.LineOfBearing Lob {
      get { return dataCase_ == DataOneofCase.Lob ? (global::SAIC.Valkyrie.Api.V1.LineOfBearing) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Lob;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Position = 2,
      Lob = 3,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProbeDirectionalCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProbeDirectionalCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Lob, other.Lob)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType.ProbeDirectionalUnknown) hash ^= Type.GetHashCode();
      if (dataCase_ == DataOneofCase.Position) hash ^= Position.GetHashCode();
      if (dataCase_ == DataOneofCase.Lob) hash ^= Lob.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType.ProbeDirectionalUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.Position) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (dataCase_ == DataOneofCase.Lob) {
        output.WriteRawTag(26);
        output.WriteMessage(Lob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType.ProbeDirectionalUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (dataCase_ == DataOneofCase.Position) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (dataCase_ == DataOneofCase.Lob) {
        output.WriteRawTag(26);
        output.WriteMessage(Lob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType.ProbeDirectionalUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (dataCase_ == DataOneofCase.Position) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (dataCase_ == DataOneofCase.Lob) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lob);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProbeDirectionalCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType.ProbeDirectionalUnknown) {
        Type = other.Type;
      }
      switch (other.DataCase) {
        case DataOneofCase.Position:
          if (Position == null) {
            Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
          }
          Position.MergeFrom(other.Position);
          break;
        case DataOneofCase.Lob:
          if (Lob == null) {
            Lob = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
          }
          Lob.MergeFrom(other.Lob);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.CoordinateLla subBuilder = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            if (dataCase_ == DataOneofCase.Position) {
              subBuilder.MergeFrom(Position);
            }
            input.ReadMessage(subBuilder);
            Position = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.LineOfBearing subBuilder = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
            if (dataCase_ == DataOneofCase.Lob) {
              subBuilder.MergeFrom(Lob);
            }
            input.ReadMessage(subBuilder);
            Lob = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.ProbeDirectionalCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.CoordinateLla subBuilder = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            if (dataCase_ == DataOneofCase.Position) {
              subBuilder.MergeFrom(Position);
            }
            input.ReadMessage(subBuilder);
            Position = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.LineOfBearing subBuilder = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
            if (dataCase_ == DataOneofCase.Lob) {
              subBuilder.MergeFrom(Lob);
            }
            input.ReadMessage(subBuilder);
            Lob = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The ProbeCuedCommandInfo message is a sub-message of ProbeCommandInfo.
  /// It provides details to begin a cue-based focus, using some internal track from the sensor.
  /// </summary>
  public sealed partial class ProbeCuedCommandInfo : pb::IMessage<ProbeCuedCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProbeCuedCommandInfo> _parser = new pb::MessageParser<ProbeCuedCommandInfo>(() => new ProbeCuedCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProbeCuedCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeCuedCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeCuedCommandInfo(ProbeCuedCommandInfo other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProbeCuedCommandInfo Clone() {
      return new ProbeCuedCommandInfo(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.TargetIdentifier target_;
    /// <summary>
    /// target to cue to for the probe command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetIdentifier Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProbeCuedCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProbeCuedCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProbeCuedCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The SlewCommandInfo message provides details for the DeviceCommandType.SLEW_CMD command type.
  /// This command supports multiple SLEW modes - slewing to a coordinate, to an az/el, to a moving
  /// target, or a manual stream of x/y changes to current az.
  /// For static slew, instructs a sensor to direct itself to a certain location (LLA or Azimuth/Elevation).
  /// For targeted, a request for the sensor to slew itself according to a cue. The cue is assumed to be provided
  /// via a position feed, guaranteeing unique identification of the cue with source_system and track_id/threat_id.
  /// </summary>
  public sealed partial class SlewCommandInfo : pb::IMessage<SlewCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SlewCommandInfo> _parser = new pb::MessageParser<SlewCommandInfo>(() => new SlewCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SlewCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewCommandInfo(SlewCommandInfo other) : this() {
      action_ = other.action_;
      switch (other.DataCase) {
        case DataOneofCase.Location:
          Location = other.Location.Clone();
          break;
        case DataOneofCase.Lob:
          Lob = other.Lob.Clone();
          break;
        case DataOneofCase.Target:
          Target = other.Target.Clone();
          break;
        case DataOneofCase.Auto:
          Auto = other.Auto.Clone();
          break;
        case DataOneofCase.Manual:
          Manual = other.Manual.Clone();
          break;
        case DataOneofCase.Rates:
          Rates = other.Rates.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewCommandInfo Clone() {
      return new SlewCommandInfo(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.SlewCommandActionType action_ = global::SAIC.Valkyrie.Api.V1.SlewCommandActionType.SlewCmdToLocation;
    /// <summary>
    /// the kind of slew to perform
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.SlewCommandActionType Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    /// <summary>
    /// for SLEW_CMD_TO_LOCATION
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Location {
      get { return dataCase_ == DataOneofCase.Location ? (global::SAIC.Valkyrie.Api.V1.CoordinateLla) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Location;
      }
    }

    /// <summary>Field number for the "lob" field.</summary>
    public const int LobFieldNumber = 3;
    /// <summary>
    /// for SLEW_CMD_TO_LOB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.LineOfBearing Lob {
      get { return dataCase_ == DataOneofCase.Lob ? (global::SAIC.Valkyrie.Api.V1.LineOfBearing) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Lob;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 4;
    /// <summary>
    /// for SLEW_CMD_TO_TARGET
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo Target {
      get { return dataCase_ == DataOneofCase.Target ? (global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Target;
      }
    }

    /// <summary>Field number for the "auto" field.</summary>
    public const int AutoFieldNumber = 5;
    /// <summary>
    /// for SLEW_CMD_AUTO_TRACK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo Auto {
      get { return dataCase_ == DataOneofCase.Auto ? (global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Auto;
      }
    }

    /// <summary>Field number for the "manual" field.</summary>
    public const int ManualFieldNumber = 6;
    /// <summary>
    /// for SLEW_CMD_MANUAL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo Manual {
      get { return dataCase_ == DataOneofCase.Manual ? (global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Manual;
      }
    }

    /// <summary>Field number for the "rates" field.</summary>
    public const int RatesFieldNumber = 7;
    /// <summary>
    /// for SLEW_CMD_CONFIGURE_RATES
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo Rates {
      get { return dataCase_ == DataOneofCase.Rates ? (global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Rates;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Location = 2,
      Lob = 3,
      Target = 4,
      Auto = 5,
      Manual = 6,
      Rates = 7,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SlewCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SlewCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Lob, other.Lob)) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if (!object.Equals(Auto, other.Auto)) return false;
      if (!object.Equals(Manual, other.Manual)) return false;
      if (!object.Equals(Rates, other.Rates)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::SAIC.Valkyrie.Api.V1.SlewCommandActionType.SlewCmdToLocation) hash ^= Action.GetHashCode();
      if (dataCase_ == DataOneofCase.Location) hash ^= Location.GetHashCode();
      if (dataCase_ == DataOneofCase.Lob) hash ^= Lob.GetHashCode();
      if (dataCase_ == DataOneofCase.Target) hash ^= Target.GetHashCode();
      if (dataCase_ == DataOneofCase.Auto) hash ^= Auto.GetHashCode();
      if (dataCase_ == DataOneofCase.Manual) hash ^= Manual.GetHashCode();
      if (dataCase_ == DataOneofCase.Rates) hash ^= Rates.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Action != global::SAIC.Valkyrie.Api.V1.SlewCommandActionType.SlewCmdToLocation) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (dataCase_ == DataOneofCase.Location) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (dataCase_ == DataOneofCase.Lob) {
        output.WriteRawTag(26);
        output.WriteMessage(Lob);
      }
      if (dataCase_ == DataOneofCase.Target) {
        output.WriteRawTag(34);
        output.WriteMessage(Target);
      }
      if (dataCase_ == DataOneofCase.Auto) {
        output.WriteRawTag(42);
        output.WriteMessage(Auto);
      }
      if (dataCase_ == DataOneofCase.Manual) {
        output.WriteRawTag(50);
        output.WriteMessage(Manual);
      }
      if (dataCase_ == DataOneofCase.Rates) {
        output.WriteRawTag(58);
        output.WriteMessage(Rates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Action != global::SAIC.Valkyrie.Api.V1.SlewCommandActionType.SlewCmdToLocation) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (dataCase_ == DataOneofCase.Location) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (dataCase_ == DataOneofCase.Lob) {
        output.WriteRawTag(26);
        output.WriteMessage(Lob);
      }
      if (dataCase_ == DataOneofCase.Target) {
        output.WriteRawTag(34);
        output.WriteMessage(Target);
      }
      if (dataCase_ == DataOneofCase.Auto) {
        output.WriteRawTag(42);
        output.WriteMessage(Auto);
      }
      if (dataCase_ == DataOneofCase.Manual) {
        output.WriteRawTag(50);
        output.WriteMessage(Manual);
      }
      if (dataCase_ == DataOneofCase.Rates) {
        output.WriteRawTag(58);
        output.WriteMessage(Rates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::SAIC.Valkyrie.Api.V1.SlewCommandActionType.SlewCmdToLocation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (dataCase_ == DataOneofCase.Location) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (dataCase_ == DataOneofCase.Lob) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lob);
      }
      if (dataCase_ == DataOneofCase.Target) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (dataCase_ == DataOneofCase.Auto) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auto);
      }
      if (dataCase_ == DataOneofCase.Manual) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Manual);
      }
      if (dataCase_ == DataOneofCase.Rates) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rates);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SlewCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::SAIC.Valkyrie.Api.V1.SlewCommandActionType.SlewCmdToLocation) {
        Action = other.Action;
      }
      switch (other.DataCase) {
        case DataOneofCase.Location:
          if (Location == null) {
            Location = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
          }
          Location.MergeFrom(other.Location);
          break;
        case DataOneofCase.Lob:
          if (Lob == null) {
            Lob = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
          }
          Lob.MergeFrom(other.Lob);
          break;
        case DataOneofCase.Target:
          if (Target == null) {
            Target = new global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo();
          }
          Target.MergeFrom(other.Target);
          break;
        case DataOneofCase.Auto:
          if (Auto == null) {
            Auto = new global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo();
          }
          Auto.MergeFrom(other.Auto);
          break;
        case DataOneofCase.Manual:
          if (Manual == null) {
            Manual = new global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo();
          }
          Manual.MergeFrom(other.Manual);
          break;
        case DataOneofCase.Rates:
          if (Rates == null) {
            Rates = new global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo();
          }
          Rates.MergeFrom(other.Rates);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::SAIC.Valkyrie.Api.V1.SlewCommandActionType) input.ReadEnum();
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.CoordinateLla subBuilder = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            if (dataCase_ == DataOneofCase.Location) {
              subBuilder.MergeFrom(Location);
            }
            input.ReadMessage(subBuilder);
            Location = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.LineOfBearing subBuilder = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
            if (dataCase_ == DataOneofCase.Lob) {
              subBuilder.MergeFrom(Lob);
            }
            input.ReadMessage(subBuilder);
            Lob = subBuilder;
            break;
          }
          case 34: {
            global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo();
            if (dataCase_ == DataOneofCase.Target) {
              subBuilder.MergeFrom(Target);
            }
            input.ReadMessage(subBuilder);
            Target = subBuilder;
            break;
          }
          case 42: {
            global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo();
            if (dataCase_ == DataOneofCase.Auto) {
              subBuilder.MergeFrom(Auto);
            }
            input.ReadMessage(subBuilder);
            Auto = subBuilder;
            break;
          }
          case 50: {
            global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo();
            if (dataCase_ == DataOneofCase.Manual) {
              subBuilder.MergeFrom(Manual);
            }
            input.ReadMessage(subBuilder);
            Manual = subBuilder;
            break;
          }
          case 58: {
            global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo();
            if (dataCase_ == DataOneofCase.Rates) {
              subBuilder.MergeFrom(Rates);
            }
            input.ReadMessage(subBuilder);
            Rates = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = (global::SAIC.Valkyrie.Api.V1.SlewCommandActionType) input.ReadEnum();
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.CoordinateLla subBuilder = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            if (dataCase_ == DataOneofCase.Location) {
              subBuilder.MergeFrom(Location);
            }
            input.ReadMessage(subBuilder);
            Location = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.LineOfBearing subBuilder = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
            if (dataCase_ == DataOneofCase.Lob) {
              subBuilder.MergeFrom(Lob);
            }
            input.ReadMessage(subBuilder);
            Lob = subBuilder;
            break;
          }
          case 34: {
            global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo();
            if (dataCase_ == DataOneofCase.Target) {
              subBuilder.MergeFrom(Target);
            }
            input.ReadMessage(subBuilder);
            Target = subBuilder;
            break;
          }
          case 42: {
            global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewToTargetCommandInfo();
            if (dataCase_ == DataOneofCase.Auto) {
              subBuilder.MergeFrom(Auto);
            }
            input.ReadMessage(subBuilder);
            Auto = subBuilder;
            break;
          }
          case 50: {
            global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewManualCommandInfo();
            if (dataCase_ == DataOneofCase.Manual) {
              subBuilder.MergeFrom(Manual);
            }
            input.ReadMessage(subBuilder);
            Manual = subBuilder;
            break;
          }
          case 58: {
            global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo subBuilder = new global::SAIC.Valkyrie.Api.V1.SlewRateConfigurationInfo();
            if (dataCase_ == DataOneofCase.Rates) {
              subBuilder.MergeFrom(Rates);
            }
            input.ReadMessage(subBuilder);
            Rates = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The SlewRateConfigurationInfo message is a sub-message of SlewCommandInfo.
  /// It is used with SLEW_CMD_CONFIGURE_RATES type.
  /// Sets the slew rates for the device (or some sub-component). This is a configuration command,
  /// not an action command. Use SlewManualCommandInfo for actively changing slew position manually.
  /// </summary>
  public sealed partial class SlewRateConfigurationInfo : pb::IMessage<SlewRateConfigurationInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SlewRateConfigurationInfo> _parser = new pb::MessageParser<SlewRateConfigurationInfo>(() => new SlewRateConfigurationInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SlewRateConfigurationInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewRateConfigurationInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewRateConfigurationInfo(SlewRateConfigurationInfo other) : this() {
      azimuthRate_ = other.azimuthRate_;
      elevationRate_ = other.elevationRate_;
      enable_ = other.enable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewRateConfigurationInfo Clone() {
      return new SlewRateConfigurationInfo(this);
    }

    /// <summary>Field number for the "azimuthRate" field.</summary>
    public const int AzimuthRateFieldNumber = 1;
    private double azimuthRate_;
    /// <summary>
    ///  (azimuth_angle | required) - New azimuth slew rate (Units: degrees/second)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double AzimuthRate {
      get { return azimuthRate_; }
      set {
        azimuthRate_ = value;
      }
    }

    /// <summary>Field number for the "elevationRate" field.</summary>
    public const int ElevationRateFieldNumber = 2;
    private double elevationRate_;
    /// <summary>
    /// (elevation_angle | required) - New elevation slew rate (Units: degrees/second)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ElevationRate {
      get { return elevationRate_; }
      set {
        elevationRate_ = value;
      }
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 3;
    private bool enable_;
    /// <summary>
    ///  Enable(true)/Disable(false) system slewing for this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SlewRateConfigurationInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SlewRateConfigurationInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AzimuthRate, other.AzimuthRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ElevationRate, other.ElevationRate)) return false;
      if (Enable != other.Enable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AzimuthRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AzimuthRate);
      if (ElevationRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ElevationRate);
      if (Enable != false) hash ^= Enable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AzimuthRate != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(AzimuthRate);
      }
      if (ElevationRate != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ElevationRate);
      }
      if (Enable != false) {
        output.WriteRawTag(24);
        output.WriteBool(Enable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AzimuthRate != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(AzimuthRate);
      }
      if (ElevationRate != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ElevationRate);
      }
      if (Enable != false) {
        output.WriteRawTag(24);
        output.WriteBool(Enable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AzimuthRate != 0D) {
        size += 1 + 8;
      }
      if (ElevationRate != 0D) {
        size += 1 + 8;
      }
      if (Enable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SlewRateConfigurationInfo other) {
      if (other == null) {
        return;
      }
      if (other.AzimuthRate != 0D) {
        AzimuthRate = other.AzimuthRate;
      }
      if (other.ElevationRate != 0D) {
        ElevationRate = other.ElevationRate;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            AzimuthRate = input.ReadDouble();
            break;
          }
          case 17: {
            ElevationRate = input.ReadDouble();
            break;
          }
          case 24: {
            Enable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            AzimuthRate = input.ReadDouble();
            break;
          }
          case 17: {
            ElevationRate = input.ReadDouble();
            break;
          }
          case 24: {
            Enable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The SlewToTargetCommandInfo message is a sub-message of SlewCommandInfo.
  /// It is used with SLEW_CMD_TO_TARGET type.
  /// Provides the identification of the target to slew to.
  /// </summary>
  public sealed partial class SlewToTargetCommandInfo : pb::IMessage<SlewToTargetCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SlewToTargetCommandInfo> _parser = new pb::MessageParser<SlewToTargetCommandInfo>(() => new SlewToTargetCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SlewToTargetCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewToTargetCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewToTargetCommandInfo(SlewToTargetCommandInfo other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      cancel_ = other.cancel_;
      pause_ = other.pause_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewToTargetCommandInfo Clone() {
      return new SlewToTargetCommandInfo(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.TargetIdentifier target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetIdentifier Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "cancel" field.</summary>
    public const int CancelFieldNumber = 4;
    private bool cancel_;
    /// <summary>
    /// stop slewing to target/cue
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cancel {
      get { return cancel_; }
      set {
        cancel_ = value;
      }
    }

    /// <summary>Field number for the "pause" field.</summary>
    public const int PauseFieldNumber = 5;
    private bool pause_;
    /// <summary>
    /// pause the active cueing/targeting. this matches the ignore_slew command in DON
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Pause {
      get { return pause_; }
      set {
        pause_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SlewToTargetCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SlewToTargetCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      if (Cancel != other.Cancel) return false;
      if (Pause != other.Pause) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (Cancel != false) hash ^= Cancel.GetHashCode();
      if (Pause != false) hash ^= Pause.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (Cancel != false) {
        output.WriteRawTag(32);
        output.WriteBool(Cancel);
      }
      if (Pause != false) {
        output.WriteRawTag(40);
        output.WriteBool(Pause);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (Cancel != false) {
        output.WriteRawTag(32);
        output.WriteBool(Cancel);
      }
      if (Pause != false) {
        output.WriteRawTag(40);
        output.WriteBool(Pause);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (Cancel != false) {
        size += 1 + 1;
      }
      if (Pause != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SlewToTargetCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.Cancel != false) {
        Cancel = other.Cancel;
      }
      if (other.Pause != false) {
        Pause = other.Pause;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 32: {
            Cancel = input.ReadBool();
            break;
          }
          case 40: {
            Pause = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 32: {
            Cancel = input.ReadBool();
            break;
          }
          case 40: {
            Pause = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The SlewManualCommandInfo message is a sub-message of SlewCommandInfo.
  /// It is used with SLEW_CMD_START_MANUAL type.
  /// A manual slew is used in conjunction with a joystick, supporting a steady stream of direction change commands.
  /// </summary>
  public sealed partial class SlewManualCommandInfo : pb::IMessage<SlewManualCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SlewManualCommandInfo> _parser = new pb::MessageParser<SlewManualCommandInfo>(() => new SlewManualCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SlewManualCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewManualCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewManualCommandInfo(SlewManualCommandInfo other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      cancel_ = other.cancel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlewManualCommandInfo Clone() {
      return new SlewManualCommandInfo(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    /// <summary>
    /// the speed at which to slew in the X direction, as a percentage value between -1 and +1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    /// <summary>
    /// the speed at which to slew in the Y direction, as a percentage value between -1 and +1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "cancel" field.</summary>
    public const int CancelFieldNumber = 3;
    private bool cancel_;
    /// <summary>
    /// stops a manual slew
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cancel {
      get { return cancel_; }
      set {
        cancel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SlewManualCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SlewManualCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (Cancel != other.Cancel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Cancel != false) hash ^= Cancel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Cancel != false) {
        output.WriteRawTag(24);
        output.WriteBool(Cancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Cancel != false) {
        output.WriteRawTag(24);
        output.WriteBool(Cancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Cancel != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SlewManualCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Cancel != false) {
        Cancel = other.Cancel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 24: {
            Cancel = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 24: {
            Cancel = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The NudgeCommandInfo message provides details for the DeviceCommandType.DEVCMD_CAMERA_NUDGE command type.
  /// </summary>
  public sealed partial class NudgeCommandInfo : pb::IMessage<NudgeCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NudgeCommandInfo> _parser = new pb::MessageParser<NudgeCommandInfo>(() => new NudgeCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NudgeCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NudgeCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NudgeCommandInfo(NudgeCommandInfo other) : this() {
      type_ = other.type_;
      NudgeAmount = other.NudgeAmount;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NudgeCommandInfo Clone() {
      return new NudgeCommandInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.NudgeCommandType type_ = global::SAIC.Valkyrie.Api.V1.NudgeCommandType.NudgeCmdLeft;
    /// <summary>
    /// the direction of the nudge to perform
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.NudgeCommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "nudgeAmount" field.</summary>
    public const int NudgeAmountFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_nudgeAmount_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? nudgeAmount_;
    /// <summary>
    ///  percentage - optional nudge amount to change (Units: 0-1 Percentage of maximum nudge)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? NudgeAmount {
      get { return nudgeAmount_; }
      set {
        nudgeAmount_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NudgeCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NudgeCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(NudgeAmount, other.NudgeAmount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SAIC.Valkyrie.Api.V1.NudgeCommandType.NudgeCmdLeft) hash ^= Type.GetHashCode();
      if (nudgeAmount_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(NudgeAmount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SAIC.Valkyrie.Api.V1.NudgeCommandType.NudgeCmdLeft) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (nudgeAmount_ != null) {
        _single_nudgeAmount_codec.WriteTagAndValue(output, NudgeAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SAIC.Valkyrie.Api.V1.NudgeCommandType.NudgeCmdLeft) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (nudgeAmount_ != null) {
        _single_nudgeAmount_codec.WriteTagAndValue(ref output, NudgeAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SAIC.Valkyrie.Api.V1.NudgeCommandType.NudgeCmdLeft) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (nudgeAmount_ != null) {
        size += _single_nudgeAmount_codec.CalculateSizeWithTag(NudgeAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NudgeCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SAIC.Valkyrie.Api.V1.NudgeCommandType.NudgeCmdLeft) {
        Type = other.Type;
      }
      if (other.nudgeAmount_ != null) {
        if (nudgeAmount_ == null || other.NudgeAmount != 0D) {
          NudgeAmount = other.NudgeAmount;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.NudgeCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            double? value = _single_nudgeAmount_codec.Read(input);
            if (nudgeAmount_ == null || value != 0D) {
              NudgeAmount = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.NudgeCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            double? value = _single_nudgeAmount_codec.Read(ref input);
            if (nudgeAmount_ == null || value != 0D) {
              NudgeAmount = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The CameraSetFocusCommandInfo message provides details for the DeviceCommandType.DEVCMD_CAMERA_FOCUS command type.
  /// Commands the camera to focus using specified parameters.
  /// </summary>
  public sealed partial class CameraSetFocusCommandInfo : pb::IMessage<CameraSetFocusCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraSetFocusCommandInfo> _parser = new pb::MessageParser<CameraSetFocusCommandInfo>(() => new CameraSetFocusCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CameraSetFocusCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraSetFocusCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraSetFocusCommandInfo(CameraSetFocusCommandInfo other) : this() {
      focusNear_ = other.focusNear_;
      stopFocus_ = other.stopFocus_;
      autoFocus_ = other.autoFocus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraSetFocusCommandInfo Clone() {
      return new CameraSetFocusCommandInfo(this);
    }

    /// <summary>Field number for the "focusNear" field.</summary>
    public const int FocusNearFieldNumber = 1;
    private bool focusNear_;
    /// <summary>
    ///  (xs:boolean | required) - Boolean to set focus near.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FocusNear {
      get { return focusNear_; }
      set {
        focusNear_ = value;
      }
    }

    /// <summary>Field number for the "stopFocus" field.</summary>
    public const int StopFocusFieldNumber = 2;
    private bool stopFocus_;
    /// <summary>
    ///  (xs:boolean | required) - Boolean to stop focus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StopFocus {
      get { return stopFocus_; }
      set {
        stopFocus_ = value;
      }
    }

    /// <summary>Field number for the "autoFocus" field.</summary>
    public const int AutoFocusFieldNumber = 3;
    private bool autoFocus_;
    /// <summary>
    ///  (xs:boolean | required) - Boolean to set auto focus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AutoFocus {
      get { return autoFocus_; }
      set {
        autoFocus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CameraSetFocusCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CameraSetFocusCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FocusNear != other.FocusNear) return false;
      if (StopFocus != other.StopFocus) return false;
      if (AutoFocus != other.AutoFocus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FocusNear != false) hash ^= FocusNear.GetHashCode();
      if (StopFocus != false) hash ^= StopFocus.GetHashCode();
      if (AutoFocus != false) hash ^= AutoFocus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FocusNear != false) {
        output.WriteRawTag(8);
        output.WriteBool(FocusNear);
      }
      if (StopFocus != false) {
        output.WriteRawTag(16);
        output.WriteBool(StopFocus);
      }
      if (AutoFocus != false) {
        output.WriteRawTag(24);
        output.WriteBool(AutoFocus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FocusNear != false) {
        output.WriteRawTag(8);
        output.WriteBool(FocusNear);
      }
      if (StopFocus != false) {
        output.WriteRawTag(16);
        output.WriteBool(StopFocus);
      }
      if (AutoFocus != false) {
        output.WriteRawTag(24);
        output.WriteBool(AutoFocus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FocusNear != false) {
        size += 1 + 1;
      }
      if (StopFocus != false) {
        size += 1 + 1;
      }
      if (AutoFocus != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CameraSetFocusCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.FocusNear != false) {
        FocusNear = other.FocusNear;
      }
      if (other.StopFocus != false) {
        StopFocus = other.StopFocus;
      }
      if (other.AutoFocus != false) {
        AutoFocus = other.AutoFocus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FocusNear = input.ReadBool();
            break;
          }
          case 16: {
            StopFocus = input.ReadBool();
            break;
          }
          case 24: {
            AutoFocus = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FocusNear = input.ReadBool();
            break;
          }
          case 16: {
            StopFocus = input.ReadBool();
            break;
          }
          case 24: {
            AutoFocus = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The CameraRecordCommandInfo message provides details for the DeviceCommandType.DEVCMD_CAMERA_RECORD command type.
  /// Ability to start/stop recording for a camera system. Use component at top to specify
  /// camera type or optic if needed.
  /// </summary>
  public sealed partial class CameraRecordCommandInfo : pb::IMessage<CameraRecordCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraRecordCommandInfo> _parser = new pb::MessageParser<CameraRecordCommandInfo>(() => new CameraRecordCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CameraRecordCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraRecordCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraRecordCommandInfo(CameraRecordCommandInfo other) : this() {
      cancel_ = other.cancel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraRecordCommandInfo Clone() {
      return new CameraRecordCommandInfo(this);
    }

    /// <summary>Field number for the "cancel" field.</summary>
    public const int CancelFieldNumber = 1;
    private bool cancel_;
    /// <summary>
    ///  (xs:boolean | required) - cancel recording or start recording
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cancel {
      get { return cancel_; }
      set {
        cancel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CameraRecordCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CameraRecordCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cancel != other.Cancel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Cancel != false) hash ^= Cancel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cancel != false) {
        output.WriteRawTag(8);
        output.WriteBool(Cancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cancel != false) {
        output.WriteRawTag(8);
        output.WriteBool(Cancel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Cancel != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CameraRecordCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Cancel != false) {
        Cancel = other.Cancel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cancel = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cancel = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The CameraZoomCommandInfo message provides details for the DeviceCommandType.DEVCMD_CAMERA_ZOOM command type.
  /// Commands the camera to change zoom level using specified parameters.
  /// </summary>
  public sealed partial class CameraZoomCommandInfo : pb::IMessage<CameraZoomCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraZoomCommandInfo> _parser = new pb::MessageParser<CameraZoomCommandInfo>(() => new CameraZoomCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CameraZoomCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraZoomCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraZoomCommandInfo(CameraZoomCommandInfo other) : this() {
      type_ = other.type_;
      ZoomLevel = other.ZoomLevel;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraZoomCommandInfo Clone() {
      return new CameraZoomCommandInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType type_ = global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType.ZoomCmdStop;
    /// <summary>
    /// the type of zoom to perform - in/out/stop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "zoomLevel" field.</summary>
    public const int ZoomLevelFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_zoomLevel_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? zoomLevel_;
    /// <summary>
    ///  percentage - optional zoom level to move to (Units: 0-1 Percentage of maximum zoom)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? ZoomLevel {
      get { return zoomLevel_; }
      set {
        zoomLevel_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CameraZoomCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CameraZoomCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(ZoomLevel, other.ZoomLevel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType.ZoomCmdStop) hash ^= Type.GetHashCode();
      if (zoomLevel_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(ZoomLevel);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType.ZoomCmdStop) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (zoomLevel_ != null) {
        _single_zoomLevel_codec.WriteTagAndValue(output, ZoomLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType.ZoomCmdStop) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (zoomLevel_ != null) {
        _single_zoomLevel_codec.WriteTagAndValue(ref output, ZoomLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType.ZoomCmdStop) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (zoomLevel_ != null) {
        size += _single_zoomLevel_codec.CalculateSizeWithTag(ZoomLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CameraZoomCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType.ZoomCmdStop) {
        Type = other.Type;
      }
      if (other.zoomLevel_ != null) {
        if (zoomLevel_ == null || other.ZoomLevel != 0D) {
          ZoomLevel = other.ZoomLevel;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            double? value = _single_zoomLevel_codec.Read(input);
            if (zoomLevel_ == null || value != 0D) {
              ZoomLevel = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.CameraZoomCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            double? value = _single_zoomLevel_codec.Read(ref input);
            if (zoomLevel_ == null || value != 0D) {
              ZoomLevel = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The CameraNucCommandInfo message provides details for the DeviceCommandType.DEVCMD_CAMERA_NUC command type.
  /// NUC (auto-calibration) command details.
  /// </summary>
  public sealed partial class CameraNucCommandInfo : pb::IMessage<CameraNucCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraNucCommandInfo> _parser = new pb::MessageParser<CameraNucCommandInfo>(() => new CameraNucCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CameraNucCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraNucCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraNucCommandInfo(CameraNucCommandInfo other) : this() {
      longNuc_ = other.longNuc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraNucCommandInfo Clone() {
      return new CameraNucCommandInfo(this);
    }

    /// <summary>Field number for the "longNuc" field.</summary>
    public const int LongNucFieldNumber = 1;
    private bool longNuc_;
    /// <summary>
    /// long versus short NUC operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LongNuc {
      get { return longNuc_; }
      set {
        longNuc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CameraNucCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CameraNucCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LongNuc != other.LongNuc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LongNuc != false) hash ^= LongNuc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LongNuc != false) {
        output.WriteRawTag(8);
        output.WriteBool(LongNuc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LongNuc != false) {
        output.WriteRawTag(8);
        output.WriteBool(LongNuc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LongNuc != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CameraNucCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.LongNuc != false) {
        LongNuc = other.LongNuc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LongNuc = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LongNuc = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The EwCountermeasureCommandInfo message provides details for the DeviceCommandType.DEVCMD_COUNTERMEASURE command type.
  /// Contains Countermeasure command details - supports starting, stopping, and restarting a countermeasure against a target.
  /// </summary>
  public sealed partial class EwCountermeasureCommandInfo : pb::IMessage<EwCountermeasureCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EwCountermeasureCommandInfo> _parser = new pb::MessageParser<EwCountermeasureCommandInfo>(() => new EwCountermeasureCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EwCountermeasureCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EwCountermeasureCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EwCountermeasureCommandInfo(EwCountermeasureCommandInfo other) : this() {
      type_ = other.type_;
      target_ = other.target_ != null ? other.target_.Clone() : null;
      countermeasure_ = other.countermeasure_;
      lock_ = other.lock_;
      start_ = other.start_ != null ? other.start_.Clone() : null;
      end_ = other.end_ != null ? other.end_.Clone() : null;
      options_ = other.options_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EwCountermeasureCommandInfo Clone() {
      return new EwCountermeasureCommandInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType type_ = global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType.EwCmActivate;
    /// <summary>
    /// the type of countermeasure action being taken
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.TargetIdentifier target_;
    /// <summary>
    /// the id for the target we are countering
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetIdentifier Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "countermeasure" field.</summary>
    public const int CountermeasureFieldNumber = 3;
    private string countermeasure_ = "";
    /// <summary>
    /// DO NOT USE. COUNTERMEASURE WILL BE LISTED IN OPTIONS
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Countermeasure {
      get { return countermeasure_; }
      set {
        countermeasure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lock" field.</summary>
    public const int LockFieldNumber = 4;
    private bool lock_;
    /// <summary>
    /// Indicates whether the system should lock to the candidate’s position.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Lock {
      get { return lock_; }
      set {
        lock_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 5;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla start_;
    /// <summary>
    /// optional starting position for counter operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 6;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla end_;
    /// <summary>
    /// optional ending position for counter operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// support for device-specific options, like bands, power levels, and the like
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EwCountermeasureCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EwCountermeasureCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if (Countermeasure != other.Countermeasure) return false;
      if (Lock != other.Lock) return false;
      if (!object.Equals(Start, other.Start)) return false;
      if (!object.Equals(End, other.End)) return false;
      if(!options_.Equals(other.options_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType.EwCmActivate) hash ^= Type.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (Countermeasure.Length != 0) hash ^= Countermeasure.GetHashCode();
      if (Lock != false) hash ^= Lock.GetHashCode();
      if (start_ != null) hash ^= Start.GetHashCode();
      if (end_ != null) hash ^= End.GetHashCode();
      hash ^= options_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType.EwCmActivate) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (Countermeasure.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Countermeasure);
      }
      if (Lock != false) {
        output.WriteRawTag(32);
        output.WriteBool(Lock);
      }
      if (start_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(End);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType.EwCmActivate) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (Countermeasure.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Countermeasure);
      }
      if (Lock != false) {
        output.WriteRawTag(32);
        output.WriteBool(Lock);
      }
      if (start_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Start);
      }
      if (end_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(End);
      }
      options_.WriteTo(ref output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType.EwCmActivate) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (Countermeasure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Countermeasure);
      }
      if (Lock != false) {
        size += 1 + 1;
      }
      if (start_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
      }
      if (end_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EwCountermeasureCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType.EwCmActivate) {
        Type = other.Type;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.Countermeasure.Length != 0) {
        Countermeasure = other.Countermeasure;
      }
      if (other.Lock != false) {
        Lock = other.Lock;
      }
      if (other.start_ != null) {
        if (start_ == null) {
          Start = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Start.MergeFrom(other.Start);
      }
      if (other.end_ != null) {
        if (end_ == null) {
          End = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        End.MergeFrom(other.End);
      }
      options_.Add(other.options_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 26: {
            Countermeasure = input.ReadString();
            break;
          }
          case 32: {
            Lock = input.ReadBool();
            break;
          }
          case 42: {
            if (start_ == null) {
              Start = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Start);
            break;
          }
          case 50: {
            if (end_ == null) {
              End = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(End);
            break;
          }
          case 58: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.EwCountermeasureCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 26: {
            Countermeasure = input.ReadString();
            break;
          }
          case 32: {
            Lock = input.ReadBool();
            break;
          }
          case 42: {
            if (start_ == null) {
              Start = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Start);
            break;
          }
          case 50: {
            if (end_ == null) {
              End = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(End);
            break;
          }
          case 58: {
            options_.AddEntriesFrom(ref input, _repeated_options_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The EwUpdateTargetCommandInfo message is similar to the TCUT UpdateCandidate command;
  /// this command updates the position of an active target
  /// with position and velocity. This command would be started via EwCountermeasureCommandInfo:EW_CM_ACTIVATE
  /// and would feed positions to the targeting device while it is countering that target.
  /// Used in conjunction with the DeviceCommandType.DEVCMD_UPDATE_TARGET command type.
  /// </summary>
  public sealed partial class EwUpdateTargetCommandInfo : pb::IMessage<EwUpdateTargetCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EwUpdateTargetCommandInfo> _parser = new pb::MessageParser<EwUpdateTargetCommandInfo>(() => new EwUpdateTargetCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EwUpdateTargetCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EwUpdateTargetCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EwUpdateTargetCommandInfo(EwUpdateTargetCommandInfo other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EwUpdateTargetCommandInfo Clone() {
      return new EwUpdateTargetCommandInfo(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla position_;
    /// <summary>
    /// current target position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.Velocity velocity_;
    /// <summary>
    /// current velocity of the target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.Velocity Velocity {
      get { return velocity_; }
      set {
        velocity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EwUpdateTargetCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EwUpdateTargetCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (velocity_ != null) hash ^= Velocity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (velocity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Velocity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (velocity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Velocity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (velocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EwUpdateTargetCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.velocity_ != null) {
        if (velocity_ == null) {
          Velocity = new global::SAIC.Valkyrie.Api.V1.Velocity();
        }
        Velocity.MergeFrom(other.Velocity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (velocity_ == null) {
              Velocity = new global::SAIC.Valkyrie.Api.V1.Velocity();
            }
            input.ReadMessage(Velocity);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (velocity_ == null) {
              Velocity = new global::SAIC.Valkyrie.Api.V1.Velocity();
            }
            input.ReadMessage(Velocity);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The ConfigureNorthingCommandInfo message provides details for the DeviceCommandType.DEVCMD_CONFIG_NORTHING command type.
  /// Configures the NORTH setting for a device - generally a radar device.
  /// </summary>
  public sealed partial class ConfigureNorthingCommandInfo : pb::IMessage<ConfigureNorthingCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigureNorthingCommandInfo> _parser = new pb::MessageParser<ConfigureNorthingCommandInfo>(() => new ConfigureNorthingCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConfigureNorthingCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigureNorthingCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigureNorthingCommandInfo(ConfigureNorthingCommandInfo other) : this() {
      northingAngle_ = other.northingAngle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigureNorthingCommandInfo Clone() {
      return new ConfigureNorthingCommandInfo(this);
    }

    /// <summary>Field number for the "northingAngle" field.</summary>
    public const int NorthingAngleFieldNumber = 2;
    private float northingAngle_;
    /// <summary>
    /// the angle to set for this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NorthingAngle {
      get { return northingAngle_; }
      set {
        northingAngle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConfigureNorthingCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConfigureNorthingCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NorthingAngle, other.NorthingAngle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NorthingAngle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NorthingAngle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NorthingAngle != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(NorthingAngle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NorthingAngle != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(NorthingAngle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NorthingAngle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConfigureNorthingCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.NorthingAngle != 0F) {
        NorthingAngle = other.NorthingAngle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 21: {
            NorthingAngle = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 21: {
            NorthingAngle = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The EndMissionCommandInfo message provides details for the DeviceCommandType.DEVCMD_END_MISSION command type.
  /// Notifies the system that a mission has ended, and actions associated with this mission should cease.
  /// </summary>
  public sealed partial class EndMissionCommandInfo : pb::IMessage<EndMissionCommandInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndMissionCommandInfo> _parser = new pb::MessageParser<EndMissionCommandInfo>(() => new EndMissionCommandInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EndMissionCommandInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DeviceCommandsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndMissionCommandInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndMissionCommandInfo(EndMissionCommandInfo other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      MissionId = other.MissionId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndMissionCommandInfo Clone() {
      return new EndMissionCommandInfo(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.TargetIdentifier target_;
    /// <summary>
    /// the track or threat that was the mission target (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetIdentifier Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "missionId" field.</summary>
    public const int MissionIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_missionId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string missionId_;
    /// <summary>
    /// an id associated with the active mission (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MissionId {
      get { return missionId_; }
      set {
        missionId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EndMissionCommandInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EndMissionCommandInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      if (MissionId != other.MissionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (missionId_ != null) hash ^= MissionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (missionId_ != null) {
        _single_missionId_codec.WriteTagAndValue(output, MissionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (missionId_ != null) {
        _single_missionId_codec.WriteTagAndValue(ref output, MissionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (missionId_ != null) {
        size += _single_missionId_codec.CalculateSizeWithTag(MissionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EndMissionCommandInfo other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.missionId_ != null) {
        if (missionId_ == null || other.MissionId != "") {
          MissionId = other.MissionId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 18: {
            string value = _single_missionId_codec.Read(input);
            if (missionId_ == null || value != "") {
              MissionId = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
          case 18: {
            string value = _single_missionId_codec.Read(ref input);
            if (missionId_ == null || value != "") {
              MissionId = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
