// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ConfigurationManager.proto
// </auto-generated>
// Original file comments:
// ------------------------------------------------------------------------------
// | SAIC PROPRIETARY INFORMATION
// |-------------------------------------------------------------------------------
// | The information in this document is proprietary to SAIC. It may not be used,
// | reproduced, disclosed, or exported without the written approval of SAIC.
// ------------------------------------------------------------------------------
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SAIC.Valkyrie.Api.V1 {
  /// <summary>
  ///
  /// The Configuration manager service maintains the configuration details for one Valkyrie installation,
  /// including the devices installed, the networking details, the running services, and the defined protected
  /// areas. This is the entry-point for communicating with the Valkyrie API, as it contains the details for
  /// connecting with the other running services.
  /// </summary>
  public static partial class ConfigurationManager
  {
    static readonly string __ServiceName = "saic.valkyrie.sdk.generated.ConfigurationManager";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.VersionInfo> __Marshaller_saic_valkyrie_sdk_generated_VersionInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.VersionInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration> __Marshaller_saic_valkyrie_sdk_generated_ProtectedAreaConfiguration = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo> __Marshaller_saic_valkyrie_sdk_generated_SystemLevelsInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.ResponseInfo> __Marshaller_saic_valkyrie_sdk_generated_ResponseInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.ResponseInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription> __Marshaller_saic_valkyrie_sdk_generated_ConfigurationManagerSubscription = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse> __Marshaller_saic_valkyrie_sdk_generated_ConfigurationSubscriptionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.SystemConfiguration> __Marshaller_saic_valkyrie_sdk_generated_SystemConfiguration = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.SystemConfiguration.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse> __Marshaller_saic_valkyrie_sdk_generated_ServicesConfigurationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest> __Marshaller_saic_valkyrie_sdk_generated_SAObjectGetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse> __Marshaller_saic_valkyrie_sdk_generated_SAObjectSubscriptionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.StringValue.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest> __Marshaller_saic_valkyrie_sdk_generated_SAObjectUpdateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> __Marshaller_saic_valkyrie_sdk_generated_SAObjectUpdateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest> __Marshaller_saic_valkyrie_sdk_generated_SAObjectDeleteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.VersionInfo> __Method_getVersion = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.VersionInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getVersion",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_saic_valkyrie_sdk_generated_VersionInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration> __Method_getProtectedAreas = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getProtectedAreas",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_saic_valkyrie_sdk_generated_ProtectedAreaConfiguration);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo> __Method_getSystemLevels = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getSystemLevels",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_saic_valkyrie_sdk_generated_SystemLevelsInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo, global::SAIC.Valkyrie.Api.V1.ResponseInfo> __Method_setSystemLevels = new grpc::Method<global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo, global::SAIC.Valkyrie.Api.V1.ResponseInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "setSystemLevels",
        __Marshaller_saic_valkyrie_sdk_generated_SystemLevelsInfo,
        __Marshaller_saic_valkyrie_sdk_generated_ResponseInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription, global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse> __Method_subscribe = new grpc::Method<global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription, global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "subscribe",
        __Marshaller_saic_valkyrie_sdk_generated_ConfigurationManagerSubscription,
        __Marshaller_saic_valkyrie_sdk_generated_ConfigurationSubscriptionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.SystemConfiguration> __Method_getSystemConfig = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.SystemConfiguration>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getSystemConfig",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_saic_valkyrie_sdk_generated_SystemConfiguration);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse> __Method_getServicesConfig = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getServicesConfig",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_saic_valkyrie_sdk_generated_ServicesConfigurationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest, global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse> __Method_getSAObjects = new grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest, global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getSAObjects",
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectGetRequest,
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectSubscriptionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_getSAObjectGroups = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getSAObjectGroups",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> __Method_createSAObject = new grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createSAObject",
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectUpdateRequest,
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectUpdateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> __Method_updateSAObject = new grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateSAObject",
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectUpdateRequest,
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectUpdateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> __Method_deleteSAObject = new grpc::Method<global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteSAObject",
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectDeleteRequest,
        __Marshaller_saic_valkyrie_sdk_generated_SAObjectUpdateResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SAIC.Valkyrie.Api.V1.ConfigurationManagerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ConfigurationManager</summary>
    [grpc::BindServiceMethod(typeof(ConfigurationManager), "BindService")]
    public abstract partial class ConfigurationManagerBase
    {
      /// <summary>
      ///
      /// Retrieves version information for the ConfigurationManager service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.VersionInfo> getVersion(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Returns the set of protected areas that have been defined within the system configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task getProtectedAreas(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Returns the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo> getSystemLevels(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Sets the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.ResponseInfo> setSystemLevels(global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// subscribe
      /// Ability for a client to receive async updates to the system configuration information.
      /// This currently includes changes to protected areas, SA objects, and system level details.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task subscribe(global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription request, grpc::IServerStreamWriter<global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Returns the active system configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.SystemConfiguration> getSystemConfig(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Returns the service configuration section of the system configuration, which contains
      /// details for all SDK services.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse> getServicesConfig(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Returns the set of SA objects in the system for the inbound parameters of owner and groups.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task getSAObjects(global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest request, grpc::IServerStreamWriter<global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Returns the full set of SA Object groups currently defined in the system.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task getSAObjectGroups(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::Google.Protobuf.WellKnownTypes.StringValue> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Creates a new SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this new SA object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> createSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Updates an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this modified SA object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> updateSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///
      /// Deletes an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this deleted SA object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> deleteSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ConfigurationManager</summary>
    public partial class ConfigurationManagerClient : grpc::ClientBase<ConfigurationManagerClient>
    {
      /// <summary>Creates a new client for ConfigurationManager</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConfigurationManagerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ConfigurationManager that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ConfigurationManagerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConfigurationManagerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ConfigurationManagerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///
      /// Retrieves version information for the ConfigurationManager service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.VersionInfo getVersion(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Retrieves version information for the ConfigurationManager service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.VersionInfo getVersion(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getVersion, null, options, request);
      }
      /// <summary>
      ///
      /// Retrieves version information for the ConfigurationManager service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.VersionInfo> getVersionAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Retrieves version information for the ConfigurationManager service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.VersionInfo> getVersionAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getVersion, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the set of protected areas that have been defined within the system configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration> getProtectedAreas(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProtectedAreas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the set of protected areas that have been defined within the system configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration> getProtectedAreas(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getProtectedAreas, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo getSystemLevels(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSystemLevels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo getSystemLevels(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getSystemLevels, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo> getSystemLevelsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSystemLevelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo> getSystemLevelsAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getSystemLevels, null, options, request);
      }
      /// <summary>
      ///
      /// Sets the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.ResponseInfo setSystemLevels(global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return setSystemLevels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Sets the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.ResponseInfo setSystemLevels(global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_setSystemLevels, null, options, request);
      }
      /// <summary>
      ///
      /// Sets the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.ResponseInfo> setSystemLevelsAsync(global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return setSystemLevelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Sets the current operating level information for the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.ResponseInfo> setSystemLevelsAsync(global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_setSystemLevels, null, options, request);
      }
      /// <summary>
      ///
      /// subscribe
      /// Ability for a client to receive async updates to the system configuration information.
      /// This currently includes changes to protected areas, SA objects, and system level details.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse> subscribe(global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return subscribe(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// subscribe
      /// Ability for a client to receive async updates to the system configuration information.
      /// This currently includes changes to protected areas, SA objects, and system level details.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse> subscribe(global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_subscribe, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the active system configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SystemConfiguration getSystemConfig(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSystemConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the active system configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SystemConfiguration getSystemConfig(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getSystemConfig, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the active system configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SystemConfiguration> getSystemConfigAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSystemConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the active system configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SystemConfiguration> getSystemConfigAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getSystemConfig, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the service configuration section of the system configuration, which contains
      /// details for all SDK services.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse getServicesConfig(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getServicesConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the service configuration section of the system configuration, which contains
      /// details for all SDK services.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse getServicesConfig(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getServicesConfig, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the service configuration section of the system configuration, which contains
      /// details for all SDK services.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse> getServicesConfigAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getServicesConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the service configuration section of the system configuration, which contains
      /// details for all SDK services.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse> getServicesConfigAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getServicesConfig, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the set of SA objects in the system for the inbound parameters of owner and groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse> getSAObjects(global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSAObjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the set of SA objects in the system for the inbound parameters of owner and groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse> getSAObjects(global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getSAObjects, null, options, request);
      }
      /// <summary>
      ///
      /// Returns the full set of SA Object groups currently defined in the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Google.Protobuf.WellKnownTypes.StringValue> getSAObjectGroups(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSAObjectGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Returns the full set of SA Object groups currently defined in the system.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Google.Protobuf.WellKnownTypes.StringValue> getSAObjectGroups(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getSAObjectGroups, null, options, request);
      }
      /// <summary>
      ///
      /// Creates a new SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this new SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse createSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createSAObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Creates a new SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this new SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse createSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createSAObject, null, options, request);
      }
      /// <summary>
      ///
      /// Creates a new SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this new SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> createSAObjectAsync(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createSAObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Creates a new SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this new SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> createSAObjectAsync(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createSAObject, null, options, request);
      }
      /// <summary>
      ///
      /// Updates an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this modified SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse updateSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateSAObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Updates an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this modified SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse updateSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateSAObject, null, options, request);
      }
      /// <summary>
      ///
      /// Updates an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this modified SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> updateSAObjectAsync(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateSAObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Updates an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this modified SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> updateSAObjectAsync(global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateSAObject, null, options, request);
      }
      /// <summary>
      ///
      /// Deletes an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this deleted SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse deleteSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteSAObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Deletes an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this deleted SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse deleteSAObject(global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteSAObject, null, options, request);
      }
      /// <summary>
      ///
      /// Deletes an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this deleted SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> deleteSAObjectAsync(global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteSAObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///
      /// Deletes an existing SA object in the system. Notifies out to subscribed clients with the correct
      /// permissions to know about this deleted SA object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse> deleteSAObjectAsync(global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteSAObject, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ConfigurationManagerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ConfigurationManagerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ConfigurationManagerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_getVersion, serviceImpl.getVersion)
          .AddMethod(__Method_getProtectedAreas, serviceImpl.getProtectedAreas)
          .AddMethod(__Method_getSystemLevels, serviceImpl.getSystemLevels)
          .AddMethod(__Method_setSystemLevels, serviceImpl.setSystemLevels)
          .AddMethod(__Method_subscribe, serviceImpl.subscribe)
          .AddMethod(__Method_getSystemConfig, serviceImpl.getSystemConfig)
          .AddMethod(__Method_getServicesConfig, serviceImpl.getServicesConfig)
          .AddMethod(__Method_getSAObjects, serviceImpl.getSAObjects)
          .AddMethod(__Method_getSAObjectGroups, serviceImpl.getSAObjectGroups)
          .AddMethod(__Method_createSAObject, serviceImpl.createSAObject)
          .AddMethod(__Method_updateSAObject, serviceImpl.updateSAObject)
          .AddMethod(__Method_deleteSAObject, serviceImpl.deleteSAObject).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ConfigurationManagerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_getVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.VersionInfo>(serviceImpl.getVersion));
      serviceBinder.AddMethod(__Method_getProtectedAreas, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.ProtectedAreaConfiguration>(serviceImpl.getProtectedAreas));
      serviceBinder.AddMethod(__Method_getSystemLevels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo>(serviceImpl.getSystemLevels));
      serviceBinder.AddMethod(__Method_setSystemLevels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SAIC.Valkyrie.Api.V1.SystemLevelsInfo, global::SAIC.Valkyrie.Api.V1.ResponseInfo>(serviceImpl.setSystemLevels));
      serviceBinder.AddMethod(__Method_subscribe, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SAIC.Valkyrie.Api.V1.ConfigurationManagerSubscription, global::SAIC.Valkyrie.Api.V1.ConfigurationSubscriptionResponse>(serviceImpl.subscribe));
      serviceBinder.AddMethod(__Method_getSystemConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.SystemConfiguration>(serviceImpl.getSystemConfig));
      serviceBinder.AddMethod(__Method_getServicesConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::SAIC.Valkyrie.Api.V1.ServicesConfigurationResponse>(serviceImpl.getServicesConfig));
      serviceBinder.AddMethod(__Method_getSAObjects, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SAIC.Valkyrie.Api.V1.SAObjectGetRequest, global::SAIC.Valkyrie.Api.V1.SAObjectSubscriptionResponse>(serviceImpl.getSAObjects));
      serviceBinder.AddMethod(__Method_getSAObjectGroups, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(serviceImpl.getSAObjectGroups));
      serviceBinder.AddMethod(__Method_createSAObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse>(serviceImpl.createSAObject));
      serviceBinder.AddMethod(__Method_updateSAObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SAIC.Valkyrie.Api.V1.SAObjectUpdateRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse>(serviceImpl.updateSAObject));
      serviceBinder.AddMethod(__Method_deleteSAObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SAIC.Valkyrie.Api.V1.SAObjectDeleteRequest, global::SAIC.Valkyrie.Api.V1.SAObjectUpdateResponse>(serviceImpl.deleteSAObject));
    }

  }
}
#endregion
