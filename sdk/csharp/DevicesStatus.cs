// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DevicesStatus.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SAIC.Valkyrie.Api.V1 {

  /// <summary>Holder for reflection information generated from DevicesStatus.proto</summary>
  public static partial class DevicesStatusReflection {

    #region Descriptor
    /// <summary>File descriptor for DevicesStatus.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DevicesStatusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNEZXZpY2VzU3RhdHVzLnByb3RvEhtzYWljLnZhbGt5cmllLnNkay5nZW5l",
            "cmF0ZWQaDENvbW1vbi5wcm90bxoZU3lzdGVtQ29uZmlndXJhdGlvbi5wcm90",
            "byJ0ChFEZXZpY2VXYXJuaW5nSW5mbxJHCgt3YXJuaW5nVHlwZRgBIAEoDjIy",
            "LnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5EZXZpY2VXYXJuaW5nVHlw",
            "ZUVudW0SFgoOd2FybmluZ01lc3NhZ2UYAiABKAkiwwMKDERldmljZVN0YXR1",
            "cxIRCgl0aW1lc3RhbXAYASABKAMSSQoRb3BlcmF0aW9uYWxTdGF0dXMYAiAB",
            "KA4yLi5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuT3BlcmF0aW9uYWxT",
            "dGF0dXMSFAoMc291cmNlRGV2aWNlGAMgASgJEhQKDHNvdXJjZVN5c3RlbRgE",
            "IAEoCRJCCgdzcGF0aWFsGAUgASgLMjEuc2FpYy52YWxreXJpZS5zZGsuZ2Vu",
            "ZXJhdGVkLkRldmljZVNwYXRpYWxGYWN0b3JzEg8KB21pc3Npb24YBiABKAkS",
            "QgoPc3ViRGV2aWNlU3RhdHVzGAcgAygLMikuc2FpYy52YWxreXJpZS5zZGsu",
            "Z2VuZXJhdGVkLkRldmljZVN0YXR1cxJACgh3YXJuaW5ncxgIIAMoCzIuLnNh",
            "aWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5EZXZpY2VXYXJuaW5nSW5mbxJO",
            "ChFvcGVyYXRpb25hbFN0YXRlcxgJIAMoCzIzLnNhaWMudmFsa3lyaWUuc2Rr",
            "LmdlbmVyYXRlZC5EZXZpY2VPcGVyYXRpb25hbFN0YXRlIvMBChZEZXZpY2VP",
            "cGVyYXRpb25hbFN0YXRlEkMKCW9wZXJhdGlvbhgBIAEoDjIwLnNhaWMudmFs",
            "a3lyaWUuc2RrLmdlbmVyYXRlZC5EZXZpY2VPcGVyYXRpb25UeXBlEkAKBXN0",
            "YXRlGAIgASgOMjEuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkRldmlj",
            "ZU9wZXJhdGlvblN0YXRlEhMKC2Rpc3BsYXlOYW1lGAMgASgJEj0KBnRhcmdl",
            "dBgEIAEoCzItLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5UYXJnZXRJ",
            "ZGVudGlmaWVyKvIEChVEZXZpY2VXYXJuaW5nVHlwZUVudW0SIwoUREVWSUNF",
            "X1dBUk5JTkdfT1RIRVIQABoJyvsaBU90aGVyEjcKHkRFVklDRV9XQVJOSU5H",
            "X05FVkVSX0NPTk5FQ1RFRBABGhPK+xoPTmV2ZXIgQ29ubmVjdGVkEicKFkRF",
            "VklDRV9XQVJOSU5HX1NUQU5EQlkQAhoLyvsaB1N0YW5kYnkSNQodREVWSUNF",
            "X1dBUk5JTkdfREVWSUNFX1RJTUVPVVQQAxoSyvsaDkRldmljZSBUaW1lb3V0",
            "EjcKHkRFVklDRV9XQVJOSU5HX1RSQU5TUE9SVF9FUlJPUhAEGhPK+xoPVHJh",
            "bnNwb3J0IEVycm9yEj8KIkRFVklDRV9XQVJOSU5HX0NPTkZJR1VSQVRJT05f",
            "RVJST1IQBRoXyvsaE0NvbmZpZ3VyYXRpb24gRXJyb3ISRQolREVWSUNFX1dB",
            "Uk5JTkdfSEFSRFdBUkVfTE9HR0lOR19FUlJPUhAGGhrK+xoWSGFyZHdhcmUg",
            "TG9nZ2luZyBFcnJvchItChlERVZJQ0VfV0FSTklOR19TVE9XX0VSUk9SEAca",
            "Dsr7GgpTdG93IEVycm9yEj8KIkRFVklDRV9XQVJOSU5HX1RFTVBFUkFUVVJF",
            "X1dBUk5JTkcQCBoXyvsaE1RlbXBlcmF0dXJlIFdhcm5pbmcSMwocREVWSUNF",
            "X1dBUk5JTkdfQ09NTUFORF9FUlJPUhAJGhHK+xoNQ29tbWFuZCBFcnJvchI1",
            "Ch1ERVZJQ0VfV0FSTklOR19IQVJEV0FSRV9FUlJPUhAKGhLK+xoOSGFyZHdh",
            "cmUgRXJyb3IqiAEKFERldmljZU9wZXJhdGlvblN0YXRlEhQKEE9QX1NUQVRF",
            "X1VOS05PV04QABIUChBPUF9TVEFURV9QRU5ESU5HEAESEwoPT1BfU1RBVEVf",
            "QUNUSVZFEAISFQoRT1BfU1RBVEVfSU5BQ1RJVkUQAxIYChRPUF9TVEFURV9V",
            "TkFWQUlMQUJMRRAEQm4KG3NhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZEIS",
            "RGV2aWNlc1N0YXR1c1Byb3RvWiRnaXRodWIuY29tL3RtaG9sdC9HZW5Eb2NQ",
            "cm90by9zZGsvZ2+qAhRTQUlDLlZhbGt5cmllLkFwaS5WMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SAIC.Valkyrie.Api.V1.CommonReflection.Descriptor, global::SAIC.Valkyrie.Api.V1.SystemConfigurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum), typeof(global::SAIC.Valkyrie.Api.V1.DeviceOperationState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DeviceWarningInfo), global::SAIC.Valkyrie.Api.V1.DeviceWarningInfo.Parser, new[]{ "WarningType", "WarningMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DeviceStatus), global::SAIC.Valkyrie.Api.V1.DeviceStatus.Parser, new[]{ "Timestamp", "OperationalStatus", "SourceDevice", "SourceSystem", "Spatial", "Mission", "SubDeviceStatus", "Warnings", "OperationalStates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DeviceOperationalState), global::SAIC.Valkyrie.Api.V1.DeviceOperationalState.Parser, new[]{ "Operation", "State", "DisplayName", "Target" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///
  /// The DeviceWarningTypeEnum enumeration details a device warning message type.
  /// These items are ordered in a priority such that 0 is the least priority and the last entry is the highest priority.
  /// </summary>
  public enum DeviceWarningTypeEnum {
    /// <summary>
    /// OTHER warnings
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_OTHER")] DeviceWarningOther = 0,
    /// <summary>
    /// the device has never connected
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_NEVER_CONNECTED")] DeviceWarningNeverConnected = 1,
    /// <summary>
    /// the device is in standby mode
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_STANDBY")] DeviceWarningStandby = 2,
    /// <summary>
    /// the device timed out
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_DEVICE_TIMEOUT")] DeviceWarningDeviceTimeout = 3,
    /// <summary>
    /// a transport failed to open
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_TRANSPORT_ERROR")] DeviceWarningTransportError = 4,
    /// <summary>
    /// the device was configured incorrectly
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_CONFIGURATION_ERROR")] DeviceWarningConfigurationError = 5,
    /// <summary>
    /// a critical log was received
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_HARDWARE_LOGGING_ERROR")] DeviceWarningHardwareLoggingError = 6,
    /// <summary>
    /// Device failed to stow
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_STOW_ERROR")] DeviceWarningStowError = 7,
    /// <summary>
    /// High or low temperature warning
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_TEMPERATURE_WARNING")] DeviceWarningTemperatureWarning = 8,
    /// <summary>
    /// a faulty command was received
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_COMMAND_ERROR")] DeviceWarningCommandError = 9,
    /// <summary>
    /// the device reports a hardware error
    /// </summary>
    [pbr::OriginalName("DEVICE_WARNING_HARDWARE_ERROR")] DeviceWarningHardwareError = 10,
  }

  /// <summary>
  ///
  /// The DeviceOperationState enumeration details possible states for one device operational capability.
  /// </summary>
  public enum DeviceOperationState {
    /// <summary>
    /// unknown state
    /// </summary>
    [pbr::OriginalName("OP_STATE_UNKNOWN")] OpStateUnknown = 0,
    /// <summary>
    /// command sent but not responded to yet
    /// </summary>
    [pbr::OriginalName("OP_STATE_PENDING")] OpStatePending = 1,
    /// <summary>
    /// this capability is currently being performed
    /// </summary>
    [pbr::OriginalName("OP_STATE_ACTIVE")] OpStateActive = 2,
    /// <summary>
    /// this capability is not currently being performed
    /// </summary>
    [pbr::OriginalName("OP_STATE_INACTIVE")] OpStateInactive = 3,
    /// <summary>
    /// this means this capability is not available and should be greyed out in UI
    /// </summary>
    [pbr::OriginalName("OP_STATE_UNAVAILABLE")] OpStateUnavailable = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  ///
  /// The DeviceWarningMessage message contains details for one device warning message.
  /// </summary>
  public sealed partial class DeviceWarningInfo : pb::IMessage<DeviceWarningInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceWarningInfo> _parser = new pb::MessageParser<DeviceWarningInfo>(() => new DeviceWarningInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceWarningInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DevicesStatusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceWarningInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceWarningInfo(DeviceWarningInfo other) : this() {
      warningType_ = other.warningType_;
      warningMessage_ = other.warningMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceWarningInfo Clone() {
      return new DeviceWarningInfo(this);
    }

    /// <summary>Field number for the "warningType" field.</summary>
    public const int WarningTypeFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum warningType_ = global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum.DeviceWarningOther;
    /// <summary>
    /// The type of warning like timeout or hardware-reported error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum WarningType {
      get { return warningType_; }
      set {
        warningType_ = value;
      }
    }

    /// <summary>Field number for the "warningMessage" field.</summary>
    public const int WarningMessageFieldNumber = 2;
    private string warningMessage_ = "";
    /// <summary>
    /// User-friendly warning message to display and indicate the problem
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WarningMessage {
      get { return warningMessage_; }
      set {
        warningMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceWarningInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceWarningInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WarningType != other.WarningType) return false;
      if (WarningMessage != other.WarningMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WarningType != global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum.DeviceWarningOther) hash ^= WarningType.GetHashCode();
      if (WarningMessage.Length != 0) hash ^= WarningMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WarningType != global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum.DeviceWarningOther) {
        output.WriteRawTag(8);
        output.WriteEnum((int) WarningType);
      }
      if (WarningMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WarningMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WarningType != global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum.DeviceWarningOther) {
        output.WriteRawTag(8);
        output.WriteEnum((int) WarningType);
      }
      if (WarningMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WarningMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WarningType != global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum.DeviceWarningOther) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WarningType);
      }
      if (WarningMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WarningMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceWarningInfo other) {
      if (other == null) {
        return;
      }
      if (other.WarningType != global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum.DeviceWarningOther) {
        WarningType = other.WarningType;
      }
      if (other.WarningMessage.Length != 0) {
        WarningMessage = other.WarningMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WarningType = (global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum) input.ReadEnum();
            break;
          }
          case 18: {
            WarningMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WarningType = (global::SAIC.Valkyrie.Api.V1.DeviceWarningTypeEnum) input.ReadEnum();
            break;
          }
          case 18: {
            WarningMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The DeviceStatus message contains details about one device in the system and its current status.
  /// </summary>
  public sealed partial class DeviceStatus : pb::IMessage<DeviceStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceStatus> _parser = new pb::MessageParser<DeviceStatus>(() => new DeviceStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DevicesStatusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceStatus(DeviceStatus other) : this() {
      timestamp_ = other.timestamp_;
      operationalStatus_ = other.operationalStatus_;
      sourceDevice_ = other.sourceDevice_;
      sourceSystem_ = other.sourceSystem_;
      spatial_ = other.spatial_ != null ? other.spatial_.Clone() : null;
      mission_ = other.mission_;
      subDeviceStatus_ = other.subDeviceStatus_.Clone();
      warnings_ = other.warnings_.Clone();
      operationalStates_ = other.operationalStates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceStatus Clone() {
      return new DeviceStatus(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    /// <summary>
    /// status update timestamp (milliseconds since epoch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "operationalStatus" field.</summary>
    public const int OperationalStatusFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.OperationalStatus operationalStatus_ = global::SAIC.Valkyrie.Api.V1.OperationalStatus.StatusUnknown;
    /// <summary>
    /// operational status for this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.OperationalStatus OperationalStatus {
      get { return operationalStatus_; }
      set {
        operationalStatus_ = value;
      }
    }

    /// <summary>Field number for the "sourceDevice" field.</summary>
    public const int SourceDeviceFieldNumber = 3;
    private string sourceDevice_ = "";
    /// <summary>
    /// unique identifier for this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceDevice {
      get { return sourceDevice_; }
      set {
        sourceDevice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceSystem" field.</summary>
    public const int SourceSystemFieldNumber = 4;
    private string sourceSystem_ = "";
    /// <summary>
    /// the application/system that is managing this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceSystem {
      get { return sourceSystem_; }
      set {
        sourceSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spatial" field.</summary>
    public const int SpatialFieldNumber = 5;
    private global::SAIC.Valkyrie.Api.V1.DeviceSpatialFactors spatial_;
    /// <summary>
    /// positional information for this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceSpatialFactors Spatial {
      get { return spatial_; }
      set {
        spatial_ = value;
      }
    }

    /// <summary>Field number for the "mission" field.</summary>
    public const int MissionFieldNumber = 6;
    private string mission_ = "";
    /// <summary>
    /// name of the current operating mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mission {
      get { return mission_; }
      set {
        mission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subDeviceStatus" field.</summary>
    public const int SubDeviceStatusFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.DeviceStatus> _repeated_subDeviceStatus_codec
        = pb::FieldCodec.ForMessage(58, global::SAIC.Valkyrie.Api.V1.DeviceStatus.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceStatus> subDeviceStatus_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceStatus>();
    /// <summary>
    /// additional Sub devices for status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceStatus> SubDeviceStatus {
      get { return subDeviceStatus_; }
    }

    /// <summary>Field number for the "warnings" field.</summary>
    public const int WarningsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.DeviceWarningInfo> _repeated_warnings_codec
        = pb::FieldCodec.ForMessage(66, global::SAIC.Valkyrie.Api.V1.DeviceWarningInfo.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceWarningInfo> warnings_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceWarningInfo>();
    /// <summary>
    /// warning messages from the hardware
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceWarningInfo> Warnings {
      get { return warnings_; }
    }

    /// <summary>Field number for the "operationalStates" field.</summary>
    public const int OperationalStatesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.DeviceOperationalState> _repeated_operationalStates_codec
        = pb::FieldCodec.ForMessage(74, global::SAIC.Valkyrie.Api.V1.DeviceOperationalState.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceOperationalState> operationalStates_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceOperationalState>();
    /// <summary>
    /// The current operational state for the supported capabilities or capability options of this device.
    /// There should be one message per supported capability unless that capability has options. If options are present,
    /// then there should be one message per option instead of the message for that capability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.DeviceOperationalState> OperationalStates {
      get { return operationalStates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (OperationalStatus != other.OperationalStatus) return false;
      if (SourceDevice != other.SourceDevice) return false;
      if (SourceSystem != other.SourceSystem) return false;
      if (!object.Equals(Spatial, other.Spatial)) return false;
      if (Mission != other.Mission) return false;
      if(!subDeviceStatus_.Equals(other.subDeviceStatus_)) return false;
      if(!warnings_.Equals(other.warnings_)) return false;
      if(!operationalStates_.Equals(other.operationalStates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (OperationalStatus != global::SAIC.Valkyrie.Api.V1.OperationalStatus.StatusUnknown) hash ^= OperationalStatus.GetHashCode();
      if (SourceDevice.Length != 0) hash ^= SourceDevice.GetHashCode();
      if (SourceSystem.Length != 0) hash ^= SourceSystem.GetHashCode();
      if (spatial_ != null) hash ^= Spatial.GetHashCode();
      if (Mission.Length != 0) hash ^= Mission.GetHashCode();
      hash ^= subDeviceStatus_.GetHashCode();
      hash ^= warnings_.GetHashCode();
      hash ^= operationalStates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (OperationalStatus != global::SAIC.Valkyrie.Api.V1.OperationalStatus.StatusUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OperationalStatus);
      }
      if (SourceDevice.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceDevice);
      }
      if (SourceSystem.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceSystem);
      }
      if (spatial_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Spatial);
      }
      if (Mission.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Mission);
      }
      subDeviceStatus_.WriteTo(output, _repeated_subDeviceStatus_codec);
      warnings_.WriteTo(output, _repeated_warnings_codec);
      operationalStates_.WriteTo(output, _repeated_operationalStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (OperationalStatus != global::SAIC.Valkyrie.Api.V1.OperationalStatus.StatusUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OperationalStatus);
      }
      if (SourceDevice.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceDevice);
      }
      if (SourceSystem.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceSystem);
      }
      if (spatial_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Spatial);
      }
      if (Mission.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Mission);
      }
      subDeviceStatus_.WriteTo(ref output, _repeated_subDeviceStatus_codec);
      warnings_.WriteTo(ref output, _repeated_warnings_codec);
      operationalStates_.WriteTo(ref output, _repeated_operationalStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (OperationalStatus != global::SAIC.Valkyrie.Api.V1.OperationalStatus.StatusUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationalStatus);
      }
      if (SourceDevice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceDevice);
      }
      if (SourceSystem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceSystem);
      }
      if (spatial_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spatial);
      }
      if (Mission.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mission);
      }
      size += subDeviceStatus_.CalculateSize(_repeated_subDeviceStatus_codec);
      size += warnings_.CalculateSize(_repeated_warnings_codec);
      size += operationalStates_.CalculateSize(_repeated_operationalStates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceStatus other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.OperationalStatus != global::SAIC.Valkyrie.Api.V1.OperationalStatus.StatusUnknown) {
        OperationalStatus = other.OperationalStatus;
      }
      if (other.SourceDevice.Length != 0) {
        SourceDevice = other.SourceDevice;
      }
      if (other.SourceSystem.Length != 0) {
        SourceSystem = other.SourceSystem;
      }
      if (other.spatial_ != null) {
        if (spatial_ == null) {
          Spatial = new global::SAIC.Valkyrie.Api.V1.DeviceSpatialFactors();
        }
        Spatial.MergeFrom(other.Spatial);
      }
      if (other.Mission.Length != 0) {
        Mission = other.Mission;
      }
      subDeviceStatus_.Add(other.subDeviceStatus_);
      warnings_.Add(other.warnings_);
      operationalStates_.Add(other.operationalStates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 16: {
            OperationalStatus = (global::SAIC.Valkyrie.Api.V1.OperationalStatus) input.ReadEnum();
            break;
          }
          case 26: {
            SourceDevice = input.ReadString();
            break;
          }
          case 34: {
            SourceSystem = input.ReadString();
            break;
          }
          case 42: {
            if (spatial_ == null) {
              Spatial = new global::SAIC.Valkyrie.Api.V1.DeviceSpatialFactors();
            }
            input.ReadMessage(Spatial);
            break;
          }
          case 50: {
            Mission = input.ReadString();
            break;
          }
          case 58: {
            subDeviceStatus_.AddEntriesFrom(input, _repeated_subDeviceStatus_codec);
            break;
          }
          case 66: {
            warnings_.AddEntriesFrom(input, _repeated_warnings_codec);
            break;
          }
          case 74: {
            operationalStates_.AddEntriesFrom(input, _repeated_operationalStates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 16: {
            OperationalStatus = (global::SAIC.Valkyrie.Api.V1.OperationalStatus) input.ReadEnum();
            break;
          }
          case 26: {
            SourceDevice = input.ReadString();
            break;
          }
          case 34: {
            SourceSystem = input.ReadString();
            break;
          }
          case 42: {
            if (spatial_ == null) {
              Spatial = new global::SAIC.Valkyrie.Api.V1.DeviceSpatialFactors();
            }
            input.ReadMessage(Spatial);
            break;
          }
          case 50: {
            Mission = input.ReadString();
            break;
          }
          case 58: {
            subDeviceStatus_.AddEntriesFrom(ref input, _repeated_subDeviceStatus_codec);
            break;
          }
          case 66: {
            warnings_.AddEntriesFrom(ref input, _repeated_warnings_codec);
            break;
          }
          case 74: {
            operationalStates_.AddEntriesFrom(ref input, _repeated_operationalStates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The DeviceOperationalState message contains details for the current operational state for one capability
  /// of a device. Every capability of a device, including repeated capabilities such as EW, should be represented
  /// as one value within a DeviceStatus message.
  /// </summary>
  public sealed partial class DeviceOperationalState : pb::IMessage<DeviceOperationalState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceOperationalState> _parser = new pb::MessageParser<DeviceOperationalState>(() => new DeviceOperationalState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceOperationalState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.DevicesStatusReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceOperationalState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceOperationalState(DeviceOperationalState other) : this() {
      operation_ = other.operation_;
      state_ = other.state_;
      displayName_ = other.displayName_;
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceOperationalState Clone() {
      return new DeviceOperationalState(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.DeviceOperationType operation_ = global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown;
    /// <summary>
    /// the operational capability for this device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceOperationType Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.DeviceOperationState state_ = global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown;
    /// <summary>
    /// the state for this operational capability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DeviceOperationState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private string displayName_ = "";
    /// <summary>
    /// a string value representing the name of this capability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 4;
    private global::SAIC.Valkyrie.Api.V1.TargetIdentifier target_;
    /// <summary>
    /// an optional target id that represents the threat this operation is running against. null for non-threat-specific
    /// operations (like fire or deploy). Primarily for energize|probe|slew -to-cue commands
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetIdentifier Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceOperationalState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceOperationalState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Operation != other.Operation) return false;
      if (State != other.State) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Operation != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) hash ^= Operation.GetHashCode();
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) hash ^= State.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Operation != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (target_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Operation != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (target_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Operation != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceOperationalState other) {
      if (other == null) {
        return;
      }
      if (other.Operation != global::SAIC.Valkyrie.Api.V1.DeviceOperationType.OpTypeUnknown) {
        Operation = other.Operation;
      }
      if (other.State != global::SAIC.Valkyrie.Api.V1.DeviceOperationState.OpStateUnknown) {
        State = other.State;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Operation = (global::SAIC.Valkyrie.Api.V1.DeviceOperationType) input.ReadEnum();
            break;
          }
          case 16: {
            State = (global::SAIC.Valkyrie.Api.V1.DeviceOperationState) input.ReadEnum();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Operation = (global::SAIC.Valkyrie.Api.V1.DeviceOperationType) input.ReadEnum();
            break;
          }
          case 16: {
            State = (global::SAIC.Valkyrie.Api.V1.DeviceOperationState) input.ReadEnum();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            if (target_ == null) {
              Target = new global::SAIC.Valkyrie.Api.V1.TargetIdentifier();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
