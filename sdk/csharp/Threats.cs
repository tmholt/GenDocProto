// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Threats.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SAIC.Valkyrie.Api.V1 {

  /// <summary>Holder for reflection information generated from Threats.proto</summary>
  public static partial class ThreatsReflection {

    #region Descriptor
    /// <summary>File descriptor for Threats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ThreatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1UaHJlYXRzLnByb3RvEhtzYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQa",
            "Hmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxogZ29vZ2xlL3Byb3Rv",
            "YnVmL2Rlc2NyaXB0b3IucHJvdG8aDENvbW1vbi5wcm90byLyAQoSRGV0ZWN0",
            "ZWRDb29yZGluYXRlEjwKCHBvc2l0aW9uGAEgASgLMiouc2FpYy52YWxreXJp",
            "ZS5zZGsuZ2VuZXJhdGVkLkNvb3JkaW5hdGVMbGESMwoNbGF0aXR1ZGVFcnJv",
            "chgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRI0Cg5sb25n",
            "aXR1ZGVFcnJvchgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1",
            "ZRIzCg1hbHRpdHVkZUVycm9yGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRv",
            "dWJsZVZhbHVlIuwBChVEZXRlY3RlZExpbmVPZkJlYXJpbmcSNwoDbG9iGAEg",
            "ASgLMiouc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkxpbmVPZkJlYXJp",
            "bmcSMgoMYXppbXV0aEVycm9yGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRv",
            "dWJsZVZhbHVlEjQKDmVsZXZhdGlvbkVycm9yGAMgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLkRvdWJsZVZhbHVlEjAKCnJhbmdlRXJyb3IYBCABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuRG91YmxlVmFsdWUiLAoNVGFyZ2V0RXRhSW5mbxILCgNl",
            "dGEYASABKAUSDgoGcGFOYW1lGAIgASgJIrYCCg9UYXJnZXREaW1lbnNpb24S",
            "QwoIcG9zaXRpb24YASABKAsyLy5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0",
            "ZWQuRGV0ZWN0ZWRDb29yZGluYXRlSAASQQoDbG9iGAIgASgLMjIuc2FpYy52",
            "YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkRldGVjdGVkTGluZU9mQmVhcmluZ0gA",
            "EjkKCHZlbG9jaXR5GAMgASgLMiUuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJh",
            "dGVkLlZlbG9jaXR5SAESRwoPYW5ndWxhclZlbG9jaXR5GAQgASgLMiwuc2Fp",
            "Yy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLkFuZ3VsYXJWZWxvY2l0eUgBQgkK",
            "B3NwYXRpYWxCDAoKdmVsb2NpdGllcyLZAQoVVGFyZ2V0TGlua2VkQ29tcG9u",
            "ZW50EgwKBG5hbWUYASABKAkSRAoEdHlwZRgCIAEoDjI2LnNhaWMudmFsa3ly",
            "aWUuc2RrLmdlbmVyYXRlZC5UYXJnZXRMaW5rZWRDb21wb25lbnRUeXBlEjwK",
            "CHBvc2l0aW9uGAMgASgLMiouc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVk",
            "LkNvb3JkaW5hdGVMbGESLgoJdGltZXN0YW1wGAQgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDY0VmFsdWUinQYKClRocmVhdEluZm8SEAoIdGhyZWF0SWQY",
            "ASABKAMSFAoMc291cmNlU3lzdGVtGAIgASgJEhIKCnRocmVhdE5hbWUYAyAB",
            "KAkSNwoIcHJpb3JpdHkYBCABKA4yJS5zYWljLnZhbGt5cmllLnNkay5nZW5l",
            "cmF0ZWQuUHJpb3JpdHkSMQoLZGVzY3JpcHRpb24YBSABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSPwoJZGltZW5zaW9uGAYgASgLMiwuc2Fp",
            "Yy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLlRhcmdldERpbWVuc2lvbhISCgp1",
            "cGRhdGVUaW1lGAcgASgDEkUKC3RocmVhdFN0YXRlGAggASgOMjAuc2FpYy52",
            "YWxreXJpZS5zZGsuZ2VuZXJhdGVkLlRhcmdldERlbGl2ZXJ5U3RhdGUSNwoD",
            "ZXRhGAkgASgLMiouc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLlRhcmdl",
            "dEV0YUluZm8SNgoQc2lnbmFsQ29uZmlkZW5jZRgKIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5Eb3VibGVWYWx1ZRJDCgthZmZpbGlhdGlvbhgLIAEoDjIuLnNh",
            "aWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5UYXJnZXRBZmZpbGlhdGlvbhIa",
            "ChJpc0NsaWVudEFmZmlsaWF0ZWQYDCABKAgSSQoOY2xhc3NpZmljYXRpb24Y",
            "DSABKA4yMS5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuVGFyZ2V0Q2xh",
            "c3NpZmljYXRpb24SGgoSaXNDbGllbnRDbGFzc2lmaWVkGA4gASgIEjYKBnRy",
            "YWNrcxgPIAMoCzImLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5UcmFj",
            "a0luZm8SEgoKb3JpZ2luVGltZRgQIAEoAxJGCgpjb21wb25lbnRzGBEgAygL",
            "MjIuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLlRhcmdldExpbmtlZENv",
            "bXBvbmVudCK8BQoJVHJhY2tJbmZvEg8KB3RyYWNrSWQYASABKAMSEQoJdGlt",
            "ZXN0YW1wGAIgASgDEhQKDHNvdXJjZVN5c3RlbRgDIAEoCRIUCgxzb3VyY2VE",
            "ZXZpY2UYBCABKAkSQwoLYWZmaWxpYXRpb24YBSABKA4yLi5zYWljLnZhbGt5",
            "cmllLnNkay5nZW5lcmF0ZWQuVGFyZ2V0QWZmaWxpYXRpb24SPwoJZGltZW5z",
            "aW9uGAYgASgLMiwuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVkLlRhcmdl",
            "dERpbWVuc2lvbhI/Cgl0cmFja1R5cGUYByABKA4yLC5zYWljLnZhbGt5cmll",
            "LnNkay5nZW5lcmF0ZWQuVHJhY2tTeXN0ZW1UeXBlEkQKCnRyYWNrU3RhdGUY",
            "CCABKA4yMC5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuVGFyZ2V0RGVs",
            "aXZlcnlTdGF0ZRIyCgxzZXJpYWxOdW1iZXIYCSABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSTAoOY2xhc3NpZmljYXRpb24YCiABKAsyNC5z",
            "YWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuVHJhY2tDbGFzc2lmaWNhdGlv",
            "bkluZm8SPgoJcXVhbGl0aWVzGAsgASgLMisuc2FpYy52YWxreXJpZS5zZGsu",
            "Z2VuZXJhdGVkLlRyYWNrUXVhbGl0aWVzEkgKB2ZlYXR1cmUYDCABKAsyNy5z",
            "YWljLnZhbGt5cmllLnNkay5nZW5lcmF0ZWQuVHJhY2tEaXNjcmltaW5hdGlv",
            "bkZlYXR1cmUSRgoKY29tcG9uZW50cxgNIAMoCzIyLnNhaWMudmFsa3lyaWUu",
            "c2RrLmdlbmVyYXRlZC5UYXJnZXRMaW5rZWRDb21wb25lbnQiHAoaVHJhY2tE",
            "aXNjcmltaW5hdGlvbkZlYXR1cmUiwAIKF1RyYWNrQ2xhc3NpZmljYXRpb25J",
            "bmZvEj8KBHR5cGUYASABKA4yMS5zYWljLnZhbGt5cmllLnNkay5nZW5lcmF0",
            "ZWQuVGFyZ2V0Q2xhc3NpZmljYXRpb24SLQoJaXNNYW5NYWRlGAIgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIwCgpjb25maWRlbmNlGAMgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlEkkKD2Rpc2NyaW1pbmF0",
            "aW9ucxgEIAMoCzIwLnNhaWMudmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5UcmFj",
            "a0Rpc2NyaW1pbmF0aW9uEjgKEmRldGVjdGVkRHJvbmVNb2RlbBgFIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSKsAQoTVHJhY2tEaXNjcmlt",
            "aW5hdGlvbhIwCgpjb25maWRlbmNlGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LkRvdWJsZVZhbHVlEi0KB2ZlYXR1cmUYAiABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSNAoOZGlzY3JpbWluYXRpb24YAyABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUingEKDlRyYWNrUXVhbGl0aWVzEkcK",
            "CGFjb3VzdGljGAEgASgLMjMuc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJhdGVk",
            "LlRyYWNrQWNvdXN0aWNRdWFsaXRpZXNIABI7CgJyZhgCIAEoCzItLnNhaWMu",
            "dmFsa3lyaWUuc2RrLmdlbmVyYXRlZC5UcmFja1JmUXVhbGl0aWVzSABCBgoE",
            "ZGF0YSLsAQoQVHJhY2tSZlF1YWxpdGllcxISCgpzaWduYWxUeXBlGAEgASgJ",
            "Ei8KCWZyZXF1ZW5jeRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVW",
            "YWx1ZRIwCgptYWNBZGRyZXNzGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEjQKDnNpZ25hbFN0cmVuZ3RoGAQgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLkRvdWJsZVZhbHVlEisKBXZpZGVvGAUgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlIsMCChZUcmFja0Fjb3VzdGljUXVhbGl0aWVz",
            "EhIKCnNpZ25hbFR5cGUYASABKAkSNgoQc2lnbmFsQ29uZmlkZW5jZRgCIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRI3ChFhYnNvbHV0ZUFt",
            "cGxpdHVkZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRI3",
            "ChFyZWxhdGl2ZUFtcGxpdHVkZRgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5E",
            "b3VibGVWYWx1ZRIvCglmcmVxdWVuY3kYBSABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuRG91YmxlVmFsdWUSOgoUZnVuZGFtZW50YWxGcmVxdWVuY3kYBiABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFsdWUqSwoZVGFyZ2V0TGlua2Vk",
            "Q29tcG9uZW50VHlwZRILCgdVTktOT1dOEAASEQoNSE9NRV9MT0NBVElPThAB",
            "Eg4KCkNPTlRST0xMRVIQAiqTAQoTVGFyZ2V0RGVsaXZlcnlTdGF0ZRIYChRU",
            "QVJHRVRfU1RBVEVfVU5LTk9XThAAEhYKElRBUkdFVF9TVEFURV9CRUdJThAB",
            "EhQKEFRBUkdFVF9TVEFURV9FTkQQAhIZChVUQVJHRVRfU1RBVEVfRklMVEVS",
            "RUQQAxIZChVUQVJHRVRfU1RBVEVfU1RBTkRBUkQQBCrnAQoPVHJhY2tTeXN0",
            "ZW1UeXBlEiEKElRSQUNLX1NZU1RFTV9PVEhFUhAAGgnK+xoFT3RoZXISJwoV",
            "VFJBQ0tfU1lTVEVNX0FDT1VTVElDEAEaDMr7GghBY291c3RpYxIhChJUUkFD",
            "S19TWVNURU1fUkFEQVIQAhoJyvsaBVJhZGFyEhsKD1RSQUNLX1NZU1RFTV9F",
            "VxADGgbK+xoCRVcSIwoTVFJBQ0tfU1lTVEVNX0NBTUVSQRAEGgrK+xoGQ2Ft",
            "ZXJhEiMKE1RSQUNLX1NZU1RFTV9USFJFQVQQBRoKyvsaBlRocmVhdCrHAQoU",
            "VGFyZ2V0Q2xhc3NpZmljYXRpb24SIwoSQ0xBU1NfVFlQRV9QRU5ESU5HEAAa",
            "C8r7GgdQZW5kaW5nEiUKE0NMQVNTX1RZUEVfQUlSQ1JBRlQQARoMyvsaCEFp",
            "cmNyYWZ0Eh0KD0NMQVNTX1RZUEVfQklSRBACGgjK+xoEQmlyZBIfChBDTEFT",
            "U19UWVBFX0RST05FEAMaCcr7GgVEcm9uZRIjChJDTEFTU19UWVBFX1VOS05P",
            "V04QBBoLyvsaB1Vua25vd25CaAobc2FpYy52YWxreXJpZS5zZGsuZ2VuZXJh",
            "dGVkQgxUaHJlYXRzUHJvdG9aJGdpdGh1Yi5jb20vdG1ob2x0L0dlbkRvY1By",
            "b3RvL3Nkay9nb6oCFFNBSUMuVmFsa3lyaWUuQXBpLlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::SAIC.Valkyrie.Api.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType), typeof(global::SAIC.Valkyrie.Api.V1.TargetDeliveryState), typeof(global::SAIC.Valkyrie.Api.V1.TrackSystemType), typeof(global::SAIC.Valkyrie.Api.V1.TargetClassification), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DetectedCoordinate), global::SAIC.Valkyrie.Api.V1.DetectedCoordinate.Parser, new[]{ "Position", "LatitudeError", "LongitudeError", "AltitudeError" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing), global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing.Parser, new[]{ "Lob", "AzimuthError", "ElevationError", "RangeError" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TargetEtaInfo), global::SAIC.Valkyrie.Api.V1.TargetEtaInfo.Parser, new[]{ "Eta", "PaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TargetDimension), global::SAIC.Valkyrie.Api.V1.TargetDimension.Parser, new[]{ "Position", "Lob", "Velocity", "AngularVelocity" }, new[]{ "Spatial", "Velocities" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent), global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent.Parser, new[]{ "Name", "Type", "Position", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.ThreatInfo), global::SAIC.Valkyrie.Api.V1.ThreatInfo.Parser, new[]{ "ThreatId", "SourceSystem", "ThreatName", "Priority", "Description", "Dimension", "UpdateTime", "ThreatState", "Eta", "SignalConfidence", "Affiliation", "IsClientAffiliated", "Classification", "IsClientClassified", "Tracks", "OriginTime", "Components" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TrackInfo), global::SAIC.Valkyrie.Api.V1.TrackInfo.Parser, new[]{ "TrackId", "Timestamp", "SourceSystem", "SourceDevice", "Affiliation", "Dimension", "TrackType", "TrackState", "SerialNumber", "Classification", "Qualities", "Feature", "Components" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TrackDiscriminationFeature), global::SAIC.Valkyrie.Api.V1.TrackDiscriminationFeature.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TrackClassificationInfo), global::SAIC.Valkyrie.Api.V1.TrackClassificationInfo.Parser, new[]{ "Type", "IsManMade", "Confidence", "Discriminations", "DetectedDroneModel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TrackDiscrimination), global::SAIC.Valkyrie.Api.V1.TrackDiscrimination.Parser, new[]{ "Confidence", "Feature", "Discrimination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TrackQualities), global::SAIC.Valkyrie.Api.V1.TrackQualities.Parser, new[]{ "Acoustic", "Rf" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TrackRfQualities), global::SAIC.Valkyrie.Api.V1.TrackRfQualities.Parser, new[]{ "SignalType", "Frequency", "MacAddress", "SignalStrength", "Video" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities), global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities.Parser, new[]{ "SignalType", "SignalConfidence", "AbsoluteAmplitude", "RelativeAmplitude", "Frequency", "FundamentalFrequency" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///
  /// The TargetLinkedComponentType enumeration is used in conjunction with the
  /// {@link TargetLinkedComponent} message. It defines the type of the linked UAS component.
  /// </summary>
  public enum TargetLinkedComponentType {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// the home location of the drone
    /// </summary>
    [pbr::OriginalName("HOME_LOCATION")] HomeLocation = 1,
    /// <summary>
    /// the location of the controller (and likely the pilot)
    /// </summary>
    [pbr::OriginalName("CONTROLLER")] Controller = 2,
  }

  /// <summary>
  ///
  /// The TargetDeliveryState enumeration details the state of the delivery of a threat
  /// or a target to a client. Contains potential reason for NOT receiving the threat or track as well.
  /// </summary>
  public enum TargetDeliveryState {
    /// <summary>
    /// unknown / unset state
    /// </summary>
    [pbr::OriginalName("TARGET_STATE_UNKNOWN")] TargetStateUnknown = 0,
    /// <summary>
    /// Set if this is the first instance of a track or threat being sent from a device or from Valkyrie.
    /// </summary>
    [pbr::OriginalName("TARGET_STATE_BEGIN")] TargetStateBegin = 1,
    /// <summary>
    /// Set if a track or threat has stopped being received or has timed out, and no more delivery of it will occur.
    /// </summary>
    [pbr::OriginalName("TARGET_STATE_END")] TargetStateEnd = 2,
    /// <summary>
    /// Set if a track or threat has entered a state in which it is filtered from a client, and will not be delivered to
    /// that client any more, while the filtering conditions remain. A threat may enter and leave this state multiple times
    /// during its life, while it will only reach a state of THREAT_STATE_END once.
    /// </summary>
    [pbr::OriginalName("TARGET_STATE_FILTERED")] TargetStateFiltered = 3,
    /// <summary>
    /// Standard state for a threat or track - not the first or last instance of this message.
    /// </summary>
    [pbr::OriginalName("TARGET_STATE_STANDARD")] TargetStateStandard = 4,
  }

  /// <summary>
  ///
  /// The TrackSystemType enumeration represents the rough type/category of the
  /// device a track came from.
  /// </summary>
  public enum TrackSystemType {
    [pbr::OriginalName("TRACK_SYSTEM_OTHER")] TrackSystemOther = 0,
    [pbr::OriginalName("TRACK_SYSTEM_ACOUSTIC")] TrackSystemAcoustic = 1,
    [pbr::OriginalName("TRACK_SYSTEM_RADAR")] TrackSystemRadar = 2,
    [pbr::OriginalName("TRACK_SYSTEM_EW")] TrackSystemEw = 3,
    [pbr::OriginalName("TRACK_SYSTEM_CAMERA")] TrackSystemCamera = 4,
    [pbr::OriginalName("TRACK_SYSTEM_THREAT")] TrackSystemThreat = 5,
  }

  /// <summary>
  ///
  /// The TargetClassification enumeration provides classification type
  /// for a track or threat.
  /// </summary>
  public enum TargetClassification {
    [pbr::OriginalName("CLASS_TYPE_PENDING")] ClassTypePending = 0,
    [pbr::OriginalName("CLASS_TYPE_AIRCRAFT")] ClassTypeAircraft = 1,
    [pbr::OriginalName("CLASS_TYPE_BIRD")] ClassTypeBird = 2,
    [pbr::OriginalName("CLASS_TYPE_DRONE")] ClassTypeDrone = 3,
    [pbr::OriginalName("CLASS_TYPE_UNKNOWN")] ClassTypeUnknown = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  ///
  /// The DetectedCoordinate message contains a detected coordinate value
  /// along with optional error values for that position. The error values support
  /// calculating error volumes and signal confidence.
  /// </summary>
  public sealed partial class DetectedCoordinate : pb::IMessage<DetectedCoordinate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetectedCoordinate> _parser = new pb::MessageParser<DetectedCoordinate>(() => new DetectedCoordinate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DetectedCoordinate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetectedCoordinate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetectedCoordinate(DetectedCoordinate other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      LatitudeError = other.LatitudeError;
      LongitudeError = other.LongitudeError;
      AltitudeError = other.AltitudeError;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetectedCoordinate Clone() {
      return new DetectedCoordinate(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla position_;
    /// <summary>
    /// the detected position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "latitudeError" field.</summary>
    public const int LatitudeErrorFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_latitudeError_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? latitudeError_;
    /// <summary>
    /// Error of the latitude (Units: degrees).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? LatitudeError {
      get { return latitudeError_; }
      set {
        latitudeError_ = value;
      }
    }


    /// <summary>Field number for the "longitudeError" field.</summary>
    public const int LongitudeErrorFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_longitudeError_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? longitudeError_;
    /// <summary>
    /// Error of the longitude (Units: degrees).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? LongitudeError {
      get { return longitudeError_; }
      set {
        longitudeError_ = value;
      }
    }


    /// <summary>Field number for the "altitudeError" field.</summary>
    public const int AltitudeErrorFieldNumber = 4;
    private static readonly pb::FieldCodec<double?> _single_altitudeError_codec = pb::FieldCodec.ForStructWrapper<double>(34);
    private double? altitudeError_;
    /// <summary>
    /// Error of the altitude (Units: meters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? AltitudeError {
      get { return altitudeError_; }
      set {
        altitudeError_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DetectedCoordinate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DetectedCoordinate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(LatitudeError, other.LatitudeError)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(LongitudeError, other.LongitudeError)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(AltitudeError, other.AltitudeError)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (latitudeError_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(LatitudeError);
      if (longitudeError_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(LongitudeError);
      if (altitudeError_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(AltitudeError);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (latitudeError_ != null) {
        _single_latitudeError_codec.WriteTagAndValue(output, LatitudeError);
      }
      if (longitudeError_ != null) {
        _single_longitudeError_codec.WriteTagAndValue(output, LongitudeError);
      }
      if (altitudeError_ != null) {
        _single_altitudeError_codec.WriteTagAndValue(output, AltitudeError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (latitudeError_ != null) {
        _single_latitudeError_codec.WriteTagAndValue(ref output, LatitudeError);
      }
      if (longitudeError_ != null) {
        _single_longitudeError_codec.WriteTagAndValue(ref output, LongitudeError);
      }
      if (altitudeError_ != null) {
        _single_altitudeError_codec.WriteTagAndValue(ref output, AltitudeError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (latitudeError_ != null) {
        size += _single_latitudeError_codec.CalculateSizeWithTag(LatitudeError);
      }
      if (longitudeError_ != null) {
        size += _single_longitudeError_codec.CalculateSizeWithTag(LongitudeError);
      }
      if (altitudeError_ != null) {
        size += _single_altitudeError_codec.CalculateSizeWithTag(AltitudeError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DetectedCoordinate other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.latitudeError_ != null) {
        if (latitudeError_ == null || other.LatitudeError != 0D) {
          LatitudeError = other.LatitudeError;
        }
      }
      if (other.longitudeError_ != null) {
        if (longitudeError_ == null || other.LongitudeError != 0D) {
          LongitudeError = other.LongitudeError;
        }
      }
      if (other.altitudeError_ != null) {
        if (altitudeError_ == null || other.AltitudeError != 0D) {
          AltitudeError = other.AltitudeError;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            double? value = _single_latitudeError_codec.Read(input);
            if (latitudeError_ == null || value != 0D) {
              LatitudeError = value;
            }
            break;
          }
          case 26: {
            double? value = _single_longitudeError_codec.Read(input);
            if (longitudeError_ == null || value != 0D) {
              LongitudeError = value;
            }
            break;
          }
          case 34: {
            double? value = _single_altitudeError_codec.Read(input);
            if (altitudeError_ == null || value != 0D) {
              AltitudeError = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            double? value = _single_latitudeError_codec.Read(ref input);
            if (latitudeError_ == null || value != 0D) {
              LatitudeError = value;
            }
            break;
          }
          case 26: {
            double? value = _single_longitudeError_codec.Read(ref input);
            if (longitudeError_ == null || value != 0D) {
              LongitudeError = value;
            }
            break;
          }
          case 34: {
            double? value = _single_altitudeError_codec.Read(ref input);
            if (altitudeError_ == null || value != 0D) {
              AltitudeError = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The DetectedLineOfBearing message contains a detected line of bearing along with
  /// optional error information for Az/El/Range. The error values support
  /// calculating error volumes and signal confidence.
  /// </summary>
  public sealed partial class DetectedLineOfBearing : pb::IMessage<DetectedLineOfBearing>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetectedLineOfBearing> _parser = new pb::MessageParser<DetectedLineOfBearing>(() => new DetectedLineOfBearing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DetectedLineOfBearing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetectedLineOfBearing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetectedLineOfBearing(DetectedLineOfBearing other) : this() {
      lob_ = other.lob_ != null ? other.lob_.Clone() : null;
      AzimuthError = other.AzimuthError;
      ElevationError = other.ElevationError;
      RangeError = other.RangeError;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DetectedLineOfBearing Clone() {
      return new DetectedLineOfBearing(this);
    }

    /// <summary>Field number for the "lob" field.</summary>
    public const int LobFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.LineOfBearing lob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.LineOfBearing Lob {
      get { return lob_; }
      set {
        lob_ = value;
      }
    }

    /// <summary>Field number for the "azimuthError" field.</summary>
    public const int AzimuthErrorFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_azimuthError_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? azimuthError_;
    /// <summary>
    /// Error of the azimuth angle estimate (Units: degrees).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? AzimuthError {
      get { return azimuthError_; }
      set {
        azimuthError_ = value;
      }
    }


    /// <summary>Field number for the "elevationError" field.</summary>
    public const int ElevationErrorFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_elevationError_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? elevationError_;
    /// <summary>
    /// Error of the elevation angle estimate (Units: degrees).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? ElevationError {
      get { return elevationError_; }
      set {
        elevationError_ = value;
      }
    }


    /// <summary>Field number for the "rangeError" field.</summary>
    public const int RangeErrorFieldNumber = 4;
    private static readonly pb::FieldCodec<double?> _single_rangeError_codec = pb::FieldCodec.ForStructWrapper<double>(34);
    private double? rangeError_;
    /// <summary>
    /// Error of the Range of LOB (Units: meters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? RangeError {
      get { return rangeError_; }
      set {
        rangeError_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DetectedLineOfBearing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DetectedLineOfBearing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Lob, other.Lob)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(AzimuthError, other.AzimuthError)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(ElevationError, other.ElevationError)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(RangeError, other.RangeError)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (lob_ != null) hash ^= Lob.GetHashCode();
      if (azimuthError_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(AzimuthError);
      if (elevationError_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(ElevationError);
      if (rangeError_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(RangeError);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lob_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Lob);
      }
      if (azimuthError_ != null) {
        _single_azimuthError_codec.WriteTagAndValue(output, AzimuthError);
      }
      if (elevationError_ != null) {
        _single_elevationError_codec.WriteTagAndValue(output, ElevationError);
      }
      if (rangeError_ != null) {
        _single_rangeError_codec.WriteTagAndValue(output, RangeError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lob_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Lob);
      }
      if (azimuthError_ != null) {
        _single_azimuthError_codec.WriteTagAndValue(ref output, AzimuthError);
      }
      if (elevationError_ != null) {
        _single_elevationError_codec.WriteTagAndValue(ref output, ElevationError);
      }
      if (rangeError_ != null) {
        _single_rangeError_codec.WriteTagAndValue(ref output, RangeError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (lob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lob);
      }
      if (azimuthError_ != null) {
        size += _single_azimuthError_codec.CalculateSizeWithTag(AzimuthError);
      }
      if (elevationError_ != null) {
        size += _single_elevationError_codec.CalculateSizeWithTag(ElevationError);
      }
      if (rangeError_ != null) {
        size += _single_rangeError_codec.CalculateSizeWithTag(RangeError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DetectedLineOfBearing other) {
      if (other == null) {
        return;
      }
      if (other.lob_ != null) {
        if (lob_ == null) {
          Lob = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
        }
        Lob.MergeFrom(other.Lob);
      }
      if (other.azimuthError_ != null) {
        if (azimuthError_ == null || other.AzimuthError != 0D) {
          AzimuthError = other.AzimuthError;
        }
      }
      if (other.elevationError_ != null) {
        if (elevationError_ == null || other.ElevationError != 0D) {
          ElevationError = other.ElevationError;
        }
      }
      if (other.rangeError_ != null) {
        if (rangeError_ == null || other.RangeError != 0D) {
          RangeError = other.RangeError;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lob_ == null) {
              Lob = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
            }
            input.ReadMessage(Lob);
            break;
          }
          case 18: {
            double? value = _single_azimuthError_codec.Read(input);
            if (azimuthError_ == null || value != 0D) {
              AzimuthError = value;
            }
            break;
          }
          case 26: {
            double? value = _single_elevationError_codec.Read(input);
            if (elevationError_ == null || value != 0D) {
              ElevationError = value;
            }
            break;
          }
          case 34: {
            double? value = _single_rangeError_codec.Read(input);
            if (rangeError_ == null || value != 0D) {
              RangeError = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lob_ == null) {
              Lob = new global::SAIC.Valkyrie.Api.V1.LineOfBearing();
            }
            input.ReadMessage(Lob);
            break;
          }
          case 18: {
            double? value = _single_azimuthError_codec.Read(ref input);
            if (azimuthError_ == null || value != 0D) {
              AzimuthError = value;
            }
            break;
          }
          case 26: {
            double? value = _single_elevationError_codec.Read(ref input);
            if (elevationError_ == null || value != 0D) {
              ElevationError = value;
            }
            break;
          }
          case 34: {
            double? value = _single_rangeError_codec.Read(ref input);
            if (rangeError_ == null || value != 0D) {
              RangeError = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TargetEtaInfo message contains details about the estimated time of arrival (TOA)
  /// information for a given target.
  /// </summary>
  public sealed partial class TargetEtaInfo : pb::IMessage<TargetEtaInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetEtaInfo> _parser = new pb::MessageParser<TargetEtaInfo>(() => new TargetEtaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TargetEtaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetEtaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetEtaInfo(TargetEtaInfo other) : this() {
      eta_ = other.eta_;
      paName_ = other.paName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetEtaInfo Clone() {
      return new TargetEtaInfo(this);
    }

    /// <summary>Field number for the "eta" field.</summary>
    public const int EtaFieldNumber = 1;
    private int eta_;
    /// <summary>
    /// The ETA to a given Protected Area.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Eta {
      get { return eta_; }
      set {
        eta_ = value;
      }
    }

    /// <summary>Field number for the "paName" field.</summary>
    public const int PaNameFieldNumber = 2;
    private string paName_ = "";
    /// <summary>
    /// The name of the Protected Area that the ETA applies to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PaName {
      get { return paName_; }
      set {
        paName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TargetEtaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TargetEtaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eta != other.Eta) return false;
      if (PaName != other.PaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Eta != 0) hash ^= Eta.GetHashCode();
      if (PaName.Length != 0) hash ^= PaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Eta != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Eta);
      }
      if (PaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Eta != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Eta);
      }
      if (PaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Eta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eta);
      }
      if (PaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TargetEtaInfo other) {
      if (other == null) {
        return;
      }
      if (other.Eta != 0) {
        Eta = other.Eta;
      }
      if (other.PaName.Length != 0) {
        PaName = other.PaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eta = input.ReadInt32();
            break;
          }
          case 18: {
            PaName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Eta = input.ReadInt32();
            break;
          }
          case 18: {
            PaName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TargetDimension message contains the dimensionality of a threat or track.
  /// If position is set then the threat has a lat/lon position. If lob is set
  /// then the threat has az/el/range values. If neither of the values are set (None),
  /// then this is a 0D threat, and the {@link TrackQualities} field should be examined for known values.
  /// </summary>
  public sealed partial class TargetDimension : pb::IMessage<TargetDimension>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetDimension> _parser = new pb::MessageParser<TargetDimension>(() => new TargetDimension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TargetDimension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetDimension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetDimension(TargetDimension other) : this() {
      switch (other.SpatialCase) {
        case SpatialOneofCase.Position:
          Position = other.Position.Clone();
          break;
        case SpatialOneofCase.Lob:
          Lob = other.Lob.Clone();
          break;
      }

      switch (other.VelocitiesCase) {
        case VelocitiesOneofCase.Velocity:
          Velocity = other.Velocity.Clone();
          break;
        case VelocitiesOneofCase.AngularVelocity:
          AngularVelocity = other.AngularVelocity.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetDimension Clone() {
      return new TargetDimension(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    /// <summary>
    /// the position of the target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DetectedCoordinate Position {
      get { return spatialCase_ == SpatialOneofCase.Position ? (global::SAIC.Valkyrie.Api.V1.DetectedCoordinate) spatial_ : null; }
      set {
        spatial_ = value;
        spatialCase_ = value == null ? SpatialOneofCase.None : SpatialOneofCase.Position;
      }
    }

    /// <summary>Field number for the "lob" field.</summary>
    public const int LobFieldNumber = 2;
    /// <summary>
    /// the LoB to the target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing Lob {
      get { return spatialCase_ == SpatialOneofCase.Lob ? (global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing) spatial_ : null; }
      set {
        spatial_ = value;
        spatialCase_ = value == null ? SpatialOneofCase.None : SpatialOneofCase.Lob;
      }
    }

    /// <summary>Field number for the "velocity" field.</summary>
    public const int VelocityFieldNumber = 3;
    /// <summary>
    /// speed and heading information (use with position)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.Velocity Velocity {
      get { return velocitiesCase_ == VelocitiesOneofCase.Velocity ? (global::SAIC.Valkyrie.Api.V1.Velocity) velocities_ : null; }
      set {
        velocities_ = value;
        velocitiesCase_ = value == null ? VelocitiesOneofCase.None : VelocitiesOneofCase.Velocity;
      }
    }

    /// <summary>Field number for the "angularVelocity" field.</summary>
    public const int AngularVelocityFieldNumber = 4;
    /// <summary>
    /// speed and directional information (use with lob)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.AngularVelocity AngularVelocity {
      get { return velocitiesCase_ == VelocitiesOneofCase.AngularVelocity ? (global::SAIC.Valkyrie.Api.V1.AngularVelocity) velocities_ : null; }
      set {
        velocities_ = value;
        velocitiesCase_ = value == null ? VelocitiesOneofCase.None : VelocitiesOneofCase.AngularVelocity;
      }
    }

    private object spatial_;
    /// <summary>Enum of possible cases for the "spatial" oneof.</summary>
    public enum SpatialOneofCase {
      None = 0,
      Position = 1,
      Lob = 2,
    }
    private SpatialOneofCase spatialCase_ = SpatialOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpatialOneofCase SpatialCase {
      get { return spatialCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpatial() {
      spatialCase_ = SpatialOneofCase.None;
      spatial_ = null;
    }

    private object velocities_;
    /// <summary>Enum of possible cases for the "velocities" oneof.</summary>
    public enum VelocitiesOneofCase {
      None = 0,
      Velocity = 3,
      AngularVelocity = 4,
    }
    private VelocitiesOneofCase velocitiesCase_ = VelocitiesOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VelocitiesOneofCase VelocitiesCase {
      get { return velocitiesCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVelocities() {
      velocitiesCase_ = VelocitiesOneofCase.None;
      velocities_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TargetDimension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TargetDimension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Lob, other.Lob)) return false;
      if (!object.Equals(Velocity, other.Velocity)) return false;
      if (!object.Equals(AngularVelocity, other.AngularVelocity)) return false;
      if (SpatialCase != other.SpatialCase) return false;
      if (VelocitiesCase != other.VelocitiesCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (spatialCase_ == SpatialOneofCase.Position) hash ^= Position.GetHashCode();
      if (spatialCase_ == SpatialOneofCase.Lob) hash ^= Lob.GetHashCode();
      if (velocitiesCase_ == VelocitiesOneofCase.Velocity) hash ^= Velocity.GetHashCode();
      if (velocitiesCase_ == VelocitiesOneofCase.AngularVelocity) hash ^= AngularVelocity.GetHashCode();
      hash ^= (int) spatialCase_;
      hash ^= (int) velocitiesCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (spatialCase_ == SpatialOneofCase.Position) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (spatialCase_ == SpatialOneofCase.Lob) {
        output.WriteRawTag(18);
        output.WriteMessage(Lob);
      }
      if (velocitiesCase_ == VelocitiesOneofCase.Velocity) {
        output.WriteRawTag(26);
        output.WriteMessage(Velocity);
      }
      if (velocitiesCase_ == VelocitiesOneofCase.AngularVelocity) {
        output.WriteRawTag(34);
        output.WriteMessage(AngularVelocity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (spatialCase_ == SpatialOneofCase.Position) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (spatialCase_ == SpatialOneofCase.Lob) {
        output.WriteRawTag(18);
        output.WriteMessage(Lob);
      }
      if (velocitiesCase_ == VelocitiesOneofCase.Velocity) {
        output.WriteRawTag(26);
        output.WriteMessage(Velocity);
      }
      if (velocitiesCase_ == VelocitiesOneofCase.AngularVelocity) {
        output.WriteRawTag(34);
        output.WriteMessage(AngularVelocity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (spatialCase_ == SpatialOneofCase.Position) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (spatialCase_ == SpatialOneofCase.Lob) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lob);
      }
      if (velocitiesCase_ == VelocitiesOneofCase.Velocity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
      }
      if (velocitiesCase_ == VelocitiesOneofCase.AngularVelocity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AngularVelocity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TargetDimension other) {
      if (other == null) {
        return;
      }
      switch (other.SpatialCase) {
        case SpatialOneofCase.Position:
          if (Position == null) {
            Position = new global::SAIC.Valkyrie.Api.V1.DetectedCoordinate();
          }
          Position.MergeFrom(other.Position);
          break;
        case SpatialOneofCase.Lob:
          if (Lob == null) {
            Lob = new global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing();
          }
          Lob.MergeFrom(other.Lob);
          break;
      }

      switch (other.VelocitiesCase) {
        case VelocitiesOneofCase.Velocity:
          if (Velocity == null) {
            Velocity = new global::SAIC.Valkyrie.Api.V1.Velocity();
          }
          Velocity.MergeFrom(other.Velocity);
          break;
        case VelocitiesOneofCase.AngularVelocity:
          if (AngularVelocity == null) {
            AngularVelocity = new global::SAIC.Valkyrie.Api.V1.AngularVelocity();
          }
          AngularVelocity.MergeFrom(other.AngularVelocity);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::SAIC.Valkyrie.Api.V1.DetectedCoordinate subBuilder = new global::SAIC.Valkyrie.Api.V1.DetectedCoordinate();
            if (spatialCase_ == SpatialOneofCase.Position) {
              subBuilder.MergeFrom(Position);
            }
            input.ReadMessage(subBuilder);
            Position = subBuilder;
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing subBuilder = new global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing();
            if (spatialCase_ == SpatialOneofCase.Lob) {
              subBuilder.MergeFrom(Lob);
            }
            input.ReadMessage(subBuilder);
            Lob = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.Velocity subBuilder = new global::SAIC.Valkyrie.Api.V1.Velocity();
            if (velocitiesCase_ == VelocitiesOneofCase.Velocity) {
              subBuilder.MergeFrom(Velocity);
            }
            input.ReadMessage(subBuilder);
            Velocity = subBuilder;
            break;
          }
          case 34: {
            global::SAIC.Valkyrie.Api.V1.AngularVelocity subBuilder = new global::SAIC.Valkyrie.Api.V1.AngularVelocity();
            if (velocitiesCase_ == VelocitiesOneofCase.AngularVelocity) {
              subBuilder.MergeFrom(AngularVelocity);
            }
            input.ReadMessage(subBuilder);
            AngularVelocity = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::SAIC.Valkyrie.Api.V1.DetectedCoordinate subBuilder = new global::SAIC.Valkyrie.Api.V1.DetectedCoordinate();
            if (spatialCase_ == SpatialOneofCase.Position) {
              subBuilder.MergeFrom(Position);
            }
            input.ReadMessage(subBuilder);
            Position = subBuilder;
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing subBuilder = new global::SAIC.Valkyrie.Api.V1.DetectedLineOfBearing();
            if (spatialCase_ == SpatialOneofCase.Lob) {
              subBuilder.MergeFrom(Lob);
            }
            input.ReadMessage(subBuilder);
            Lob = subBuilder;
            break;
          }
          case 26: {
            global::SAIC.Valkyrie.Api.V1.Velocity subBuilder = new global::SAIC.Valkyrie.Api.V1.Velocity();
            if (velocitiesCase_ == VelocitiesOneofCase.Velocity) {
              subBuilder.MergeFrom(Velocity);
            }
            input.ReadMessage(subBuilder);
            Velocity = subBuilder;
            break;
          }
          case 34: {
            global::SAIC.Valkyrie.Api.V1.AngularVelocity subBuilder = new global::SAIC.Valkyrie.Api.V1.AngularVelocity();
            if (velocitiesCase_ == VelocitiesOneofCase.AngularVelocity) {
              subBuilder.MergeFrom(AngularVelocity);
            }
            input.ReadMessage(subBuilder);
            AngularVelocity = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TargetLinkedComponent message is used for associating other components/positions
  /// of a UAS with the Drone that was detected. This would typically be an associated location,
  /// such as the controller or home location for a drone.
  /// </summary>
  public sealed partial class TargetLinkedComponent : pb::IMessage<TargetLinkedComponent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetLinkedComponent> _parser = new pb::MessageParser<TargetLinkedComponent>(() => new TargetLinkedComponent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TargetLinkedComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetLinkedComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetLinkedComponent(TargetLinkedComponent other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      Timestamp = other.Timestamp;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetLinkedComponent Clone() {
      return new TargetLinkedComponent(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// the name of the associated UAS component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType type_ = global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType.Unknown;
    /// <summary>
    /// the type of the associated UAS component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::SAIC.Valkyrie.Api.V1.CoordinateLla position_;
    /// <summary>
    /// the position reported of the UAS component
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.CoordinateLla Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_timestamp_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? timestamp_;
    /// <summary>
    /// the last update time provided for the component.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long? Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TargetLinkedComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TargetLinkedComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType.Unknown) hash ^= Type.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (timestamp_ != null) {
        _single_timestamp_codec.WriteTagAndValue(output, Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (timestamp_ != null) {
        _single_timestamp_codec.WriteTagAndValue(ref output, Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (timestamp_ != null) {
        size += _single_timestamp_codec.CalculateSizeWithTag(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TargetLinkedComponent other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType.Unknown) {
        Type = other.Type;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null || other.Timestamp != 0L) {
          Timestamp = other.Timestamp;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType) input.ReadEnum();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            long? value = _single_timestamp_codec.Read(input);
            if (timestamp_ == null || value != 0L) {
              Timestamp = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::SAIC.Valkyrie.Api.V1.TargetLinkedComponentType) input.ReadEnum();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::SAIC.Valkyrie.Api.V1.CoordinateLla();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            long? value = _single_timestamp_codec.Read(ref input);
            if (timestamp_ == null || value != 0L) {
              Timestamp = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The ThreatInfo message contains details for one threat propagated through the system.
  /// </summary>
  public sealed partial class ThreatInfo : pb::IMessage<ThreatInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreatInfo> _parser = new pb::MessageParser<ThreatInfo>(() => new ThreatInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ThreatInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreatInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreatInfo(ThreatInfo other) : this() {
      threatId_ = other.threatId_;
      sourceSystem_ = other.sourceSystem_;
      threatName_ = other.threatName_;
      priority_ = other.priority_;
      Description = other.Description;
      dimension_ = other.dimension_ != null ? other.dimension_.Clone() : null;
      updateTime_ = other.updateTime_;
      threatState_ = other.threatState_;
      eta_ = other.eta_ != null ? other.eta_.Clone() : null;
      SignalConfidence = other.SignalConfidence;
      affiliation_ = other.affiliation_;
      isClientAffiliated_ = other.isClientAffiliated_;
      classification_ = other.classification_;
      isClientClassified_ = other.isClientClassified_;
      tracks_ = other.tracks_.Clone();
      originTime_ = other.originTime_;
      components_ = other.components_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreatInfo Clone() {
      return new ThreatInfo(this);
    }

    /// <summary>Field number for the "threatId" field.</summary>
    public const int ThreatIdFieldNumber = 1;
    private long threatId_;
    /// <summary>
    /// Unique (temporarily) ID for this threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ThreatId {
      get { return threatId_; }
      set {
        threatId_ = value;
      }
    }

    /// <summary>Field number for the "sourceSystem" field.</summary>
    public const int SourceSystemFieldNumber = 2;
    private string sourceSystem_ = "";
    /// <summary>
    /// the source system that generated this threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceSystem {
      get { return sourceSystem_; }
      set {
        sourceSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "threatName" field.</summary>
    public const int ThreatNameFieldNumber = 3;
    private string threatName_ = "";
    /// <summary>
    /// A friendly name for this threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThreatName {
      get { return threatName_; }
      set {
        threatName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 4;
    private global::SAIC.Valkyrie.Api.V1.Priority priority_ = global::SAIC.Valkyrie.Api.V1.Priority.None;
    /// <summary>
    /// Priority rating for this threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.Priority Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description_;
    /// <summary>
    /// optional descriptive field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "dimension" field.</summary>
    public const int DimensionFieldNumber = 6;
    private global::SAIC.Valkyrie.Api.V1.TargetDimension dimension_;
    /// <summary>
    /// the roll up of target dimension information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetDimension Dimension {
      get { return dimension_; }
      set {
        dimension_ = value;
      }
    }

    /// <summary>Field number for the "updateTime" field.</summary>
    public const int UpdateTimeFieldNumber = 7;
    private long updateTime_;
    /// <summary>
    /// latest track time, in milliseconds since epoch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "threatState" field.</summary>
    public const int ThreatStateFieldNumber = 8;
    private global::SAIC.Valkyrie.Api.V1.TargetDeliveryState threatState_ = global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown;
    /// <summary>
    /// delivery state of this threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetDeliveryState ThreatState {
      get { return threatState_; }
      set {
        threatState_ = value;
      }
    }

    /// <summary>Field number for the "eta" field.</summary>
    public const int EtaFieldNumber = 9;
    private global::SAIC.Valkyrie.Api.V1.TargetEtaInfo eta_;
    /// <summary>
    /// optional ETA (estimated time of arrival) information for this threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetEtaInfo Eta {
      get { return eta_; }
      set {
        eta_ = value;
      }
    }

    /// <summary>Field number for the "signalConfidence" field.</summary>
    public const int SignalConfidenceFieldNumber = 10;
    private static readonly pb::FieldCodec<double?> _single_signalConfidence_codec = pb::FieldCodec.ForStructWrapper<double>(82);
    private double? signalConfidence_;
    /// <summary>
    /// optional signal confidence, as a value from 0 to 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? SignalConfidence {
      get { return signalConfidence_; }
      set {
        signalConfidence_ = value;
      }
    }


    /// <summary>Field number for the "affiliation" field.</summary>
    public const int AffiliationFieldNumber = 11;
    private global::SAIC.Valkyrie.Api.V1.TargetAffiliation affiliation_ = global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending;
    /// <summary>
    /// affiliation information. This can be set either procedurally by considering child track information, or manually
    /// selected by a client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetAffiliation Affiliation {
      get { return affiliation_; }
      set {
        affiliation_ = value;
      }
    }

    /// <summary>Field number for the "isClientAffiliated" field.</summary>
    public const int IsClientAffiliatedFieldNumber = 12;
    private bool isClientAffiliated_;
    /// <summary>
    /// if the threat has been affiliated by a client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsClientAffiliated {
      get { return isClientAffiliated_; }
      set {
        isClientAffiliated_ = value;
      }
    }

    /// <summary>Field number for the "classification" field.</summary>
    public const int ClassificationFieldNumber = 13;
    private global::SAIC.Valkyrie.Api.V1.TargetClassification classification_ = global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending;
    /// <summary>
    /// classification information. This can be set either procedurally by considering child track information, or manually
    /// selected by a client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetClassification Classification {
      get { return classification_; }
      set {
        classification_ = value;
      }
    }

    /// <summary>Field number for the "isClientClassified" field.</summary>
    public const int IsClientClassifiedFieldNumber = 14;
    private bool isClientClassified_;
    /// <summary>
    /// if the threat has been classified by a client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsClientClassified {
      get { return isClientClassified_; }
      set {
        isClientClassified_ = value;
      }
    }

    /// <summary>Field number for the "tracks" field.</summary>
    public const int TracksFieldNumber = 15;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.TrackInfo> _repeated_tracks_codec
        = pb::FieldCodec.ForMessage(122, global::SAIC.Valkyrie.Api.V1.TrackInfo.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TrackInfo> tracks_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TrackInfo>();
    /// <summary>
    /// tracks within our threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TrackInfo> Tracks {
      get { return tracks_; }
    }

    /// <summary>Field number for the "originTime" field.</summary>
    public const int OriginTimeFieldNumber = 16;
    private long originTime_;
    /// <summary>
    /// time of detection, in milliseconds since epoch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OriginTime {
      get { return originTime_; }
      set {
        originTime_ = value;
      }
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 17;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent> _repeated_components_codec
        = pb::FieldCodec.ForMessage(138, global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent> components_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent>();
    /// <summary>
    /// this is the aggregation of all components for the underlying tracks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent> Components {
      get { return components_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ThreatInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ThreatInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreatId != other.ThreatId) return false;
      if (SourceSystem != other.SourceSystem) return false;
      if (ThreatName != other.ThreatName) return false;
      if (Priority != other.Priority) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Dimension, other.Dimension)) return false;
      if (UpdateTime != other.UpdateTime) return false;
      if (ThreatState != other.ThreatState) return false;
      if (!object.Equals(Eta, other.Eta)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(SignalConfidence, other.SignalConfidence)) return false;
      if (Affiliation != other.Affiliation) return false;
      if (IsClientAffiliated != other.IsClientAffiliated) return false;
      if (Classification != other.Classification) return false;
      if (IsClientClassified != other.IsClientClassified) return false;
      if(!tracks_.Equals(other.tracks_)) return false;
      if (OriginTime != other.OriginTime) return false;
      if(!components_.Equals(other.components_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreatId != 0L) hash ^= ThreatId.GetHashCode();
      if (SourceSystem.Length != 0) hash ^= SourceSystem.GetHashCode();
      if (ThreatName.Length != 0) hash ^= ThreatName.GetHashCode();
      if (Priority != global::SAIC.Valkyrie.Api.V1.Priority.None) hash ^= Priority.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (dimension_ != null) hash ^= Dimension.GetHashCode();
      if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
      if (ThreatState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) hash ^= ThreatState.GetHashCode();
      if (eta_ != null) hash ^= Eta.GetHashCode();
      if (signalConfidence_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(SignalConfidence);
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) hash ^= Affiliation.GetHashCode();
      if (IsClientAffiliated != false) hash ^= IsClientAffiliated.GetHashCode();
      if (Classification != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) hash ^= Classification.GetHashCode();
      if (IsClientClassified != false) hash ^= IsClientClassified.GetHashCode();
      hash ^= tracks_.GetHashCode();
      if (OriginTime != 0L) hash ^= OriginTime.GetHashCode();
      hash ^= components_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThreatId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ThreatId);
      }
      if (SourceSystem.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceSystem);
      }
      if (ThreatName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ThreatName);
      }
      if (Priority != global::SAIC.Valkyrie.Api.V1.Priority.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Priority);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (dimension_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dimension);
      }
      if (UpdateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(UpdateTime);
      }
      if (ThreatState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ThreatState);
      }
      if (eta_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Eta);
      }
      if (signalConfidence_ != null) {
        _single_signalConfidence_codec.WriteTagAndValue(output, SignalConfidence);
      }
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Affiliation);
      }
      if (IsClientAffiliated != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsClientAffiliated);
      }
      if (Classification != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Classification);
      }
      if (IsClientClassified != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsClientClassified);
      }
      tracks_.WriteTo(output, _repeated_tracks_codec);
      if (OriginTime != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(OriginTime);
      }
      components_.WriteTo(output, _repeated_components_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThreatId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ThreatId);
      }
      if (SourceSystem.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceSystem);
      }
      if (ThreatName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ThreatName);
      }
      if (Priority != global::SAIC.Valkyrie.Api.V1.Priority.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Priority);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(ref output, Description);
      }
      if (dimension_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dimension);
      }
      if (UpdateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(UpdateTime);
      }
      if (ThreatState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ThreatState);
      }
      if (eta_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Eta);
      }
      if (signalConfidence_ != null) {
        _single_signalConfidence_codec.WriteTagAndValue(ref output, SignalConfidence);
      }
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Affiliation);
      }
      if (IsClientAffiliated != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsClientAffiliated);
      }
      if (Classification != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Classification);
      }
      if (IsClientClassified != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsClientClassified);
      }
      tracks_.WriteTo(ref output, _repeated_tracks_codec);
      if (OriginTime != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(OriginTime);
      }
      components_.WriteTo(ref output, _repeated_components_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ThreatId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ThreatId);
      }
      if (SourceSystem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceSystem);
      }
      if (ThreatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThreatName);
      }
      if (Priority != global::SAIC.Valkyrie.Api.V1.Priority.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Priority);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (dimension_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dimension);
      }
      if (UpdateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
      }
      if (ThreatState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ThreatState);
      }
      if (eta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Eta);
      }
      if (signalConfidence_ != null) {
        size += _single_signalConfidence_codec.CalculateSizeWithTag(SignalConfidence);
      }
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Affiliation);
      }
      if (IsClientAffiliated != false) {
        size += 1 + 1;
      }
      if (Classification != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Classification);
      }
      if (IsClientClassified != false) {
        size += 1 + 1;
      }
      size += tracks_.CalculateSize(_repeated_tracks_codec);
      if (OriginTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(OriginTime);
      }
      size += components_.CalculateSize(_repeated_components_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ThreatInfo other) {
      if (other == null) {
        return;
      }
      if (other.ThreatId != 0L) {
        ThreatId = other.ThreatId;
      }
      if (other.SourceSystem.Length != 0) {
        SourceSystem = other.SourceSystem;
      }
      if (other.ThreatName.Length != 0) {
        ThreatName = other.ThreatName;
      }
      if (other.Priority != global::SAIC.Valkyrie.Api.V1.Priority.None) {
        Priority = other.Priority;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.dimension_ != null) {
        if (dimension_ == null) {
          Dimension = new global::SAIC.Valkyrie.Api.V1.TargetDimension();
        }
        Dimension.MergeFrom(other.Dimension);
      }
      if (other.UpdateTime != 0L) {
        UpdateTime = other.UpdateTime;
      }
      if (other.ThreatState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        ThreatState = other.ThreatState;
      }
      if (other.eta_ != null) {
        if (eta_ == null) {
          Eta = new global::SAIC.Valkyrie.Api.V1.TargetEtaInfo();
        }
        Eta.MergeFrom(other.Eta);
      }
      if (other.signalConfidence_ != null) {
        if (signalConfidence_ == null || other.SignalConfidence != 0D) {
          SignalConfidence = other.SignalConfidence;
        }
      }
      if (other.Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        Affiliation = other.Affiliation;
      }
      if (other.IsClientAffiliated != false) {
        IsClientAffiliated = other.IsClientAffiliated;
      }
      if (other.Classification != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        Classification = other.Classification;
      }
      if (other.IsClientClassified != false) {
        IsClientClassified = other.IsClientClassified;
      }
      tracks_.Add(other.tracks_);
      if (other.OriginTime != 0L) {
        OriginTime = other.OriginTime;
      }
      components_.Add(other.components_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ThreatId = input.ReadInt64();
            break;
          }
          case 18: {
            SourceSystem = input.ReadString();
            break;
          }
          case 26: {
            ThreatName = input.ReadString();
            break;
          }
          case 32: {
            Priority = (global::SAIC.Valkyrie.Api.V1.Priority) input.ReadEnum();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 50: {
            if (dimension_ == null) {
              Dimension = new global::SAIC.Valkyrie.Api.V1.TargetDimension();
            }
            input.ReadMessage(Dimension);
            break;
          }
          case 56: {
            UpdateTime = input.ReadInt64();
            break;
          }
          case 64: {
            ThreatState = (global::SAIC.Valkyrie.Api.V1.TargetDeliveryState) input.ReadEnum();
            break;
          }
          case 74: {
            if (eta_ == null) {
              Eta = new global::SAIC.Valkyrie.Api.V1.TargetEtaInfo();
            }
            input.ReadMessage(Eta);
            break;
          }
          case 82: {
            double? value = _single_signalConfidence_codec.Read(input);
            if (signalConfidence_ == null || value != 0D) {
              SignalConfidence = value;
            }
            break;
          }
          case 88: {
            Affiliation = (global::SAIC.Valkyrie.Api.V1.TargetAffiliation) input.ReadEnum();
            break;
          }
          case 96: {
            IsClientAffiliated = input.ReadBool();
            break;
          }
          case 104: {
            Classification = (global::SAIC.Valkyrie.Api.V1.TargetClassification) input.ReadEnum();
            break;
          }
          case 112: {
            IsClientClassified = input.ReadBool();
            break;
          }
          case 122: {
            tracks_.AddEntriesFrom(input, _repeated_tracks_codec);
            break;
          }
          case 128: {
            OriginTime = input.ReadInt64();
            break;
          }
          case 138: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ThreatId = input.ReadInt64();
            break;
          }
          case 18: {
            SourceSystem = input.ReadString();
            break;
          }
          case 26: {
            ThreatName = input.ReadString();
            break;
          }
          case 32: {
            Priority = (global::SAIC.Valkyrie.Api.V1.Priority) input.ReadEnum();
            break;
          }
          case 42: {
            string value = _single_description_codec.Read(ref input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 50: {
            if (dimension_ == null) {
              Dimension = new global::SAIC.Valkyrie.Api.V1.TargetDimension();
            }
            input.ReadMessage(Dimension);
            break;
          }
          case 56: {
            UpdateTime = input.ReadInt64();
            break;
          }
          case 64: {
            ThreatState = (global::SAIC.Valkyrie.Api.V1.TargetDeliveryState) input.ReadEnum();
            break;
          }
          case 74: {
            if (eta_ == null) {
              Eta = new global::SAIC.Valkyrie.Api.V1.TargetEtaInfo();
            }
            input.ReadMessage(Eta);
            break;
          }
          case 82: {
            double? value = _single_signalConfidence_codec.Read(ref input);
            if (signalConfidence_ == null || value != 0D) {
              SignalConfidence = value;
            }
            break;
          }
          case 88: {
            Affiliation = (global::SAIC.Valkyrie.Api.V1.TargetAffiliation) input.ReadEnum();
            break;
          }
          case 96: {
            IsClientAffiliated = input.ReadBool();
            break;
          }
          case 104: {
            Classification = (global::SAIC.Valkyrie.Api.V1.TargetClassification) input.ReadEnum();
            break;
          }
          case 112: {
            IsClientClassified = input.ReadBool();
            break;
          }
          case 122: {
            tracks_.AddEntriesFrom(ref input, _repeated_tracks_codec);
            break;
          }
          case 128: {
            OriginTime = input.ReadInt64();
            break;
          }
          case 138: {
            components_.AddEntriesFrom(ref input, _repeated_components_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TrackInfo message contains details for one track within the system. This can be a standalone
  /// track coming from a device, and it also is a repeated field within threats.
  /// </summary>
  public sealed partial class TrackInfo : pb::IMessage<TrackInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackInfo> _parser = new pb::MessageParser<TrackInfo>(() => new TrackInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackInfo(TrackInfo other) : this() {
      trackId_ = other.trackId_;
      timestamp_ = other.timestamp_;
      sourceSystem_ = other.sourceSystem_;
      sourceDevice_ = other.sourceDevice_;
      affiliation_ = other.affiliation_;
      dimension_ = other.dimension_ != null ? other.dimension_.Clone() : null;
      trackType_ = other.trackType_;
      trackState_ = other.trackState_;
      SerialNumber = other.SerialNumber;
      classification_ = other.classification_ != null ? other.classification_.Clone() : null;
      qualities_ = other.qualities_ != null ? other.qualities_.Clone() : null;
      feature_ = other.feature_ != null ? other.feature_.Clone() : null;
      components_ = other.components_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackInfo Clone() {
      return new TrackInfo(this);
    }

    /// <summary>Field number for the "trackId" field.</summary>
    public const int TrackIdFieldNumber = 1;
    private long trackId_;
    /// <summary>
    /// id used to tie the detection information to a threat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TrackId {
      get { return trackId_; }
      set {
        trackId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    /// <summary>
    /// the time the information was generated (milliseconds since epoch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "sourceSystem" field.</summary>
    public const int SourceSystemFieldNumber = 3;
    private string sourceSystem_ = "";
    /// <summary>
    /// id of the system/application that generated the information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceSystem {
      get { return sourceSystem_; }
      set {
        sourceSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourceDevice" field.</summary>
    public const int SourceDeviceFieldNumber = 4;
    private string sourceDevice_ = "";
    /// <summary>
    /// id of the actual device that generated the information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceDevice {
      get { return sourceDevice_; }
      set {
        sourceDevice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "affiliation" field.</summary>
    public const int AffiliationFieldNumber = 5;
    private global::SAIC.Valkyrie.Api.V1.TargetAffiliation affiliation_ = global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending;
    /// <summary>
    /// track affiliation (if provided)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetAffiliation Affiliation {
      get { return affiliation_; }
      set {
        affiliation_ = value;
      }
    }

    /// <summary>Field number for the "dimension" field.</summary>
    public const int DimensionFieldNumber = 6;
    private global::SAIC.Valkyrie.Api.V1.TargetDimension dimension_;
    /// <summary>
    /// the roll up of target dimension information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetDimension Dimension {
      get { return dimension_; }
      set {
        dimension_ = value;
      }
    }

    /// <summary>Field number for the "trackType" field.</summary>
    public const int TrackTypeFieldNumber = 7;
    private global::SAIC.Valkyrie.Api.V1.TrackSystemType trackType_ = global::SAIC.Valkyrie.Api.V1.TrackSystemType.TrackSystemOther;
    /// <summary>
    /// a categorization of the type of system this track is coming from
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TrackSystemType TrackType {
      get { return trackType_; }
      set {
        trackType_ = value;
      }
    }

    /// <summary>Field number for the "trackState" field.</summary>
    public const int TrackStateFieldNumber = 8;
    private global::SAIC.Valkyrie.Api.V1.TargetDeliveryState trackState_ = global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown;
    /// <summary>
    /// delivery state of this track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetDeliveryState TrackState {
      get { return trackState_; }
      set {
        trackState_ = value;
      }
    }

    /// <summary>Field number for the "serialNumber" field.</summary>
    public const int SerialNumberFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_serialNumber_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string serialNumber_;
    /// <summary>
    /// the serial number of the device, if provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = value;
      }
    }


    /// <summary>Field number for the "classification" field.</summary>
    public const int ClassificationFieldNumber = 10;
    private global::SAIC.Valkyrie.Api.V1.TrackClassificationInfo classification_;
    /// <summary>
    /// classification information about the track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TrackClassificationInfo Classification {
      get { return classification_; }
      set {
        classification_ = value;
      }
    }

    /// <summary>Field number for the "qualities" field.</summary>
    public const int QualitiesFieldNumber = 11;
    private global::SAIC.Valkyrie.Api.V1.TrackQualities qualities_;
    /// <summary>
    /// extra qualities of this track that are mutually exclusive
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TrackQualities Qualities {
      get { return qualities_; }
      set {
        qualities_ = value;
      }
    }

    /// <summary>Field number for the "feature" field.</summary>
    public const int FeatureFieldNumber = 12;
    private global::SAIC.Valkyrie.Api.V1.TrackDiscriminationFeature feature_;
    /// <summary>
    /// specific business logic and parsing from TrackClassification values
    /// NOTE: singular because only one is set for a track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TrackDiscriminationFeature Feature {
      get { return feature_; }
      set {
        feature_ = value;
      }
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent> _repeated_components_codec
        = pb::FieldCodec.ForMessage(106, global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent> components_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent>();
    /// <summary>
    /// UAS components related to this Track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TargetLinkedComponent> Components {
      get { return components_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrackId != other.TrackId) return false;
      if (Timestamp != other.Timestamp) return false;
      if (SourceSystem != other.SourceSystem) return false;
      if (SourceDevice != other.SourceDevice) return false;
      if (Affiliation != other.Affiliation) return false;
      if (!object.Equals(Dimension, other.Dimension)) return false;
      if (TrackType != other.TrackType) return false;
      if (TrackState != other.TrackState) return false;
      if (SerialNumber != other.SerialNumber) return false;
      if (!object.Equals(Classification, other.Classification)) return false;
      if (!object.Equals(Qualities, other.Qualities)) return false;
      if (!object.Equals(Feature, other.Feature)) return false;
      if(!components_.Equals(other.components_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TrackId != 0L) hash ^= TrackId.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (SourceSystem.Length != 0) hash ^= SourceSystem.GetHashCode();
      if (SourceDevice.Length != 0) hash ^= SourceDevice.GetHashCode();
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) hash ^= Affiliation.GetHashCode();
      if (dimension_ != null) hash ^= Dimension.GetHashCode();
      if (TrackType != global::SAIC.Valkyrie.Api.V1.TrackSystemType.TrackSystemOther) hash ^= TrackType.GetHashCode();
      if (TrackState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) hash ^= TrackState.GetHashCode();
      if (serialNumber_ != null) hash ^= SerialNumber.GetHashCode();
      if (classification_ != null) hash ^= Classification.GetHashCode();
      if (qualities_ != null) hash ^= Qualities.GetHashCode();
      if (feature_ != null) hash ^= Feature.GetHashCode();
      hash ^= components_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TrackId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TrackId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (SourceSystem.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceSystem);
      }
      if (SourceDevice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceDevice);
      }
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Affiliation);
      }
      if (dimension_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dimension);
      }
      if (TrackType != global::SAIC.Valkyrie.Api.V1.TrackSystemType.TrackSystemOther) {
        output.WriteRawTag(56);
        output.WriteEnum((int) TrackType);
      }
      if (TrackState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TrackState);
      }
      if (serialNumber_ != null) {
        _single_serialNumber_codec.WriteTagAndValue(output, SerialNumber);
      }
      if (classification_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Classification);
      }
      if (qualities_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Qualities);
      }
      if (feature_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Feature);
      }
      components_.WriteTo(output, _repeated_components_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TrackId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TrackId);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (SourceSystem.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceSystem);
      }
      if (SourceDevice.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceDevice);
      }
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Affiliation);
      }
      if (dimension_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dimension);
      }
      if (TrackType != global::SAIC.Valkyrie.Api.V1.TrackSystemType.TrackSystemOther) {
        output.WriteRawTag(56);
        output.WriteEnum((int) TrackType);
      }
      if (TrackState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TrackState);
      }
      if (serialNumber_ != null) {
        _single_serialNumber_codec.WriteTagAndValue(ref output, SerialNumber);
      }
      if (classification_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Classification);
      }
      if (qualities_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Qualities);
      }
      if (feature_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Feature);
      }
      components_.WriteTo(ref output, _repeated_components_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TrackId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TrackId);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (SourceSystem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceSystem);
      }
      if (SourceDevice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceDevice);
      }
      if (Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Affiliation);
      }
      if (dimension_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dimension);
      }
      if (TrackType != global::SAIC.Valkyrie.Api.V1.TrackSystemType.TrackSystemOther) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrackType);
      }
      if (TrackState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrackState);
      }
      if (serialNumber_ != null) {
        size += _single_serialNumber_codec.CalculateSizeWithTag(SerialNumber);
      }
      if (classification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Classification);
      }
      if (qualities_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Qualities);
      }
      if (feature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Feature);
      }
      size += components_.CalculateSize(_repeated_components_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackInfo other) {
      if (other == null) {
        return;
      }
      if (other.TrackId != 0L) {
        TrackId = other.TrackId;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.SourceSystem.Length != 0) {
        SourceSystem = other.SourceSystem;
      }
      if (other.SourceDevice.Length != 0) {
        SourceDevice = other.SourceDevice;
      }
      if (other.Affiliation != global::SAIC.Valkyrie.Api.V1.TargetAffiliation.AffPending) {
        Affiliation = other.Affiliation;
      }
      if (other.dimension_ != null) {
        if (dimension_ == null) {
          Dimension = new global::SAIC.Valkyrie.Api.V1.TargetDimension();
        }
        Dimension.MergeFrom(other.Dimension);
      }
      if (other.TrackType != global::SAIC.Valkyrie.Api.V1.TrackSystemType.TrackSystemOther) {
        TrackType = other.TrackType;
      }
      if (other.TrackState != global::SAIC.Valkyrie.Api.V1.TargetDeliveryState.TargetStateUnknown) {
        TrackState = other.TrackState;
      }
      if (other.serialNumber_ != null) {
        if (serialNumber_ == null || other.SerialNumber != "") {
          SerialNumber = other.SerialNumber;
        }
      }
      if (other.classification_ != null) {
        if (classification_ == null) {
          Classification = new global::SAIC.Valkyrie.Api.V1.TrackClassificationInfo();
        }
        Classification.MergeFrom(other.Classification);
      }
      if (other.qualities_ != null) {
        if (qualities_ == null) {
          Qualities = new global::SAIC.Valkyrie.Api.V1.TrackQualities();
        }
        Qualities.MergeFrom(other.Qualities);
      }
      if (other.feature_ != null) {
        if (feature_ == null) {
          Feature = new global::SAIC.Valkyrie.Api.V1.TrackDiscriminationFeature();
        }
        Feature.MergeFrom(other.Feature);
      }
      components_.Add(other.components_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TrackId = input.ReadInt64();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            SourceSystem = input.ReadString();
            break;
          }
          case 34: {
            SourceDevice = input.ReadString();
            break;
          }
          case 40: {
            Affiliation = (global::SAIC.Valkyrie.Api.V1.TargetAffiliation) input.ReadEnum();
            break;
          }
          case 50: {
            if (dimension_ == null) {
              Dimension = new global::SAIC.Valkyrie.Api.V1.TargetDimension();
            }
            input.ReadMessage(Dimension);
            break;
          }
          case 56: {
            TrackType = (global::SAIC.Valkyrie.Api.V1.TrackSystemType) input.ReadEnum();
            break;
          }
          case 64: {
            TrackState = (global::SAIC.Valkyrie.Api.V1.TargetDeliveryState) input.ReadEnum();
            break;
          }
          case 74: {
            string value = _single_serialNumber_codec.Read(input);
            if (serialNumber_ == null || value != "") {
              SerialNumber = value;
            }
            break;
          }
          case 82: {
            if (classification_ == null) {
              Classification = new global::SAIC.Valkyrie.Api.V1.TrackClassificationInfo();
            }
            input.ReadMessage(Classification);
            break;
          }
          case 90: {
            if (qualities_ == null) {
              Qualities = new global::SAIC.Valkyrie.Api.V1.TrackQualities();
            }
            input.ReadMessage(Qualities);
            break;
          }
          case 98: {
            if (feature_ == null) {
              Feature = new global::SAIC.Valkyrie.Api.V1.TrackDiscriminationFeature();
            }
            input.ReadMessage(Feature);
            break;
          }
          case 106: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TrackId = input.ReadInt64();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            SourceSystem = input.ReadString();
            break;
          }
          case 34: {
            SourceDevice = input.ReadString();
            break;
          }
          case 40: {
            Affiliation = (global::SAIC.Valkyrie.Api.V1.TargetAffiliation) input.ReadEnum();
            break;
          }
          case 50: {
            if (dimension_ == null) {
              Dimension = new global::SAIC.Valkyrie.Api.V1.TargetDimension();
            }
            input.ReadMessage(Dimension);
            break;
          }
          case 56: {
            TrackType = (global::SAIC.Valkyrie.Api.V1.TrackSystemType) input.ReadEnum();
            break;
          }
          case 64: {
            TrackState = (global::SAIC.Valkyrie.Api.V1.TargetDeliveryState) input.ReadEnum();
            break;
          }
          case 74: {
            string value = _single_serialNumber_codec.Read(ref input);
            if (serialNumber_ == null || value != "") {
              SerialNumber = value;
            }
            break;
          }
          case 82: {
            if (classification_ == null) {
              Classification = new global::SAIC.Valkyrie.Api.V1.TrackClassificationInfo();
            }
            input.ReadMessage(Classification);
            break;
          }
          case 90: {
            if (qualities_ == null) {
              Qualities = new global::SAIC.Valkyrie.Api.V1.TrackQualities();
            }
            input.ReadMessage(Qualities);
            break;
          }
          case 98: {
            if (feature_ == null) {
              Feature = new global::SAIC.Valkyrie.Api.V1.TrackDiscriminationFeature();
            }
            input.ReadMessage(Feature);
            break;
          }
          case 106: {
            components_.AddEntriesFrom(ref input, _repeated_components_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TrackDiscriminationFeature message contains specific evaluations and business logic for information
  /// contained within a repeated track discrimination value.
  /// </summary>
  public sealed partial class TrackDiscriminationFeature : pb::IMessage<TrackDiscriminationFeature>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackDiscriminationFeature> _parser = new pb::MessageParser<TrackDiscriminationFeature>(() => new TrackDiscriminationFeature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackDiscriminationFeature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDiscriminationFeature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDiscriminationFeature(TrackDiscriminationFeature other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDiscriminationFeature Clone() {
      return new TrackDiscriminationFeature(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackDiscriminationFeature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackDiscriminationFeature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackDiscriminationFeature other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TrackClassification message contains classification details about a target.
  /// </summary>
  public sealed partial class TrackClassificationInfo : pb::IMessage<TrackClassificationInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackClassificationInfo> _parser = new pb::MessageParser<TrackClassificationInfo>(() => new TrackClassificationInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackClassificationInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackClassificationInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackClassificationInfo(TrackClassificationInfo other) : this() {
      type_ = other.type_;
      IsManMade = other.IsManMade;
      Confidence = other.Confidence;
      discriminations_ = other.discriminations_.Clone();
      DetectedDroneModel = other.DetectedDroneModel;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackClassificationInfo Clone() {
      return new TrackClassificationInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::SAIC.Valkyrie.Api.V1.TargetClassification type_ = global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending;
    /// <summary>
    /// The overall Classification of the track, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TargetClassification Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "isManMade" field.</summary>
    public const int IsManMadeFieldNumber = 2;
    private static readonly pb::FieldCodec<bool?> _single_isManMade_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
    private bool? isManMade_;
    /// <summary>
    /// Whether the track is determined to be man-made (true) or biological (false). Absence indicates that this is unknown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool? IsManMade {
      get { return isManMade_; }
      set {
        isManMade_ = value;
      }
    }


    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_confidence_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? confidence_;
    /// <summary>
    /// 0 - 1  The confidence of overall_type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }


    /// <summary>Field number for the "discriminations" field.</summary>
    public const int DiscriminationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SAIC.Valkyrie.Api.V1.TrackDiscrimination> _repeated_discriminations_codec
        = pb::FieldCodec.ForMessage(34, global::SAIC.Valkyrie.Api.V1.TrackDiscrimination.Parser);
    private readonly pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TrackDiscrimination> discriminations_ = new pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TrackDiscrimination>();
    /// <summary>
    /// The current discriminations/types for this track.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SAIC.Valkyrie.Api.V1.TrackDiscrimination> Discriminations {
      get { return discriminations_; }
    }

    /// <summary>Field number for the "detectedDroneModel" field.</summary>
    public const int DetectedDroneModelFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_detectedDroneModel_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string detectedDroneModel_;
    /// <summary>
    /// The detected model of the drone, if available
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DetectedDroneModel {
      get { return detectedDroneModel_; }
      set {
        detectedDroneModel_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackClassificationInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackClassificationInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (IsManMade != other.IsManMade) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if(!discriminations_.Equals(other.discriminations_)) return false;
      if (DetectedDroneModel != other.DetectedDroneModel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) hash ^= Type.GetHashCode();
      if (isManMade_ != null) hash ^= IsManMade.GetHashCode();
      if (confidence_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(Confidence);
      hash ^= discriminations_.GetHashCode();
      if (detectedDroneModel_ != null) hash ^= DetectedDroneModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (isManMade_ != null) {
        _single_isManMade_codec.WriteTagAndValue(output, IsManMade);
      }
      if (confidence_ != null) {
        _single_confidence_codec.WriteTagAndValue(output, Confidence);
      }
      discriminations_.WriteTo(output, _repeated_discriminations_codec);
      if (detectedDroneModel_ != null) {
        _single_detectedDroneModel_codec.WriteTagAndValue(output, DetectedDroneModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (isManMade_ != null) {
        _single_isManMade_codec.WriteTagAndValue(ref output, IsManMade);
      }
      if (confidence_ != null) {
        _single_confidence_codec.WriteTagAndValue(ref output, Confidence);
      }
      discriminations_.WriteTo(ref output, _repeated_discriminations_codec);
      if (detectedDroneModel_ != null) {
        _single_detectedDroneModel_codec.WriteTagAndValue(ref output, DetectedDroneModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (isManMade_ != null) {
        size += _single_isManMade_codec.CalculateSizeWithTag(IsManMade);
      }
      if (confidence_ != null) {
        size += _single_confidence_codec.CalculateSizeWithTag(Confidence);
      }
      size += discriminations_.CalculateSize(_repeated_discriminations_codec);
      if (detectedDroneModel_ != null) {
        size += _single_detectedDroneModel_codec.CalculateSizeWithTag(DetectedDroneModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackClassificationInfo other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::SAIC.Valkyrie.Api.V1.TargetClassification.ClassTypePending) {
        Type = other.Type;
      }
      if (other.isManMade_ != null) {
        if (isManMade_ == null || other.IsManMade != false) {
          IsManMade = other.IsManMade;
        }
      }
      if (other.confidence_ != null) {
        if (confidence_ == null || other.Confidence != 0D) {
          Confidence = other.Confidence;
        }
      }
      discriminations_.Add(other.discriminations_);
      if (other.detectedDroneModel_ != null) {
        if (detectedDroneModel_ == null || other.DetectedDroneModel != "") {
          DetectedDroneModel = other.DetectedDroneModel;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.TargetClassification) input.ReadEnum();
            break;
          }
          case 18: {
            bool? value = _single_isManMade_codec.Read(input);
            if (isManMade_ == null || value != false) {
              IsManMade = value;
            }
            break;
          }
          case 26: {
            double? value = _single_confidence_codec.Read(input);
            if (confidence_ == null || value != 0D) {
              Confidence = value;
            }
            break;
          }
          case 34: {
            discriminations_.AddEntriesFrom(input, _repeated_discriminations_codec);
            break;
          }
          case 42: {
            string value = _single_detectedDroneModel_codec.Read(input);
            if (detectedDroneModel_ == null || value != "") {
              DetectedDroneModel = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SAIC.Valkyrie.Api.V1.TargetClassification) input.ReadEnum();
            break;
          }
          case 18: {
            bool? value = _single_isManMade_codec.Read(ref input);
            if (isManMade_ == null || value != false) {
              IsManMade = value;
            }
            break;
          }
          case 26: {
            double? value = _single_confidence_codec.Read(ref input);
            if (confidence_ == null || value != 0D) {
              Confidence = value;
            }
            break;
          }
          case 34: {
            discriminations_.AddEntriesFrom(ref input, _repeated_discriminations_codec);
            break;
          }
          case 42: {
            string value = _single_detectedDroneModel_codec.Read(ref input);
            if (detectedDroneModel_ == null || value != "") {
              DetectedDroneModel = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TrackDiscrimination message contains discriminating values for a track, primarily as a series
  /// of name/value pairs (feature and discrimination) for placing additional information on a track used
  /// within the processing of tracks in the system.
  /// </summary>
  public sealed partial class TrackDiscrimination : pb::IMessage<TrackDiscrimination>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackDiscrimination> _parser = new pb::MessageParser<TrackDiscrimination>(() => new TrackDiscrimination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackDiscrimination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDiscrimination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDiscrimination(TrackDiscrimination other) : this() {
      Confidence = other.Confidence;
      Feature = other.Feature;
      Discrimination = other.Discrimination;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackDiscrimination Clone() {
      return new TrackDiscrimination(this);
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 1;
    private static readonly pb::FieldCodec<double?> _single_confidence_codec = pb::FieldCodec.ForStructWrapper<double>(10);
    private double? confidence_;
    /// <summary>
    /// 0 - 1  The confidence of this one discrimination
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }


    /// <summary>Field number for the "feature" field.</summary>
    public const int FeatureFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_feature_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string feature_;
    /// <summary>
    /// The name (key) of the feature for which this is a discrimination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Feature {
      get { return feature_; }
      set {
        feature_ = value;
      }
    }


    /// <summary>Field number for the "discrimination" field.</summary>
    public const int DiscriminationFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_discrimination_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string discrimination_;
    /// <summary>
    /// The value of the feature which this is a discrimination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Discrimination {
      get { return discrimination_; }
      set {
        discrimination_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackDiscrimination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackDiscrimination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if (Feature != other.Feature) return false;
      if (Discrimination != other.Discrimination) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (confidence_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(Confidence);
      if (feature_ != null) hash ^= Feature.GetHashCode();
      if (discrimination_ != null) hash ^= Discrimination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (confidence_ != null) {
        _single_confidence_codec.WriteTagAndValue(output, Confidence);
      }
      if (feature_ != null) {
        _single_feature_codec.WriteTagAndValue(output, Feature);
      }
      if (discrimination_ != null) {
        _single_discrimination_codec.WriteTagAndValue(output, Discrimination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (confidence_ != null) {
        _single_confidence_codec.WriteTagAndValue(ref output, Confidence);
      }
      if (feature_ != null) {
        _single_feature_codec.WriteTagAndValue(ref output, Feature);
      }
      if (discrimination_ != null) {
        _single_discrimination_codec.WriteTagAndValue(ref output, Discrimination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (confidence_ != null) {
        size += _single_confidence_codec.CalculateSizeWithTag(Confidence);
      }
      if (feature_ != null) {
        size += _single_feature_codec.CalculateSizeWithTag(Feature);
      }
      if (discrimination_ != null) {
        size += _single_discrimination_codec.CalculateSizeWithTag(Discrimination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackDiscrimination other) {
      if (other == null) {
        return;
      }
      if (other.confidence_ != null) {
        if (confidence_ == null || other.Confidence != 0D) {
          Confidence = other.Confidence;
        }
      }
      if (other.feature_ != null) {
        if (feature_ == null || other.Feature != "") {
          Feature = other.Feature;
        }
      }
      if (other.discrimination_ != null) {
        if (discrimination_ == null || other.Discrimination != "") {
          Discrimination = other.Discrimination;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            double? value = _single_confidence_codec.Read(input);
            if (confidence_ == null || value != 0D) {
              Confidence = value;
            }
            break;
          }
          case 18: {
            string value = _single_feature_codec.Read(input);
            if (feature_ == null || value != "") {
              Feature = value;
            }
            break;
          }
          case 26: {
            string value = _single_discrimination_codec.Read(input);
            if (discrimination_ == null || value != "") {
              Discrimination = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            double? value = _single_confidence_codec.Read(ref input);
            if (confidence_ == null || value != 0D) {
              Confidence = value;
            }
            break;
          }
          case 18: {
            string value = _single_feature_codec.Read(ref input);
            if (feature_ == null || value != "") {
              Feature = value;
            }
            break;
          }
          case 26: {
            string value = _single_discrimination_codec.Read(ref input);
            if (discrimination_ == null || value != "") {
              Discrimination = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TrackQualities message contains RF or acoustic qualities of a track. Note that only one of these
  /// quality fields can be set for a track.
  /// </summary>
  public sealed partial class TrackQualities : pb::IMessage<TrackQualities>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackQualities> _parser = new pb::MessageParser<TrackQualities>(() => new TrackQualities());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackQualities> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackQualities() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackQualities(TrackQualities other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.Acoustic:
          Acoustic = other.Acoustic.Clone();
          break;
        case DataOneofCase.Rf:
          Rf = other.Rf.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackQualities Clone() {
      return new TrackQualities(this);
    }

    /// <summary>Field number for the "acoustic" field.</summary>
    public const int AcousticFieldNumber = 1;
    /// <summary>
    /// acoustic qualities for this track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities Acoustic {
      get { return dataCase_ == DataOneofCase.Acoustic ? (global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Acoustic;
      }
    }

    /// <summary>Field number for the "rf" field.</summary>
    public const int RfFieldNumber = 2;
    /// <summary>
    /// rf qualities for this track
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SAIC.Valkyrie.Api.V1.TrackRfQualities Rf {
      get { return dataCase_ == DataOneofCase.Rf ? (global::SAIC.Valkyrie.Api.V1.TrackRfQualities) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Rf;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Acoustic = 1,
      Rf = 2,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackQualities);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackQualities other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Acoustic, other.Acoustic)) return false;
      if (!object.Equals(Rf, other.Rf)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.Acoustic) hash ^= Acoustic.GetHashCode();
      if (dataCase_ == DataOneofCase.Rf) hash ^= Rf.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataCase_ == DataOneofCase.Acoustic) {
        output.WriteRawTag(10);
        output.WriteMessage(Acoustic);
      }
      if (dataCase_ == DataOneofCase.Rf) {
        output.WriteRawTag(18);
        output.WriteMessage(Rf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataCase_ == DataOneofCase.Acoustic) {
        output.WriteRawTag(10);
        output.WriteMessage(Acoustic);
      }
      if (dataCase_ == DataOneofCase.Rf) {
        output.WriteRawTag(18);
        output.WriteMessage(Rf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.Acoustic) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Acoustic);
      }
      if (dataCase_ == DataOneofCase.Rf) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackQualities other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.Acoustic:
          if (Acoustic == null) {
            Acoustic = new global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities();
          }
          Acoustic.MergeFrom(other.Acoustic);
          break;
        case DataOneofCase.Rf:
          if (Rf == null) {
            Rf = new global::SAIC.Valkyrie.Api.V1.TrackRfQualities();
          }
          Rf.MergeFrom(other.Rf);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities subBuilder = new global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities();
            if (dataCase_ == DataOneofCase.Acoustic) {
              subBuilder.MergeFrom(Acoustic);
            }
            input.ReadMessage(subBuilder);
            Acoustic = subBuilder;
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.TrackRfQualities subBuilder = new global::SAIC.Valkyrie.Api.V1.TrackRfQualities();
            if (dataCase_ == DataOneofCase.Rf) {
              subBuilder.MergeFrom(Rf);
            }
            input.ReadMessage(subBuilder);
            Rf = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities subBuilder = new global::SAIC.Valkyrie.Api.V1.TrackAcousticQualities();
            if (dataCase_ == DataOneofCase.Acoustic) {
              subBuilder.MergeFrom(Acoustic);
            }
            input.ReadMessage(subBuilder);
            Acoustic = subBuilder;
            break;
          }
          case 18: {
            global::SAIC.Valkyrie.Api.V1.TrackRfQualities subBuilder = new global::SAIC.Valkyrie.Api.V1.TrackRfQualities();
            if (dataCase_ == DataOneofCase.Rf) {
              subBuilder.MergeFrom(Rf);
            }
            input.ReadMessage(subBuilder);
            Rf = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TrackRfQualities message contains details for one RF-based track.
  /// </summary>
  public sealed partial class TrackRfQualities : pb::IMessage<TrackRfQualities>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackRfQualities> _parser = new pb::MessageParser<TrackRfQualities>(() => new TrackRfQualities());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackRfQualities> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackRfQualities() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackRfQualities(TrackRfQualities other) : this() {
      signalType_ = other.signalType_;
      Frequency = other.Frequency;
      MacAddress = other.MacAddress;
      SignalStrength = other.SignalStrength;
      Video = other.Video;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackRfQualities Clone() {
      return new TrackRfQualities(this);
    }

    /// <summary>Field number for the "signalType" field.</summary>
    public const int SignalTypeFieldNumber = 1;
    private string signalType_ = "";
    /// <summary>
    /// A string indicating what kind of EW signal is present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SignalType {
      get { return signalType_; }
      set {
        signalType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_frequency_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? frequency_;
    /// <summary>
    /// Frequency of the track (Units: MHz)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }


    /// <summary>Field number for the "macAddress" field.</summary>
    public const int MacAddressFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_macAddress_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string macAddress_;
    /// <summary>
    /// MAC Address of the track in XX:XX:XX:XX:XX:XX format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MacAddress {
      get { return macAddress_; }
      set {
        macAddress_ = value;
      }
    }


    /// <summary>Field number for the "signalStrength" field.</summary>
    public const int SignalStrengthFieldNumber = 4;
    private static readonly pb::FieldCodec<double?> _single_signalStrength_codec = pb::FieldCodec.ForStructWrapper<double>(34);
    private double? signalStrength_;
    /// <summary>
    /// Indicates signal power level (Units: dB)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? SignalStrength {
      get { return signalStrength_; }
      set {
        signalStrength_ = value;
      }
    }


    /// <summary>Field number for the "video" field.</summary>
    public const int VideoFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_video_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string video_;
    /// <summary>
    /// Indicates the system is providing a stream for the target’s video feed, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Video {
      get { return video_; }
      set {
        video_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackRfQualities);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackRfQualities other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignalType != other.SignalType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(Frequency, other.Frequency)) return false;
      if (MacAddress != other.MacAddress) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(SignalStrength, other.SignalStrength)) return false;
      if (Video != other.Video) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SignalType.Length != 0) hash ^= SignalType.GetHashCode();
      if (frequency_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(Frequency);
      if (macAddress_ != null) hash ^= MacAddress.GetHashCode();
      if (signalStrength_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(SignalStrength);
      if (video_ != null) hash ^= Video.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SignalType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SignalType);
      }
      if (frequency_ != null) {
        _single_frequency_codec.WriteTagAndValue(output, Frequency);
      }
      if (macAddress_ != null) {
        _single_macAddress_codec.WriteTagAndValue(output, MacAddress);
      }
      if (signalStrength_ != null) {
        _single_signalStrength_codec.WriteTagAndValue(output, SignalStrength);
      }
      if (video_ != null) {
        _single_video_codec.WriteTagAndValue(output, Video);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SignalType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SignalType);
      }
      if (frequency_ != null) {
        _single_frequency_codec.WriteTagAndValue(ref output, Frequency);
      }
      if (macAddress_ != null) {
        _single_macAddress_codec.WriteTagAndValue(ref output, MacAddress);
      }
      if (signalStrength_ != null) {
        _single_signalStrength_codec.WriteTagAndValue(ref output, SignalStrength);
      }
      if (video_ != null) {
        _single_video_codec.WriteTagAndValue(ref output, Video);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SignalType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignalType);
      }
      if (frequency_ != null) {
        size += _single_frequency_codec.CalculateSizeWithTag(Frequency);
      }
      if (macAddress_ != null) {
        size += _single_macAddress_codec.CalculateSizeWithTag(MacAddress);
      }
      if (signalStrength_ != null) {
        size += _single_signalStrength_codec.CalculateSizeWithTag(SignalStrength);
      }
      if (video_ != null) {
        size += _single_video_codec.CalculateSizeWithTag(Video);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackRfQualities other) {
      if (other == null) {
        return;
      }
      if (other.SignalType.Length != 0) {
        SignalType = other.SignalType;
      }
      if (other.frequency_ != null) {
        if (frequency_ == null || other.Frequency != 0D) {
          Frequency = other.Frequency;
        }
      }
      if (other.macAddress_ != null) {
        if (macAddress_ == null || other.MacAddress != "") {
          MacAddress = other.MacAddress;
        }
      }
      if (other.signalStrength_ != null) {
        if (signalStrength_ == null || other.SignalStrength != 0D) {
          SignalStrength = other.SignalStrength;
        }
      }
      if (other.video_ != null) {
        if (video_ == null || other.Video != "") {
          Video = other.Video;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SignalType = input.ReadString();
            break;
          }
          case 18: {
            double? value = _single_frequency_codec.Read(input);
            if (frequency_ == null || value != 0D) {
              Frequency = value;
            }
            break;
          }
          case 26: {
            string value = _single_macAddress_codec.Read(input);
            if (macAddress_ == null || value != "") {
              MacAddress = value;
            }
            break;
          }
          case 34: {
            double? value = _single_signalStrength_codec.Read(input);
            if (signalStrength_ == null || value != 0D) {
              SignalStrength = value;
            }
            break;
          }
          case 42: {
            string value = _single_video_codec.Read(input);
            if (video_ == null || value != "") {
              Video = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SignalType = input.ReadString();
            break;
          }
          case 18: {
            double? value = _single_frequency_codec.Read(ref input);
            if (frequency_ == null || value != 0D) {
              Frequency = value;
            }
            break;
          }
          case 26: {
            string value = _single_macAddress_codec.Read(ref input);
            if (macAddress_ == null || value != "") {
              MacAddress = value;
            }
            break;
          }
          case 34: {
            double? value = _single_signalStrength_codec.Read(ref input);
            if (signalStrength_ == null || value != 0D) {
              SignalStrength = value;
            }
            break;
          }
          case 42: {
            string value = _single_video_codec.Read(ref input);
            if (video_ == null || value != "") {
              Video = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// The TrackAcousticQualities message contains details for one acoustic-based track.
  /// </summary>
  public sealed partial class TrackAcousticQualities : pb::IMessage<TrackAcousticQualities>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrackAcousticQualities> _parser = new pb::MessageParser<TrackAcousticQualities>(() => new TrackAcousticQualities());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrackAcousticQualities> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SAIC.Valkyrie.Api.V1.ThreatsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackAcousticQualities() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackAcousticQualities(TrackAcousticQualities other) : this() {
      signalType_ = other.signalType_;
      SignalConfidence = other.SignalConfidence;
      AbsoluteAmplitude = other.AbsoluteAmplitude;
      RelativeAmplitude = other.RelativeAmplitude;
      Frequency = other.Frequency;
      FundamentalFrequency = other.FundamentalFrequency;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrackAcousticQualities Clone() {
      return new TrackAcousticQualities(this);
    }

    /// <summary>Field number for the "signalType" field.</summary>
    public const int SignalTypeFieldNumber = 1;
    private string signalType_ = "";
    /// <summary>
    /// A string indicating what kind of audio signal is present
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SignalType {
      get { return signalType_; }
      set {
        signalType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signalConfidence" field.</summary>
    public const int SignalConfidenceFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_signalConfidence_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? signalConfidence_;
    /// <summary>
    /// 0 - 1 Indicates the Confidence of the signal estimate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? SignalConfidence {
      get { return signalConfidence_; }
      set {
        signalConfidence_ = value;
      }
    }


    /// <summary>Field number for the "absoluteAmplitude" field.</summary>
    public const int AbsoluteAmplitudeFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_absoluteAmplitude_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? absoluteAmplitude_;
    /// <summary>
    /// Absolute amplitude of the track (Units: dB)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? AbsoluteAmplitude {
      get { return absoluteAmplitude_; }
      set {
        absoluteAmplitude_ = value;
      }
    }


    /// <summary>Field number for the "relativeAmplitude" field.</summary>
    public const int RelativeAmplitudeFieldNumber = 4;
    private static readonly pb::FieldCodec<double?> _single_relativeAmplitude_codec = pb::FieldCodec.ForStructWrapper<double>(34);
    private double? relativeAmplitude_;
    /// <summary>
    /// Relative amplitude of the track (Units: dB)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? RelativeAmplitude {
      get { return relativeAmplitude_; }
      set {
        relativeAmplitude_ = value;
      }
    }


    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 5;
    private static readonly pb::FieldCodec<double?> _single_frequency_codec = pb::FieldCodec.ForStructWrapper<double>(42);
    private double? frequency_;
    /// <summary>
    ///  Frequency of the track (Units: Hz)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }


    /// <summary>Field number for the "fundamentalFrequency" field.</summary>
    public const int FundamentalFrequencyFieldNumber = 6;
    private static readonly pb::FieldCodec<double?> _single_fundamentalFrequency_codec = pb::FieldCodec.ForStructWrapper<double>(50);
    private double? fundamentalFrequency_;
    /// <summary>
    ///  fundamental Frequency of the track (Units: Hz)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double? FundamentalFrequency {
      get { return fundamentalFrequency_; }
      set {
        fundamentalFrequency_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrackAcousticQualities);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrackAcousticQualities other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignalType != other.SignalType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(SignalConfidence, other.SignalConfidence)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(AbsoluteAmplitude, other.AbsoluteAmplitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(RelativeAmplitude, other.RelativeAmplitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(Frequency, other.Frequency)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(FundamentalFrequency, other.FundamentalFrequency)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SignalType.Length != 0) hash ^= SignalType.GetHashCode();
      if (signalConfidence_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(SignalConfidence);
      if (absoluteAmplitude_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(AbsoluteAmplitude);
      if (relativeAmplitude_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(RelativeAmplitude);
      if (frequency_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(Frequency);
      if (fundamentalFrequency_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(FundamentalFrequency);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SignalType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SignalType);
      }
      if (signalConfidence_ != null) {
        _single_signalConfidence_codec.WriteTagAndValue(output, SignalConfidence);
      }
      if (absoluteAmplitude_ != null) {
        _single_absoluteAmplitude_codec.WriteTagAndValue(output, AbsoluteAmplitude);
      }
      if (relativeAmplitude_ != null) {
        _single_relativeAmplitude_codec.WriteTagAndValue(output, RelativeAmplitude);
      }
      if (frequency_ != null) {
        _single_frequency_codec.WriteTagAndValue(output, Frequency);
      }
      if (fundamentalFrequency_ != null) {
        _single_fundamentalFrequency_codec.WriteTagAndValue(output, FundamentalFrequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SignalType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SignalType);
      }
      if (signalConfidence_ != null) {
        _single_signalConfidence_codec.WriteTagAndValue(ref output, SignalConfidence);
      }
      if (absoluteAmplitude_ != null) {
        _single_absoluteAmplitude_codec.WriteTagAndValue(ref output, AbsoluteAmplitude);
      }
      if (relativeAmplitude_ != null) {
        _single_relativeAmplitude_codec.WriteTagAndValue(ref output, RelativeAmplitude);
      }
      if (frequency_ != null) {
        _single_frequency_codec.WriteTagAndValue(ref output, Frequency);
      }
      if (fundamentalFrequency_ != null) {
        _single_fundamentalFrequency_codec.WriteTagAndValue(ref output, FundamentalFrequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SignalType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignalType);
      }
      if (signalConfidence_ != null) {
        size += _single_signalConfidence_codec.CalculateSizeWithTag(SignalConfidence);
      }
      if (absoluteAmplitude_ != null) {
        size += _single_absoluteAmplitude_codec.CalculateSizeWithTag(AbsoluteAmplitude);
      }
      if (relativeAmplitude_ != null) {
        size += _single_relativeAmplitude_codec.CalculateSizeWithTag(RelativeAmplitude);
      }
      if (frequency_ != null) {
        size += _single_frequency_codec.CalculateSizeWithTag(Frequency);
      }
      if (fundamentalFrequency_ != null) {
        size += _single_fundamentalFrequency_codec.CalculateSizeWithTag(FundamentalFrequency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrackAcousticQualities other) {
      if (other == null) {
        return;
      }
      if (other.SignalType.Length != 0) {
        SignalType = other.SignalType;
      }
      if (other.signalConfidence_ != null) {
        if (signalConfidence_ == null || other.SignalConfidence != 0D) {
          SignalConfidence = other.SignalConfidence;
        }
      }
      if (other.absoluteAmplitude_ != null) {
        if (absoluteAmplitude_ == null || other.AbsoluteAmplitude != 0D) {
          AbsoluteAmplitude = other.AbsoluteAmplitude;
        }
      }
      if (other.relativeAmplitude_ != null) {
        if (relativeAmplitude_ == null || other.RelativeAmplitude != 0D) {
          RelativeAmplitude = other.RelativeAmplitude;
        }
      }
      if (other.frequency_ != null) {
        if (frequency_ == null || other.Frequency != 0D) {
          Frequency = other.Frequency;
        }
      }
      if (other.fundamentalFrequency_ != null) {
        if (fundamentalFrequency_ == null || other.FundamentalFrequency != 0D) {
          FundamentalFrequency = other.FundamentalFrequency;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SignalType = input.ReadString();
            break;
          }
          case 18: {
            double? value = _single_signalConfidence_codec.Read(input);
            if (signalConfidence_ == null || value != 0D) {
              SignalConfidence = value;
            }
            break;
          }
          case 26: {
            double? value = _single_absoluteAmplitude_codec.Read(input);
            if (absoluteAmplitude_ == null || value != 0D) {
              AbsoluteAmplitude = value;
            }
            break;
          }
          case 34: {
            double? value = _single_relativeAmplitude_codec.Read(input);
            if (relativeAmplitude_ == null || value != 0D) {
              RelativeAmplitude = value;
            }
            break;
          }
          case 42: {
            double? value = _single_frequency_codec.Read(input);
            if (frequency_ == null || value != 0D) {
              Frequency = value;
            }
            break;
          }
          case 50: {
            double? value = _single_fundamentalFrequency_codec.Read(input);
            if (fundamentalFrequency_ == null || value != 0D) {
              FundamentalFrequency = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SignalType = input.ReadString();
            break;
          }
          case 18: {
            double? value = _single_signalConfidence_codec.Read(ref input);
            if (signalConfidence_ == null || value != 0D) {
              SignalConfidence = value;
            }
            break;
          }
          case 26: {
            double? value = _single_absoluteAmplitude_codec.Read(ref input);
            if (absoluteAmplitude_ == null || value != 0D) {
              AbsoluteAmplitude = value;
            }
            break;
          }
          case 34: {
            double? value = _single_relativeAmplitude_codec.Read(ref input);
            if (relativeAmplitude_ == null || value != 0D) {
              RelativeAmplitude = value;
            }
            break;
          }
          case 42: {
            double? value = _single_frequency_codec.Read(ref input);
            if (frequency_ == null || value != 0D) {
              Frequency = value;
            }
            break;
          }
          case 50: {
            double? value = _single_fundamentalFrequency_codec.Read(ref input);
            if (fundamentalFrequency_ == null || value != 0D) {
              FundamentalFrequency = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
